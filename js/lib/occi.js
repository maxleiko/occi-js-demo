(function (Kotlin) {
  'use strict';
  var _ = Kotlin.defineRootPackage(null, /** @lends _ */ {
    org: Kotlin.definePackage(null, /** @lends _.org */ {
      kevoree: Kotlin.definePackage(null, /** @lends _.org.kevoree */ {
        log: Kotlin.definePackage(function () {
          this.Log = Kotlin.createObject(null, function () {
            this.LEVEL_NONE = 6;
            this.LEVEL_ERROR = 5;
            this.LEVEL_WARN = 4;
            this.LEVEL_INFO = 3;
            this.LEVEL_DEBUG = 2;
            this.LEVEL_TRACE = 1;
            this.$level_qhmnt5$ = this.LEVEL_INFO;
            this._ERROR_oj0992$ = this.level <= this.LEVEL_ERROR;
            this._WARN_qp2148$ = this.level <= this.LEVEL_WARN;
            this._INFO_qpapkw$ = this.level <= this.LEVEL_INFO;
            this._DEBUG_oi7u3l$ = this.level <= this.LEVEL_DEBUG;
            this._TRACE_or8t8z$ = this.level <= this.LEVEL_TRACE;
            this.logger = new _.org.kevoree.log.Logger();
            this.beginParam = '{';
            this.endParam = '}';
          }, {
            level: {
              get: function () {
                return this.$level_qhmnt5$;
              },
              set: function (newLevel) {
                this.$level_qhmnt5$ = newLevel;
                this._ERROR_oj0992$ = newLevel <= this.LEVEL_ERROR;
                this._WARN_qp2148$ = newLevel <= this.LEVEL_WARN;
                this._INFO_qpapkw$ = newLevel <= this.LEVEL_INFO;
                this._DEBUG_oi7u3l$ = newLevel <= this.LEVEL_DEBUG;
                this._TRACE_or8t8z$ = newLevel <= this.LEVEL_TRACE;
              }
            },
            NONE: function () {
              this.level = this.LEVEL_NONE;
            },
            ERROR: function () {
              this.level = this.LEVEL_ERROR;
            },
            WARN: function () {
              this.level = this.LEVEL_WARN;
            },
            INFO: function () {
              this.level = this.LEVEL_INFO;
            },
            DEBUG: function () {
              this.level = this.LEVEL_DEBUG;
            },
            TRACE: function () {
              this.level = this.LEVEL_TRACE;
            },
            processMessage: function (message, p1, p2, p3, p4, p5) {
              if (p1 == null) {
                return message;
              }
              var buffer = new Kotlin.StringBuilder();
              var previousCharfound = false;
              var param = 0;
              var i = 0;
              while (i < message.length) {
                var currentChar = message.charAt(i);
                if (previousCharfound) {
                  if (currentChar === this.endParam) {
                    param++;
                    {
                      if (param === 1) {
                        buffer = new Kotlin.StringBuilder();
                        buffer.append(message.substring(0, i - 1));
                        buffer.append((p1 != null ? p1 : Kotlin.throwNPE()).toString());
                      }
                       else if (param === 2) {
                        buffer.append((p2 != null ? p2 : Kotlin.throwNPE()).toString());
                      }
                       else if (param === 3) {
                        buffer.append((p3 != null ? p3 : Kotlin.throwNPE()).toString());
                      }
                       else if (param === 4) {
                        buffer.append((p4 != null ? p4 : Kotlin.throwNPE()).toString());
                      }
                       else if (param === 5) {
                        buffer.append((p5 != null ? p5 : Kotlin.throwNPE()).toString());
                      }
                       else {
                      }
                    }
                    previousCharfound = false;
                  }
                   else {
                    if (buffer != null) {
                      message.charAt(i - 1);
                      buffer.append(currentChar);
                    }
                    previousCharfound = false;
                  }
                }
                 else {
                  if (currentChar === this.beginParam) {
                    previousCharfound = true;
                  }
                   else {
                    if (buffer != null) {
                      buffer.append(currentChar);
                    }
                  }
                }
                i = i + 1;
              }
              if (buffer != null) {
                return buffer.toString();
              }
               else {
                return message;
              }
            },
            error_1: function (message, ex, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._ERROR_oj0992$) {
                this.internal_error(this.processMessage(message, p1, p2, p3, p4, p5), ex);
              }
            },
            error: function (message, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._ERROR_oj0992$) {
                this.internal_error(this.processMessage(message, p1, p2, p3, p4, p5), null);
              }
            },
            internal_error: function (message, ex) {
              this.logger.log(this.LEVEL_ERROR, message, ex);
            },
            warn_1: function (message, ex, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._WARN_qp2148$) {
                this.internal_warn(this.processMessage(message, p1, p2, p3, p4, p5), ex);
              }
            },
            warn: function (message, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._WARN_qp2148$) {
                this.internal_warn(this.processMessage(message, p1, p2, p3, p4, p5), null);
              }
            },
            internal_warn: function (message, ex) {
              this.logger.log(this.LEVEL_WARN, message, ex);
            },
            info_1: function (message, ex, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._INFO_qpapkw$) {
                this.internal_info(this.processMessage(message, p1, p2, p3, p4, p5), ex);
              }
            },
            info: function (message, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._INFO_qpapkw$) {
                this.internal_info(this.processMessage(message, p1, p2, p3, p4, p5), null);
              }
            },
            internal_info: function (message, ex) {
              this.logger.log(this.LEVEL_INFO, message, ex);
            },
            debug_1: function (message, ex, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._DEBUG_oi7u3l$) {
                this.internal_debug(this.processMessage(message, p1, p2, p3, p4, p5), ex);
              }
            },
            debug: function (message, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._DEBUG_oi7u3l$) {
                this.internal_debug(this.processMessage(message, p1, p2, p3, p4, p5), null);
              }
            },
            internal_debug: function (message, ex) {
              this.logger.log(this.LEVEL_DEBUG, message, ex);
            },
            trace_1: function (message, ex, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._TRACE_or8t8z$) {
                this.internal_trace(this.processMessage(message, p1, p2, p3, p4, p5), ex);
              }
            },
            trace: function (message, p1, p2, p3, p4, p5) {
              if (p1 === void 0)
                p1 = null;
              if (p2 === void 0)
                p2 = null;
              if (p3 === void 0)
                p3 = null;
              if (p4 === void 0)
                p4 = null;
              if (p5 === void 0)
                p5 = null;
              if (this._TRACE_or8t8z$) {
                this.internal_trace(this.processMessage(message, p1, p2, p3, p4, p5), null);
              }
            },
            internal_trace: function (message, ex) {
              this.logger.log(this.LEVEL_TRACE, message, ex);
            }
          });
        }, /** @lends _.org.kevoree.log */ {
          Logger: Kotlin.createClass(null, function () {
            this.firstLogTime = (new Date()).getTime();
            this.error_msg = ' ERROR: ';
            this.warn_msg = ' WARN: ';
            this.info_msg = ' INFO: ';
            this.debug_msg = ' DEBUG: ';
            this.trace_msg = ' TRACE: ';
            this.category = null;
          }, /** @lends _.org.kevoree.log.Logger.prototype */ {
            setCategory: function (category) {
              this.category = category;
            },
            log: function (level, message, ex) {
              var builder = new Kotlin.StringBuilder();
              var time = (new Date()).getTime() - this.firstLogTime;
              var minutes = time / (1000 * 60) | 0;
              var seconds = (time / 1000 | 0) % 60;
              if (minutes <= 9)
                builder.append('0');
              builder.append(minutes.toString());
              builder.append(':');
              if (seconds <= 9)
                builder.append('0');
              builder.append(seconds.toString());
              {
                if (level === _.org.kevoree.log.Log.LEVEL_ERROR) {
                  builder.append(this.error_msg);
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_WARN) {
                  builder.append(this.warn_msg);
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_INFO) {
                  builder.append(this.info_msg);
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_DEBUG) {
                  builder.append(this.debug_msg);
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_TRACE) {
                  builder.append(this.trace_msg);
                }
                 else {
                }
              }
              if (this.category != null) {
                builder.append('[');
                var tmp$0;
                builder.append(((tmp$0 = this.category) != null ? tmp$0 : Kotlin.throwNPE()).toString());
                builder.append('] ');
              }
              builder.append(message);
              if (ex != null) {
                builder.append(Kotlin.toString(ex.getMessage()));
              }
              {
                if (level === _.org.kevoree.log.Log.LEVEL_ERROR) {
                  console.error(builder.toString());
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_WARN) {
                  console.warn(builder.toString());
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_INFO) {
                  console.info(builder.toString());
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_DEBUG) {
                  console.log(builder.toString());
                }
                 else if (level === _.org.kevoree.log.Log.LEVEL_TRACE) {
                  console.log(builder.toString());
                }
                 else {
                }
              }
            }
          })
        }),
        modeling: Kotlin.definePackage(null, /** @lends _.org.kevoree.modeling */ {
          api: Kotlin.definePackage(null, /** @lends _.org.kevoree.modeling.api */ {
            time: Kotlin.definePackage(function () {
              this.TimeComparator = Kotlin.createObject(null, null, {
                compare: function (a, b) {
                  if (a === b) {
                    return 0;
                  }
                   else {
                    if (a < b) {
                      return -1;
                    }
                     else {
                      return 1;
                    }
                  }
                }
              });
              this.TimeSegmentConst = Kotlin.createObject(null, function () {
                this.GLOBAL_TIMEMETA = '#global';
              });
            }, /** @lends _.org.kevoree.modeling.api.time */ {
              TimeAwareKMFContainer: Kotlin.createTrait(function () {
                return [_.org.kevoree.modeling.api.TimedContainer, _.org.kevoree.modeling.api.persistence.KMFContainerProxy];
              }, /** @lends _.org.kevoree.modeling.api.time.TimeAwareKMFContainer.prototype */ {
                meta: {
                  get: function () {
                    return this.$meta_e0ta8m$;
                  },
                  set: function (tmp$0) {
                    this.$meta_e0ta8m$ = tmp$0;
                  }
                },
                getOriginTransaction: function () {
                  var tmp$0;
                  return ((tmp$0 = this.originFactory) != null ? tmp$0 : Kotlin.throwNPE()).originTransaction;
                },
                previous: function () {
                  var previousTime = this.timeTree().previous(this.now);
                  if (previousTime != null) {
                    return this.getOriginTransaction().time(previousTime).lookup(this.path());
                  }
                  return null;
                },
                next: function () {
                  var previousTime = this.timeTree().next(this.now);
                  if (previousTime != null) {
                    return this.getOriginTransaction().time(previousTime).lookup(this.path());
                  }
                  return null;
                },
                last: function () {
                  var tmp$0;
                  var previousTime = (tmp$0 = this.timeTree().versionTree.lastWhileNot(this.now, _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED)) != null ? tmp$0.key : null;
                  if (previousTime != null) {
                    return this.getOriginTransaction().time(previousTime).lookup(this.path());
                  }
                  return null;
                },
                first: function () {
                  var tmp$0;
                  var previousTime = (tmp$0 = this.timeTree().versionTree.firstWhileNot(this.now, _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED)) != null ? tmp$0.key : null;
                  if (previousTime != null) {
                    return this.getOriginTransaction().time(previousTime).lookup(this.path());
                  }
                  return null;
                },
                jump: function (time) {
                  var previousTime = this.timeTree().previous(time);
                  if (previousTime != null) {
                    return this.getOriginTransaction().time(previousTime).lookup(this.path());
                  }
                  return null;
                },
                timeTree: function () {
                  var tmp$0;
                  return ((tmp$0 = this.originFactory) != null ? tmp$0 : Kotlin.throwNPE()).getTimeTree(this.path());
                }
              }),
              TimeAwareKMFFactory: Kotlin.createTrait(function () {
                return [_.org.kevoree.modeling.api.time.TimeView, _.org.kevoree.modeling.api.persistence.PersistenceKMFFactory];
              }, /** @lends _.org.kevoree.modeling.api.time.TimeAwareKMFFactory.prototype */ {
                relativeTime: {
                  get: function () {
                    return this.$relativeTime_53j5cx$;
                  }
                },
                sharedCache: {
                  get: function () {
                    return this.$sharedCache_s3os97$;
                  }
                },
                entitiesCache: {
                  get: function () {
                    return this.$entitiesCache_hk1jbt$;
                  },
                  set: function (tmp$0) {
                    this.$entitiesCache_hk1jbt$ = tmp$0;
                  }
                },
                originTransaction: {
                  get: function () {
                    return this.$originTransaction_8vjs1c$;
                  },
                  set: function (tmp$0) {
                    this.$originTransaction_8vjs1c$ = tmp$0;
                  }
                },
                getEntitiesMeta: function () {
                  if (this.entitiesCache != null) {
                    var tmp$0;
                    return (tmp$0 = this.entitiesCache) != null ? tmp$0 : Kotlin.throwNPE();
                  }
                   else {
                    var payload = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.ENTITIES.name(), this.relativeTime.toString());
                    var blob = new _.org.kevoree.modeling.api.time.blob.EntitiesMeta();
                    if (payload != null) {
                      blob.load(payload);
                    }
                    this.entitiesCache = blob;
                    return blob;
                  }
                },
                endCommit: function () {
                  var entitiesMeta = this.getEntitiesMeta();
                  {
                    var tmp$0 = entitiesMeta.list.keySet().iterator();
                    while (tmp$0.hasNext()) {
                      var path = tmp$0.next();
                      var timeTree = this.getTimeTree(path);
                      if (timeTree.dirty) {
                        this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.TIMEMETA.name(), path, timeTree.toString());
                        timeTree.dirty = false;
                      }
                    }
                  }
                  if (entitiesMeta.isDirty) {
                    this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.ENTITIES.name(), this.relativeTime.toString(), entitiesMeta.toString());
                    entitiesMeta.isDirty = false;
                  }
                  var globalTime = this.getTimeTree(_.org.kevoree.modeling.api.time.TimeSegmentConst.GLOBAL_TIMEMETA);
                  if (globalTime.dirty) {
                    this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.TIMEMETA.name(), _.org.kevoree.modeling.api.time.TimeSegmentConst.GLOBAL_TIMEMETA, globalTime.toString());
                    globalTime.dirty = false;
                  }
                  {
                    var tmp$1 = this.elementsToBeRemoved.iterator();
                    while (tmp$1.hasNext()) {
                      var e = tmp$1.next();
                      this.cleanUnusedPaths(e);
                    }
                  }
                  this.elementsToBeRemoved.clear();
                  this.datastore.commit();
                },
                clear: function () {
                  var tmp$0;
                  if (this.entitiesCache != null && ((tmp$0 = this.entitiesCache) != null ? tmp$0 : Kotlin.throwNPE()).isDirty) {
                    Kotlin.println('WARNING :: CLOSED TimeView in dirty mode ! ' + this.relativeTime);
                  }
                  _.org.kevoree.modeling.api.persistence.PersistenceKMFFactory.prototype.clear.call(this);
                  this.entitiesCache = null;
                },
                monitor: function (elem) {
                  if (!this.dirty) {
                    this.dirty = true;
                    var globalTime = this.getTimeTree(_.org.kevoree.modeling.api.time.TimeSegmentConst.GLOBAL_TIMEMETA);
                    if (globalTime.versionTree.lookup(this.relativeTime) == null) {
                      globalTime.versionTree.insert(this.relativeTime, _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS);
                      globalTime.dirty = true;
                    }
                  }
                  elem.addModelElementListener(this);
                },
                commit: function () {
                  var keys = _.kotlin.toList_h3panj$(this.modified_elements.keySet());
                  {
                    var tmp$0 = keys.iterator();
                    while (tmp$0.hasNext()) {
                      var elem = tmp$0.next();
                      var resolved = this.modified_elements.get_za3rmp$(elem);
                      if (resolved != null) {
                        if (Kotlin.equals(resolved.path(), '')) {
                          if (!resolved.isDeleted()) {
                            resolved.delete();
                          }
                           else {
                            this.modified_elements.remove_za3rmp$(elem);
                          }
                        }
                      }
                    }
                  }
                  {
                    var tmp$1 = this.modified_elements.values().iterator();
                    while (tmp$1.hasNext()) {
                      var elem_0 = tmp$1.next();
                      this.persist(elem_0);
                      this.elementsToBeRemoved.remove_za3rmp$(elem_0.path());
                    }
                  }
                },
                persist: function (elem) {
                  if (Kotlin.isType(elem, _.org.kevoree.modeling.api.persistence.KMFContainerProxy) && !elem.isDirty) {
                    return;
                  }
                  var currentPath = elem.path();
                  if (Kotlin.equals(currentPath, '')) {
                    throw new Error('Internal error, empty path found during persist method ' + elem);
                  }
                  if (!currentPath.startsWith('/')) {
                    throw new Error('Cannot persist, because the path of the element do not refer to a root: ' + currentPath + ' -> ' + elem);
                  }
                  var casted = elem;
                  var traces = elem.toTraces(true, true);
                  var traceSeq = new _.org.kevoree.modeling.api.trace.TraceSequence(this);
                  traceSeq.populate(traces);
                  var entitiesMeta = this.getEntitiesMeta();
                  entitiesMeta.list.put_wn2jw4$(currentPath, true);
                  entitiesMeta.isDirty = true;
                  var key = this.relativeTime.toString() + '/' + currentPath;
                  this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), key, traceSeq.exportToString());
                  var castedInBounds = elem;
                  var saved = _.org.kevoree.modeling.api.time.blob.MetaHelper.serialize(castedInBounds.internal_inboundReferences);
                  this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), key + '#', saved);
                  var tmp$0;
                  ((tmp$0 = casted.meta) != null ? tmp$0 : Kotlin.throwNPE()).latestPersisted = this.relativeTime;
                  this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.ENTITYMETA.name(), key, Kotlin.toString(casted.meta));
                  var timeTree = this.getTimeTree(currentPath);
                  if (timeTree.versionTree.lookup(this.relativeTime) == null) {
                    timeTree.versionTree.insert(this.relativeTime, _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS);
                    timeTree.dirty = true;
                  }
                },
                remove: function (elem) {
                  if (elem.isDeleted()) {
                    return;
                  }
                  var path = elem.path();
                  if (Kotlin.equals(path, '')) {
                    this.modified_elements.remove_za3rmp$(elem);
                    Kotlin.println("WARNING :: Can't process dangling element! type:" + elem.metaClassName() + ',id=' + elem.internalGetKey() + ' ignored');
                    return;
                  }
                  this.elem_cache.remove_za3rmp$(path);
                  var currentCachedTimeTree = this.getTimeTree(path);
                  currentCachedTimeTree.versionTree.insert(this.relativeTime, _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED);
                  currentCachedTimeTree.dirty = true;
                  var entitiesMeta = this.getEntitiesMeta();
                  entitiesMeta.list.put_wn2jw4$(path, true);
                  entitiesMeta.isDirty = true;
                  if (!this.dirty) {
                    var globalTime = this.getTimeTree(_.org.kevoree.modeling.api.time.TimeSegmentConst.GLOBAL_TIMEMETA);
                    if (globalTime.versionTree.lookup(this.relativeTime) == null) {
                      globalTime.versionTree.insert(this.relativeTime, _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS);
                      globalTime.dirty = true;
                    }
                  }
                  this.modified_elements.remove_za3rmp$(Kotlin.hashCode(elem).toString());
                },
                cleanUnusedPaths: function (path) {
                  var key = this.relativeTime.toString() + '/' + path;
                  this.datastore.remove(_.org.kevoree.modeling.api.time.TimeSegment.object.ENTITYMETA.name(), key);
                  this.datastore.remove(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), key);
                  this.datastore.remove(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), key + '#');
                },
                getTimeTree: function (path) {
                  var alreadyCached = this.sharedCache.timeCache.get_za3rmp$(path);
                  if (alreadyCached != null) {
                    return alreadyCached;
                  }
                   else {
                    var timeMetaPayLoad = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.TIMEMETA.name(), path);
                    var blob = new _.org.kevoree.modeling.api.time.blob.TimeMeta();
                    if (timeMetaPayLoad != null) {
                      blob.load(timeMetaPayLoad);
                    }
                    this.sharedCache.timeCache.put_wn2jw4$(path, blob);
                    return blob;
                  }
                },
                lookup: function (path) {
                  var timeTree = this.getTimeTree(path);
                  var askedTimeResult = timeTree.versionTree.previousOrEqual(this.relativeTime);
                  var askedTime = askedTimeResult != null ? askedTimeResult.key : null;
                  if (askedTime == null || Kotlin.equals((askedTimeResult != null ? askedTimeResult : Kotlin.throwNPE()).value, _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED)) {
                    return null;
                  }
                  var composedKey = Kotlin.toString(askedTime) + '/' + path;
                  if (this.elem_cache.containsKey_za3rmp$(composedKey)) {
                    return this.elem_cache.get_za3rmp$(composedKey);
                  }
                  var metaPayload = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.ENTITYMETA.name(), composedKey);
                  if (metaPayload == null) {
                    return null;
                  }
                  var meta = new _.org.kevoree.modeling.api.time.blob.EntityMeta();
                  meta.load(metaPayload);
                  if (meta.metatype != null) {
                    var tmp$0, tmp$1;
                    var elem = (tmp$1 = this.create((tmp$0 = meta.metatype) != null ? tmp$0 : Kotlin.throwNPE())) != null ? tmp$1 : Kotlin.throwNPE();
                    elem.meta = meta;
                    this.elem_cache.put_wn2jw4$(composedKey, elem);
                    elem.isResolved = false;
                    elem.now = askedTime;
                    elem.setOriginPath(path);
                    this.monitor(elem);
                    return elem;
                  }
                   else {
                    throw new Error('Empty Type Name for ' + path);
                  }
                },
                getTraces: function (origin) {
                  var currentPath = origin.path();
                  var sequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this);
                  var castedOrigin = origin;
                  var tmp$0, tmp$1;
                  if (((tmp$0 = castedOrigin.meta) != null ? tmp$0 : Kotlin.throwNPE()).latestPersisted == null) {
                    return null;
                  }
                  var traces = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), Kotlin.toString(((tmp$1 = castedOrigin.meta) != null ? tmp$1 : Kotlin.throwNPE()).latestPersisted) + '/' + currentPath);
                  if (traces != null) {
                    sequence.populateFromString(traces != null ? traces : Kotlin.throwNPE());
                    return sequence;
                  }
                  return null;
                },
                now: function () {
                  return this.relativeTime;
                },
                modified: function () {
                  return this.getEntitiesMeta().list.keySet();
                },
                loadInbounds: function (elem) {
                  var castedInBounds = elem;
                  var casted2 = elem;
                  var tmp$0;
                  var payload = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), Kotlin.toString(((tmp$0 = casted2.meta) != null ? tmp$0 : Kotlin.throwNPE()).latestPersisted) + '/' + elem.path() + '#');
                  if (payload != null) {
                    castedInBounds.internal_inboundReferences = _.org.kevoree.modeling.api.time.blob.MetaHelper.unserialize(payload, this);
                  }
                },
                delete: function () {
                  {
                    var tmp$0 = this.getEntitiesMeta().list.keySet().iterator();
                    while (tmp$0.hasNext()) {
                      var path = tmp$0.next();
                      var timeMeta = this.getTimeTree(path);
                      timeMeta.versionTree.delete(this.relativeTime);
                      timeMeta.dirty = true;
                      this.elementsToBeRemoved.add_za3rmp$(path);
                    }
                  }
                  this.getEntitiesMeta().list.clear();
                  this.getEntitiesMeta().isDirty = true;
                  if (!this.dirty) {
                    var globalTime = this.getTimeTree(_.org.kevoree.modeling.api.time.TimeSegmentConst.GLOBAL_TIMEMETA);
                    if (globalTime.versionTree.lookup(this.relativeTime) == null) {
                      globalTime.versionTree.insert(this.relativeTime, _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS);
                      globalTime.dirty = true;
                    }
                  }
                  var entitiesMeta = this.getEntitiesMeta();
                  entitiesMeta.list.clear();
                  entitiesMeta.isDirty = true;
                },
                diff: function (other) {
                  var casted = other;
                  var sequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this);
                  var globalTime = this.getTimeTree(_.org.kevoree.modeling.api.time.TimeSegmentConst.GLOBAL_TIMEMETA);
                  var tmp$0, tmp$1;
                  var resolved1 = (tmp$0 = globalTime.versionTree.previousOrEqual(this.relativeTime)) != null ? tmp$0.key : null;
                  var resolved2 = (tmp$1 = globalTime.versionTree.previousOrEqual(casted.relativeTime)) != null ? tmp$1.key : null;
                  if (resolved1 == null || resolved2 == null) {
                    return sequence;
                  }
                   else {
                    if (_.org.kevoree.modeling.api.time.TimeComparator.compare(resolved1 != null ? resolved1 : Kotlin.throwNPE(), resolved2 != null ? resolved2 : Kotlin.throwNPE()) > 1) {
                      var temp = resolved1;
                      resolved1 = resolved2;
                      resolved2 = temp;
                    }
                  }
                  var currentTP = resolved1 != null ? resolved1 : Kotlin.throwNPE();
                  while (!Kotlin.equals(currentTP, resolved2 != null ? resolved2 : Kotlin.throwNPE())) {
                    var otherEntities = casted.getEntitiesMeta();
                    {
                      var tmp$2 = otherEntities.list.keySet().iterator();
                      while (tmp$2.hasNext()) {
                        var path = tmp$2.next();
                        var key = currentTP.toString() + '/' + path;
                        var raw = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), key);
                        if (raw != null) {
                          sequence.populateFromString(raw);
                        }
                      }
                    }
                    var tmp$3, tmp$4;
                    currentTP = (tmp$4 = (tmp$3 = globalTime.versionTree.next(currentTP)) != null ? tmp$3.key : null) != null ? tmp$4 : Kotlin.throwNPE();
                  }
                  return sequence;
                }
              }),
              TimeTree: Kotlin.createTrait(null),
              TimeView: Kotlin.createTrait(null),
              TimeSegment: Kotlin.createClass(function () {
                return [Kotlin.Enum];
              }, function $fun() {
                $fun.baseInitializer.call(this);
              }, null, /** @lends _.org.kevoree.modeling.api.time.TimeSegment */ {
                object_initializer$: function () {
                  return Kotlin.createEnumEntries({
                    RAW: new _.org.kevoree.modeling.api.time.TimeSegment(),
                    ENTITYMETA: new _.org.kevoree.modeling.api.time.TimeSegment(),
                    TIMEMETA: new _.org.kevoree.modeling.api.time.TimeSegment(),
                    ENTITIES: new _.org.kevoree.modeling.api.time.TimeSegment()
                  });
                }
              }),
              TimeWalker: Kotlin.createTrait(null),
              blob: Kotlin.definePackage(function () {
                this.RBCONST = Kotlin.createObject(null, function () {
                  this.BLACK_DELETE = '0';
                  this.BLACK_EXISTS = '1';
                  this.RED_DELETE = '2';
                  this.RED_EXISTS = '3';
                });
                this.MetaHelper = Kotlin.createObject(null, function () {
                  this.sep = '#';
                  this.sep2 = '%';
                }, {
                  serialize: function (p) {
                    var buffer = new Kotlin.StringBuilder();
                    var isFirst = true;
                    {
                      var tmp$0 = p.keySet().iterator();
                      while (tmp$0.hasNext()) {
                        var key = tmp$0.next();
                        var tmp$1;
                        var v = (tmp$1 = p.get_za3rmp$(key)) != null ? tmp$1 : Kotlin.throwNPE();
                        if (!isFirst) {
                          buffer.append(this.sep);
                        }
                        buffer.append(key.path());
                        if (v.size() !== 0) {
                          {
                            var tmp$2 = v.iterator();
                            while (tmp$2.hasNext()) {
                              var v2 = tmp$2.next();
                              buffer.append(this.sep2);
                              buffer.append(v2);
                            }
                          }
                        }
                        isFirst = false;
                      }
                    }
                    return buffer.toString();
                  },
                  unserialize: function (p, factory) {
                    var result = new Kotlin.ComplexHashMap();
                    var lines = Kotlin.splitString(p, this.sep);
                    var tmp$0, tmp$1, tmp$2;
                    {
                      tmp$0 = lines, tmp$1 = tmp$0.length;
                      for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
                        var l = tmp$0[tmp$2];
                        var elems = Kotlin.splitString(l, this.sep2);
                        if (elems.length > 1) {
                          var payload = new Kotlin.PrimitiveHashSet();
                          var tmp$3, tmp$4;
                          {
                            tmp$3 = elems.length - 1 + 1;
                            for (var i = 1; i !== tmp$3; i++) {
                              payload.add_za3rmp$(elems[i]);
                            }
                          }
                          result.put_wn2jw4$((tmp$4 = factory.lookup(elems[0])) != null ? tmp$4 : Kotlin.throwNPE(), payload);
                        }
                      }
                    }
                    return result;
                  }
                });
              }, /** @lends _.org.kevoree.modeling.api.time.blob */ {
                TimeMeta: Kotlin.createClass(function () {
                  return [_.org.kevoree.modeling.api.time.TimeTree];
                }, function () {
                  this.dirty = true;
                  this.versionTree = new _.org.kevoree.modeling.api.time.blob.RBTree();
                }, /** @lends _.org.kevoree.modeling.api.time.blob.TimeMeta.prototype */ {
                  first: function () {
                    var tmp$0;
                    return (tmp$0 = this.versionTree.first()) != null ? tmp$0.key : null;
                  },
                  last: function () {
                    var tmp$0;
                    return (tmp$0 = this.versionTree.last()) != null ? tmp$0.key : null;
                  },
                  next: function (from) {
                    var tmp$0;
                    return (tmp$0 = this.versionTree.next(from)) != null ? tmp$0.key : null;
                  },
                  previous: function (from) {
                    var tmp$0;
                    return (tmp$0 = this.versionTree.previous(from)) != null ? tmp$0.key : null;
                  },
                  walk: function (walker) {
                    return this.walkAsc(walker);
                  },
                  toString: function () {
                    return this.versionTree.serialize();
                  },
                  load: function (payload) {
                    this.versionTree.unserialize(payload);
                    this.dirty = false;
                  },
                  walkAsc: function (walker) {
                    var elem = this.versionTree.first();
                    while (elem != null) {
                      walker.walk((elem != null ? elem : Kotlin.throwNPE()).key);
                      elem = (elem != null ? elem : Kotlin.throwNPE()).next();
                    }
                  },
                  walkDesc: function (walker) {
                    var elem = this.versionTree.last();
                    while (elem != null) {
                      walker.walk((elem != null ? elem : Kotlin.throwNPE()).key);
                      elem = (elem != null ? elem : Kotlin.throwNPE()).previous();
                    }
                  },
                  walkRangeAsc: function (walker, from, to) {
                    var from2 = from;
                    var to2 = to;
                    if (from > to) {
                      from2 = to;
                      to2 = from;
                    }
                    var elem;
                    elem = this.versionTree.previousOrEqual(from2);
                    while (elem != null) {
                      walker.walk((elem != null ? elem : Kotlin.throwNPE()).key);
                      elem = (elem != null ? elem : Kotlin.throwNPE()).next();
                      if (elem != null) {
                        if ((elem != null ? elem : Kotlin.throwNPE()).key >= to2) {
                          return;
                        }
                      }
                    }
                  },
                  walkRangeDesc: function (walker, from, to) {
                    var from2 = from;
                    var to2 = to;
                    if (from > to) {
                      from2 = to;
                      to2 = from;
                    }
                    var elem;
                    elem = this.versionTree.previousOrEqual(to2);
                    while (elem != null) {
                      walker.walk((elem != null ? elem : Kotlin.throwNPE()).key);
                      elem = (elem != null ? elem : Kotlin.throwNPE()).previous();
                      if (elem != null) {
                        if ((elem != null ? elem : Kotlin.throwNPE()).key <= from2) {
                          walker.walk((elem != null ? elem : Kotlin.throwNPE()).key);
                          return;
                        }
                      }
                    }
                  }
                }, /** @lends _.org.kevoree.modeling.api.time.blob.TimeMeta */ {
                  object_initializer$: function () {
                    return Kotlin.createObject(null, function () {
                      this.GO_DOWN_LEFT = 0;
                      this.GO_DOWN_RIGHT = 1;
                      this.PROCESS_PREFIX = 2;
                      this.PROCESS_INFIX = 3;
                      this.PROCESS_POSTFIX = 4;
                    });
                  }
                }),
                Color: Kotlin.createClass(function () {
                  return [Kotlin.Enum];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, null, /** @lends _.org.kevoree.modeling.api.time.blob.Color */ {
                  object_initializer$: function () {
                    return Kotlin.createEnumEntries({
                      RED: new _.org.kevoree.modeling.api.time.blob.Color(),
                      BLACK: new _.org.kevoree.modeling.api.time.blob.Color()
                    });
                  }
                }),
                STATE: Kotlin.createClass(function () {
                  return [Kotlin.Enum];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, null, /** @lends _.org.kevoree.modeling.api.time.blob.STATE */ {
                  object_initializer$: function () {
                    return Kotlin.createEnumEntries({
                      EXISTS: new _.org.kevoree.modeling.api.time.blob.STATE(),
                      DELETED: new _.org.kevoree.modeling.api.time.blob.STATE()
                    });
                  }
                }),
                Node: Kotlin.createClass(null, function (key, value, color, left, right) {
                  this.key = key;
                  this.value = value;
                  this.color = color;
                  this.left = left;
                  this.right = right;
                  this.parent = null;
                  if (this.left != null) {
                    var tmp$0;
                    ((tmp$0 = this.left) != null ? tmp$0 : Kotlin.throwNPE()).parent = this;
                  }
                  if (this.right != null) {
                    var tmp$1;
                    ((tmp$1 = this.right) != null ? tmp$1 : Kotlin.throwNPE()).parent = this;
                  }
                  this.parent = null;
                }, /** @lends _.org.kevoree.modeling.api.time.blob.Node.prototype */ {
                  grandparent: function () {
                    var tmp$0;
                    return (tmp$0 = this.parent) != null ? tmp$0.parent : null;
                  },
                  sibling: function () {
                    var tmp$0;
                    if (Kotlin.equals(this, (tmp$0 = this.parent) != null ? tmp$0.left : null)) {
                      var tmp$1;
                      return (tmp$1 = this.parent) != null ? tmp$1.right : null;
                    }
                     else {
                      var tmp$2;
                      return (tmp$2 = this.parent) != null ? tmp$2.left : null;
                    }
                  },
                  uncle: function () {
                    var tmp$0;
                    return (tmp$0 = this.parent) != null ? tmp$0.sibling() : null;
                  },
                  serialize: function (builder) {
                    builder.append('|');
                    if (Kotlin.equals(this.value, _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED)) {
                      if (Kotlin.equals(this.color, _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                        builder.append(_.org.kevoree.modeling.api.time.blob.RBCONST.BLACK_DELETE);
                      }
                       else {
                        builder.append(_.org.kevoree.modeling.api.time.blob.RBCONST.RED_DELETE);
                      }
                    }
                     else {
                      if (Kotlin.equals(this.color, _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                        builder.append(_.org.kevoree.modeling.api.time.blob.RBCONST.BLACK_EXISTS);
                      }
                       else {
                        builder.append(_.org.kevoree.modeling.api.time.blob.RBCONST.RED_EXISTS);
                      }
                    }
                    builder.append(this.key);
                    if (this.left == null && this.right == null) {
                      builder.append('%');
                    }
                     else {
                      if (this.left != null) {
                        var tmp$0;
                        (tmp$0 = this.left) != null ? tmp$0.serialize(builder) : null;
                      }
                       else {
                        builder.append('#');
                      }
                      if (this.right != null) {
                        var tmp$1;
                        (tmp$1 = this.right) != null ? tmp$1.serialize(builder) : null;
                      }
                       else {
                        builder.append('#');
                      }
                    }
                  },
                  next: function () {
                    var p = this;
                    if ((p != null ? p : Kotlin.throwNPE()).right != null) {
                      var tmp$0;
                      p = (tmp$0 = (p != null ? p : Kotlin.throwNPE()).right) != null ? tmp$0 : Kotlin.throwNPE();
                      while ((p != null ? p : Kotlin.throwNPE()).left != null) {
                        var tmp$1;
                        p = (tmp$1 = (p != null ? p : Kotlin.throwNPE()).left) != null ? tmp$1 : Kotlin.throwNPE();
                      }
                      return p;
                    }
                     else {
                      if ((p != null ? p : Kotlin.throwNPE()).parent != null) {
                        var tmp$2;
                        if (Kotlin.equals(p, ((tmp$2 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$2 : Kotlin.throwNPE()).left)) {
                          var tmp$3;
                          return (tmp$3 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$3 : Kotlin.throwNPE();
                        }
                         else {
                          var tmp$4;
                          while ((p != null ? p : Kotlin.throwNPE()).parent != null && Kotlin.equals(p, ((tmp$4 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$4 : Kotlin.throwNPE()).right)) {
                            var tmp$5;
                            p = (tmp$5 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$5 : Kotlin.throwNPE();
                          }
                          return (p != null ? p : Kotlin.throwNPE()).parent;
                        }
                      }
                       else {
                        return null;
                      }
                    }
                  },
                  previous: function () {
                    var p = this;
                    if ((p != null ? p : Kotlin.throwNPE()).left != null) {
                      var tmp$0;
                      p = (tmp$0 = (p != null ? p : Kotlin.throwNPE()).left) != null ? tmp$0 : Kotlin.throwNPE();
                      while ((p != null ? p : Kotlin.throwNPE()).right != null) {
                        var tmp$1;
                        p = (tmp$1 = (p != null ? p : Kotlin.throwNPE()).right) != null ? tmp$1 : Kotlin.throwNPE();
                      }
                      return p;
                    }
                     else {
                      if ((p != null ? p : Kotlin.throwNPE()).parent != null) {
                        var tmp$2;
                        if (Kotlin.equals(p, ((tmp$2 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$2 : Kotlin.throwNPE()).right)) {
                          var tmp$3;
                          return (tmp$3 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$3 : Kotlin.throwNPE();
                        }
                         else {
                          var tmp$4;
                          while ((p != null ? p : Kotlin.throwNPE()).parent != null && Kotlin.equals(p, ((tmp$4 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$4 : Kotlin.throwNPE()).left)) {
                            var tmp$5;
                            p = (tmp$5 = (p != null ? p : Kotlin.throwNPE()).parent) != null ? tmp$5 : Kotlin.throwNPE();
                          }
                          return (p != null ? p : Kotlin.throwNPE()).parent;
                        }
                      }
                       else {
                        return null;
                      }
                    }
                  }
                }),
                ReaderContext: Kotlin.createClass(null, function (payload, offset) {
                  this.payload = payload;
                  this.offset = offset;
                }, /** @lends _.org.kevoree.modeling.api.time.blob.ReaderContext.prototype */ {
                  unserialize: function (rightBranch) {
                    if (this.offset >= this.payload.length) {
                      return null;
                    }
                    var tokenBuild = new Kotlin.StringBuilder();
                    var ch = this.payload.charAt(this.offset);
                    if (ch === '%') {
                      if (rightBranch) {
                        this.offset = this.offset + 1;
                      }
                      return null;
                    }
                    if (ch === '#') {
                      this.offset = this.offset + 1;
                      return null;
                    }
                    if (ch !== '|') {
                      throw new Error('Error while loading BTree');
                    }
                    this.offset = this.offset + 1;
                    ch = this.payload.charAt(this.offset);
                    var color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                    var state = _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS;
                    {
                      if (ch === _.org.kevoree.modeling.api.time.blob.RBCONST.BLACK_DELETE) {
                        color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                        state = _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED;
                      }
                       else if (ch === _.org.kevoree.modeling.api.time.blob.RBCONST.BLACK_EXISTS) {
                        color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                        state = _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS;
                      }
                       else if (ch === _.org.kevoree.modeling.api.time.blob.RBCONST.RED_DELETE) {
                        color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                        state = _.org.kevoree.modeling.api.time.blob.STATE.object.DELETED;
                      }
                       else if (ch === _.org.kevoree.modeling.api.time.blob.RBCONST.RED_EXISTS) {
                        color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                        state = _.org.kevoree.modeling.api.time.blob.STATE.object.EXISTS;
                      }
                    }
                    this.offset = this.offset + 1;
                    ch = this.payload.charAt(this.offset);
                    while (this.offset + 1 < this.payload.length && ch !== '|' && ch !== '#' && ch !== '%') {
                      tokenBuild.append(ch);
                      this.offset = this.offset + 1;
                      ch = this.payload.charAt(this.offset);
                    }
                    if (ch !== '|' && ch !== '#' && ch !== '%') {
                      tokenBuild.append(ch);
                    }
                    var p = new _.org.kevoree.modeling.api.time.blob.Node(_.java.lang.Long.parseLong(tokenBuild.toString()), state, color, null, null);
                    var left = this.unserialize(false);
                    if (left != null) {
                      left.parent = p;
                    }
                    var right = this.unserialize(true);
                    if (right != null) {
                      right.parent = p;
                    }
                    p.left = left;
                    p.right = right;
                    return p;
                  }
                }),
                RBTree: Kotlin.createClass(null, function () {
                  this.root = null;
                  this.size_pjslhb$ = 0;
                }, /** @lends _.org.kevoree.modeling.api.time.blob.RBTree.prototype */ {
                  size: function () {
                    return this.size_pjslhb$;
                  },
                  serialize: function () {
                    var builder = new Kotlin.StringBuilder();
                    builder.append(this.size_pjslhb$);
                    var tmp$0;
                    (tmp$0 = this.root) != null ? tmp$0.serialize(builder) : null;
                    return builder.toString();
                  },
                  unserialize: function (payload) {
                    if (_.kotlin.get_size(payload) === 0) {
                      return;
                    }
                    var i = 0;
                    var buffer = new Kotlin.StringBuilder();
                    var ch = payload.charAt(i);
                    while (i < payload.length && ch !== '|') {
                      buffer.append(ch);
                      i = i + 1;
                      ch = payload.charAt(i);
                    }
                    this.size_pjslhb$ = _.java.lang.Integer.parseInt(buffer.toString());
                    this.root = (new _.org.kevoree.modeling.api.time.blob.ReaderContext(payload, i)).unserialize(true);
                  },
                  previousOrEqual: function (key) {
                    var p = this.root;
                    if (p == null) {
                      return null;
                    }
                    while (p != null) {
                      if (key === (p != null ? p : Kotlin.throwNPE()).key) {
                        return p;
                      }
                      if (key > (p != null ? p : Kotlin.throwNPE()).key) {
                        if ((p != null ? p : Kotlin.throwNPE()).right != null) {
                          p = (p != null ? p : Kotlin.throwNPE()).right;
                        }
                         else {
                          return p;
                        }
                      }
                       else {
                        if ((p != null ? p : Kotlin.throwNPE()).left != null) {
                          p = (p != null ? p : Kotlin.throwNPE()).left;
                        }
                         else {
                          var parent = (p != null ? p : Kotlin.throwNPE()).parent;
                          var ch = p;
                          while (parent != null && Kotlin.equals(ch, (parent != null ? parent : Kotlin.throwNPE()).left)) {
                            ch = parent;
                            parent = (parent != null ? parent : Kotlin.throwNPE()).parent;
                          }
                          return parent;
                        }
                      }
                    }
                    return null;
                  },
                  nextOrEqual: function (key) {
                    var p = this.root;
                    if (p == null) {
                      return null;
                    }
                    while (p != null) {
                      if (key === (p != null ? p : Kotlin.throwNPE()).key) {
                        return p;
                      }
                      if (key < (p != null ? p : Kotlin.throwNPE()).key) {
                        if ((p != null ? p : Kotlin.throwNPE()).left != null) {
                          p = (p != null ? p : Kotlin.throwNPE()).left;
                        }
                         else {
                          return p;
                        }
                      }
                       else {
                        if ((p != null ? p : Kotlin.throwNPE()).right != null) {
                          p = (p != null ? p : Kotlin.throwNPE()).right;
                        }
                         else {
                          var parent = (p != null ? p : Kotlin.throwNPE()).parent;
                          var ch = p;
                          while (parent != null && Kotlin.equals(ch, (parent != null ? parent : Kotlin.throwNPE()).right)) {
                            ch = parent;
                            parent = (parent != null ? parent : Kotlin.throwNPE()).parent;
                          }
                          return parent;
                        }
                      }
                    }
                    return null;
                  },
                  previous: function (key) {
                    var p = this.root;
                    if (p == null) {
                      return null;
                    }
                    while (p != null) {
                      if (key < (p != null ? p : Kotlin.throwNPE()).key) {
                        if ((p != null ? p : Kotlin.throwNPE()).left != null) {
                          var tmp$0;
                          p = (tmp$0 = (p != null ? p : Kotlin.throwNPE()).left) != null ? tmp$0 : Kotlin.throwNPE();
                        }
                         else {
                          return (p != null ? p : Kotlin.throwNPE()).previous();
                        }
                      }
                       else if (key > (p != null ? p : Kotlin.throwNPE()).key) {
                        if ((p != null ? p : Kotlin.throwNPE()).right != null) {
                          var tmp$1;
                          p = (tmp$1 = (p != null ? p : Kotlin.throwNPE()).right) != null ? tmp$1 : Kotlin.throwNPE();
                        }
                         else {
                          return p;
                        }
                      }
                       else {
                        return (p != null ? p : Kotlin.throwNPE()).previous();
                      }
                    }
                    return null;
                  },
                  previousWhileNot: function (key, until) {
                    var elm = this.previousOrEqual(key);
                    if (Kotlin.equals((elm != null ? elm : Kotlin.throwNPE()).value, until)) {
                      return null;
                    }
                     else {
                      if ((elm != null ? elm : Kotlin.throwNPE()).key === key) {
                        elm = (elm != null ? elm : Kotlin.throwNPE()).previous();
                      }
                    }
                    if (elm == null || Kotlin.equals((elm != null ? elm : Kotlin.throwNPE()).value, until)) {
                      return null;
                    }
                     else {
                      return elm;
                    }
                  },
                  next: function (key) {
                    var p = this.root;
                    if (p == null) {
                      return null;
                    }
                    while (p != null) {
                      if (key < (p != null ? p : Kotlin.throwNPE()).key) {
                        if ((p != null ? p : Kotlin.throwNPE()).left != null) {
                          var tmp$0;
                          p = (tmp$0 = (p != null ? p : Kotlin.throwNPE()).left) != null ? tmp$0 : Kotlin.throwNPE();
                        }
                         else {
                          return p;
                        }
                      }
                       else if (key > (p != null ? p : Kotlin.throwNPE()).key) {
                        if ((p != null ? p : Kotlin.throwNPE()).right != null) {
                          var tmp$1;
                          p = (tmp$1 = (p != null ? p : Kotlin.throwNPE()).right) != null ? tmp$1 : Kotlin.throwNPE();
                        }
                         else {
                          return (p != null ? p : Kotlin.throwNPE()).next();
                        }
                      }
                       else {
                        return (p != null ? p : Kotlin.throwNPE()).next();
                      }
                    }
                    return null;
                  },
                  nextWhileNot: function (key, until) {
                    var elm = this.nextOrEqual(key);
                    if (Kotlin.equals((elm != null ? elm : Kotlin.throwNPE()).value, until)) {
                      return null;
                    }
                     else {
                      if ((elm != null ? elm : Kotlin.throwNPE()).key === key) {
                        elm = (elm != null ? elm : Kotlin.throwNPE()).next();
                      }
                    }
                    if (elm == null || Kotlin.equals((elm != null ? elm : Kotlin.throwNPE()).value, until)) {
                      return null;
                    }
                     else {
                      return elm;
                    }
                  },
                  first: function () {
                    var p = this.root;
                    if (p == null) {
                      return null;
                    }
                    while (p != null) {
                      if ((p != null ? p : Kotlin.throwNPE()).left != null) {
                        var tmp$0;
                        p = (tmp$0 = (p != null ? p : Kotlin.throwNPE()).left) != null ? tmp$0 : Kotlin.throwNPE();
                      }
                       else {
                        return p;
                      }
                    }
                    return null;
                  },
                  last: function () {
                    var p = this.root;
                    if (p == null) {
                      return null;
                    }
                    while (p != null) {
                      if ((p != null ? p : Kotlin.throwNPE()).right != null) {
                        var tmp$0;
                        p = (tmp$0 = (p != null ? p : Kotlin.throwNPE()).right) != null ? tmp$0 : Kotlin.throwNPE();
                      }
                       else {
                        return p;
                      }
                    }
                    return null;
                  },
                  firstWhileNot: function (key, until) {
                    var elm = this.previousOrEqual(key);
                    if (elm == null) {
                      return null;
                    }
                     else if (Kotlin.equals((elm != null ? elm : Kotlin.throwNPE()).value, until)) {
                      return null;
                    }
                    var prev;
                    do {
                      prev = (elm != null ? elm : Kotlin.throwNPE()).previous();
                      if (prev == null || Kotlin.equals((prev != null ? prev : Kotlin.throwNPE()).value, until)) {
                        return elm;
                      }
                       else {
                        elm = prev;
                      }
                    }
                     while (elm != null);
                    return prev;
                  },
                  lastWhileNot: function (key, until) {
                    var elm = this.previousOrEqual(key);
                    if (elm == null) {
                      return null;
                    }
                     else if (Kotlin.equals((elm != null ? elm : Kotlin.throwNPE()).value, until)) {
                      return null;
                    }
                    var next;
                    do {
                      next = (elm != null ? elm : Kotlin.throwNPE()).next();
                      if (next == null || Kotlin.equals((next != null ? next : Kotlin.throwNPE()).value, until)) {
                        return elm;
                      }
                       else {
                        elm = next;
                      }
                    }
                     while (elm != null);
                    return next;
                  },
                  lookupNode: function (key) {
                    var n = this.root;
                    if (n == null) {
                      return null;
                    }
                    while (n != null) {
                      if (key === (n != null ? n : Kotlin.throwNPE()).key) {
                        return n;
                      }
                       else {
                        if (key < (n != null ? n : Kotlin.throwNPE()).key) {
                          n = (n != null ? n : Kotlin.throwNPE()).left;
                        }
                         else {
                          n = (n != null ? n : Kotlin.throwNPE()).right;
                        }
                      }
                    }
                    return n;
                  },
                  lookup: function (key) {
                    var n = this.lookupNode(key);
                    if (n == null) {
                      return null;
                    }
                     else {
                      return n.value;
                    }
                  },
                  rotateLeft: function (n) {
                    var r = n.right;
                    this.replaceNode(n, r != null ? r : Kotlin.throwNPE());
                    n.right = r.left;
                    if (r.left != null) {
                      var tmp$0;
                      ((tmp$0 = r.left) != null ? tmp$0 : Kotlin.throwNPE()).parent = n;
                    }
                    r.left = n;
                    n.parent = r;
                  },
                  rotateRight: function (n) {
                    var l = n.left;
                    this.replaceNode(n, l != null ? l : Kotlin.throwNPE());
                    n.left = l.right;
                    if (l.right != null) {
                      var tmp$0;
                      ((tmp$0 = l.right) != null ? tmp$0 : Kotlin.throwNPE()).parent = n;
                    }
                    l.right = n;
                    n.parent = l;
                  },
                  replaceNode: function (oldn, newn) {
                    if (oldn.parent == null) {
                      this.root = newn;
                    }
                     else {
                      var tmp$0;
                      if (Kotlin.equals(oldn, ((tmp$0 = oldn.parent) != null ? tmp$0 : Kotlin.throwNPE()).left)) {
                        var tmp$1;
                        ((tmp$1 = oldn.parent) != null ? tmp$1 : Kotlin.throwNPE()).left = newn;
                      }
                       else {
                        var tmp$2;
                        ((tmp$2 = oldn.parent) != null ? tmp$2 : Kotlin.throwNPE()).right = newn;
                      }
                    }
                    if (newn != null) {
                      newn.parent = oldn.parent;
                    }
                  },
                  insert: function (key, value) {
                    var insertedNode = new _.org.kevoree.modeling.api.time.blob.Node(key, value, _.org.kevoree.modeling.api.time.blob.Color.object.RED, null, null);
                    if (this.root == null) {
                      this.size_pjslhb$++;
                      this.root = insertedNode;
                    }
                     else {
                      var n = this.root;
                      while (true) {
                        if (key === (n != null ? n : Kotlin.throwNPE()).key) {
                          (n != null ? n : Kotlin.throwNPE()).value = value;
                          return;
                        }
                         else if (key < (n != null ? n : Kotlin.throwNPE()).key) {
                          if ((n != null ? n : Kotlin.throwNPE()).left == null) {
                            (n != null ? n : Kotlin.throwNPE()).left = insertedNode;
                            this.size_pjslhb$++;
                            break;
                          }
                           else {
                            var tmp$0;
                            n = (tmp$0 = (n != null ? n : Kotlin.throwNPE()).left) != null ? tmp$0 : Kotlin.throwNPE();
                          }
                        }
                         else {
                          if ((n != null ? n : Kotlin.throwNPE()).right == null) {
                            (n != null ? n : Kotlin.throwNPE()).right = insertedNode;
                            this.size_pjslhb$++;
                            break;
                          }
                           else {
                            n = (n != null ? n : Kotlin.throwNPE()).right;
                          }
                        }
                      }
                      insertedNode.parent = n;
                    }
                    this.insertCase1(insertedNode);
                  },
                  insertCase1: function (n) {
                    if (n.parent == null) {
                      n.color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                    }
                     else {
                      this.insertCase2(n);
                    }
                  },
                  insertCase2: function (n) {
                    if (Kotlin.equals(this.nodeColor(n.parent), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                      return;
                    }
                     else {
                      this.insertCase3(n);
                    }
                  },
                  insertCase3: function (n) {
                    if (Kotlin.equals(this.nodeColor(n.uncle()), _.org.kevoree.modeling.api.time.blob.Color.object.RED)) {
                      var tmp$0, tmp$1, tmp$2, tmp$3;
                      ((tmp$0 = n.parent) != null ? tmp$0 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      ((tmp$1 = n.uncle()) != null ? tmp$1 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      ((tmp$2 = n.grandparent()) != null ? tmp$2 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                      this.insertCase1((tmp$3 = n.grandparent()) != null ? tmp$3 : Kotlin.throwNPE());
                    }
                     else {
                      this.insertCase4(n);
                    }
                  },
                  insertCase4: function (n_n) {
                    var n = n_n;
                    var tmp$0, tmp$1;
                    if (Kotlin.equals(n, ((tmp$0 = n.parent) != null ? tmp$0 : Kotlin.throwNPE()).right) && Kotlin.equals(n.parent, ((tmp$1 = n.grandparent()) != null ? tmp$1 : Kotlin.throwNPE()).left)) {
                      var tmp$2, tmp$3;
                      this.rotateLeft((tmp$2 = n.parent) != null ? tmp$2 : Kotlin.throwNPE());
                      n = (tmp$3 = n.left) != null ? tmp$3 : Kotlin.throwNPE();
                    }
                     else {
                      var tmp$4, tmp$5;
                      if (Kotlin.equals(n, ((tmp$4 = n.parent) != null ? tmp$4 : Kotlin.throwNPE()).left) && Kotlin.equals(n.parent, ((tmp$5 = n.grandparent()) != null ? tmp$5 : Kotlin.throwNPE()).right)) {
                        var tmp$6, tmp$7;
                        this.rotateRight((tmp$6 = n.parent) != null ? tmp$6 : Kotlin.throwNPE());
                        n = (tmp$7 = n.right) != null ? tmp$7 : Kotlin.throwNPE();
                      }
                    }
                    this.insertCase5(n);
                  },
                  insertCase5: function (n) {
                    var tmp$0, tmp$1, tmp$2, tmp$3;
                    ((tmp$0 = n.parent) != null ? tmp$0 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                    ((tmp$1 = n.grandparent()) != null ? tmp$1 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                    if (Kotlin.equals(n, ((tmp$2 = n.parent) != null ? tmp$2 : Kotlin.throwNPE()).left) && Kotlin.equals(n.parent, ((tmp$3 = n.grandparent()) != null ? tmp$3 : Kotlin.throwNPE()).left)) {
                      var tmp$4;
                      this.rotateRight((tmp$4 = n.grandparent()) != null ? tmp$4 : Kotlin.throwNPE());
                    }
                     else {
                      var tmp$5;
                      this.rotateLeft((tmp$5 = n.grandparent()) != null ? tmp$5 : Kotlin.throwNPE());
                    }
                  },
                  delete: function (key) {
                    var n = this.lookupNode(key);
                    if (n == null) {
                      return;
                    }
                     else {
                      this.size_pjslhb$--;
                      if ((n != null ? n : Kotlin.throwNPE()).left != null && (n != null ? n : Kotlin.throwNPE()).right != null) {
                        var tmp$0;
                        var pred = (tmp$0 = (n != null ? n : Kotlin.throwNPE()).left) != null ? tmp$0 : Kotlin.throwNPE();
                        while (pred.right != null) {
                          var tmp$1;
                          pred = (tmp$1 = pred.right) != null ? tmp$1 : Kotlin.throwNPE();
                        }
                        (n != null ? n : Kotlin.throwNPE()).key = pred.key;
                        (n != null ? n : Kotlin.throwNPE()).value = pred.value;
                        n = pred;
                      }
                      var tmp$2;
                      if ((n != null ? n : Kotlin.throwNPE()).right == null) {
                        tmp$2 = (n != null ? n : Kotlin.throwNPE()).left;
                      }
                       else {
                        tmp$2 = (n != null ? n : Kotlin.throwNPE()).right;
                      }
                      var child = tmp$2;
                      if (Kotlin.equals(this.nodeColor(n), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                        (n != null ? n : Kotlin.throwNPE()).color = this.nodeColor(child);
                        this.deleteCase1(n != null ? n : Kotlin.throwNPE());
                      }
                      this.replaceNode(n != null ? n : Kotlin.throwNPE(), child);
                    }
                  },
                  deleteCase1: function (n) {
                    if (n.parent == null) {
                      return;
                    }
                     else {
                      this.deleteCase2(n);
                    }
                  },
                  deleteCase2: function (n) {
                    if (Kotlin.equals(this.nodeColor(n.sibling()), _.org.kevoree.modeling.api.time.blob.Color.object.RED)) {
                      var tmp$0, tmp$1, tmp$2;
                      ((tmp$0 = n.parent) != null ? tmp$0 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                      ((tmp$1 = n.sibling()) != null ? tmp$1 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      if (Kotlin.equals(n, ((tmp$2 = n.parent) != null ? tmp$2 : Kotlin.throwNPE()).left)) {
                        var tmp$3;
                        this.rotateLeft((tmp$3 = n.parent) != null ? tmp$3 : Kotlin.throwNPE());
                      }
                       else {
                        var tmp$4;
                        this.rotateRight((tmp$4 = n.parent) != null ? tmp$4 : Kotlin.throwNPE());
                      }
                    }
                    this.deleteCase3(n);
                  },
                  deleteCase3: function (n) {
                    var tmp$0, tmp$1;
                    if (Kotlin.equals(this.nodeColor(n.parent), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(n.sibling()), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(((tmp$0 = n.sibling()) != null ? tmp$0 : Kotlin.throwNPE()).left), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(((tmp$1 = n.sibling()) != null ? tmp$1 : Kotlin.throwNPE()).right), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                      var tmp$2, tmp$3;
                      ((tmp$2 = n.sibling()) != null ? tmp$2 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                      this.deleteCase1((tmp$3 = n.parent) != null ? tmp$3 : Kotlin.throwNPE());
                    }
                     else {
                      this.deleteCase4(n);
                    }
                  },
                  deleteCase4: function (n) {
                    var tmp$0, tmp$1;
                    if (Kotlin.equals(this.nodeColor(n.parent), _.org.kevoree.modeling.api.time.blob.Color.object.RED) && Kotlin.equals(this.nodeColor(n.sibling()), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(((tmp$0 = n.sibling()) != null ? tmp$0 : Kotlin.throwNPE()).left), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(((tmp$1 = n.sibling()) != null ? tmp$1 : Kotlin.throwNPE()).right), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                      var tmp$2, tmp$3;
                      ((tmp$2 = n.sibling()) != null ? tmp$2 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                      ((tmp$3 = n.parent) != null ? tmp$3 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                    }
                     else {
                      this.deleteCase5(n);
                    }
                  },
                  deleteCase5: function (n) {
                    var tmp$0, tmp$1, tmp$2, tmp$7, tmp$8, tmp$9;
                    if (Kotlin.equals(n, ((tmp$0 = n.parent) != null ? tmp$0 : Kotlin.throwNPE()).left) && Kotlin.equals(this.nodeColor(n.sibling()), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(((tmp$1 = n.sibling()) != null ? tmp$1 : Kotlin.throwNPE()).left), _.org.kevoree.modeling.api.time.blob.Color.object.RED) && Kotlin.equals(this.nodeColor(((tmp$2 = n.sibling()) != null ? tmp$2 : Kotlin.throwNPE()).right), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                      var tmp$3, tmp$4, tmp$5, tmp$6;
                      ((tmp$3 = n.sibling()) != null ? tmp$3 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                      ((tmp$5 = ((tmp$4 = n.sibling()) != null ? tmp$4 : Kotlin.throwNPE()).left) != null ? tmp$5 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      this.rotateRight((tmp$6 = n.sibling()) != null ? tmp$6 : Kotlin.throwNPE());
                    }
                     else if (Kotlin.equals(n, ((tmp$7 = n.parent) != null ? tmp$7 : Kotlin.throwNPE()).right) && Kotlin.equals(this.nodeColor(n.sibling()), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK) && Kotlin.equals(this.nodeColor(((tmp$8 = n.sibling()) != null ? tmp$8 : Kotlin.throwNPE()).right), _.org.kevoree.modeling.api.time.blob.Color.object.RED) && Kotlin.equals(this.nodeColor(((tmp$9 = n.sibling()) != null ? tmp$9 : Kotlin.throwNPE()).left), _.org.kevoree.modeling.api.time.blob.Color.object.BLACK)) {
                      var tmp$10, tmp$11, tmp$12, tmp$13;
                      ((tmp$10 = n.sibling()) != null ? tmp$10 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.RED;
                      ((tmp$12 = ((tmp$11 = n.sibling()) != null ? tmp$11 : Kotlin.throwNPE()).right) != null ? tmp$12 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      this.rotateLeft((tmp$13 = n.sibling()) != null ? tmp$13 : Kotlin.throwNPE());
                    }
                    this.deleteCase6(n);
                  },
                  deleteCase6: function (n) {
                    var tmp$0, tmp$1, tmp$2;
                    ((tmp$0 = n.sibling()) != null ? tmp$0 : Kotlin.throwNPE()).color = this.nodeColor(n.parent);
                    ((tmp$1 = n.parent) != null ? tmp$1 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                    if (Kotlin.equals(n, ((tmp$2 = n.parent) != null ? tmp$2 : Kotlin.throwNPE()).left)) {
                      var tmp$3, tmp$4, tmp$5;
                      ((tmp$4 = ((tmp$3 = n.sibling()) != null ? tmp$3 : Kotlin.throwNPE()).right) != null ? tmp$4 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      this.rotateLeft((tmp$5 = n.parent) != null ? tmp$5 : Kotlin.throwNPE());
                    }
                     else {
                      var tmp$6, tmp$7, tmp$8;
                      ((tmp$7 = ((tmp$6 = n.sibling()) != null ? tmp$6 : Kotlin.throwNPE()).left) != null ? tmp$7 : Kotlin.throwNPE()).color = _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                      this.rotateRight((tmp$8 = n.parent) != null ? tmp$8 : Kotlin.throwNPE());
                    }
                  },
                  nodeColor: function (n) {
                    if (n == null) {
                      return _.org.kevoree.modeling.api.time.blob.Color.object.BLACK;
                    }
                     else {
                      return n.color;
                    }
                  }
                }),
                SharedCache: Kotlin.createClass(null, function () {
                  this.times_ynpjdh$ = new Kotlin.PrimitiveHashMap();
                  this.timeCache = new _.java.util.concurrent.ConcurrentHashMap();
                }, /** @lends _.org.kevoree.modeling.api.time.blob.SharedCache.prototype */ {
                  add: function (tp, tv) {
                    this.times_ynpjdh$.put_wn2jw4$(tp, tv);
                  },
                  get: function (tp) {
                    return this.times_ynpjdh$.get_za3rmp$(tp);
                  },
                  drop: function (tp) {
                    this.times_ynpjdh$.remove_za3rmp$(tp);
                  },
                  keys: function () {
                    return this.times_ynpjdh$.keySet();
                  },
                  flush: function () {
                    this.times_ynpjdh$.clear();
                    this.timeCache.clear();
                  }
                }),
                EntitiesMeta: Kotlin.createClass(null, function () {
                  this.isDirty = false;
                  this.sep = '#';
                  this.list = new Kotlin.PrimitiveHashMap();
                }, /** @lends _.org.kevoree.modeling.api.time.blob.EntitiesMeta.prototype */ {
                  toString: function () {
                    var stringBuilder = new Kotlin.StringBuilder();
                    var isFirst = true;
                    {
                      var tmp$0 = this.list.keySet().iterator();
                      while (tmp$0.hasNext()) {
                        var p = tmp$0.next();
                        if (!isFirst) {
                          stringBuilder.append(this.sep);
                        }
                        stringBuilder.append(p);
                        isFirst = false;
                      }
                    }
                    return stringBuilder.toString();
                  },
                  load: function (payload) {
                    if (Kotlin.equals(payload, '')) {
                      return;
                    }
                    var elements = Kotlin.splitString(payload, this.sep);
                    var tmp$0, tmp$1, tmp$2;
                    {
                      tmp$0 = elements, tmp$1 = tmp$0.length;
                      for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
                        var elem = tmp$0[tmp$2];
                        this.list.put_wn2jw4$(elem, true);
                      }
                    }
                    this.isDirty = false;
                  }
                }),
                EntityMeta: Kotlin.createClass(null, function () {
                  this.latestPersisted = null;
                  this.metatype = null;
                  this.sep = '/';
                }, /** @lends _.org.kevoree.modeling.api.time.blob.EntityMeta.prototype */ {
                  toString: function () {
                    var buidler = new Kotlin.StringBuilder();
                    buidler.append(this.latestPersisted);
                    buidler.append(this.sep);
                    buidler.append(this.metatype);
                    return buidler.toString();
                  },
                  load: function (payload) {
                    var elem = Kotlin.splitString(payload, this.sep);
                    if (elem.length === 2) {
                      var originPayload = elem[0];
                      if (!Kotlin.equals(originPayload, '')) {
                        this.latestPersisted = _.java.lang.Long.parseLong(originPayload);
                      }
                      this.metatype = elem[1];
                    }
                     else {
                      throw new Error('Bad EntityTimeMeta format');
                    }
                  }
                })
              })
            }),
            trace: Kotlin.definePackage(function () {
              this.ModelTraceConstants = Kotlin.createObject(null, function () {
                this.traceType = 't';
                this.src = 's';
                this.refname = 'r';
                this.previouspath = 'p';
                this.typename = 'n';
                this.objpath = 'o';
                this.content = 'c';
                this.openJSON = '{';
                this.closeJSON = '}';
                this.bb = '"';
                this.coma = ',';
                this.dp = ':';
              });
            }, /** @lends _.org.kevoree.modeling.api.trace */ {
              Event2Trace: Kotlin.createClass(null, function (compare) {
                this.compare = compare;
              }, /** @lends _.org.kevoree.modeling.api.trace.Event2Trace.prototype */ {
                convert: function (event) {
                  var result = new Kotlin.ArrayList();
                  {
                    var tmp$0 = event.etype;
                    if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                      var tmp$1;
                      result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveTrace((tmp$1 = event.previousPath) != null ? tmp$1 : Kotlin.throwNPE(), event.elementAttributeName, Kotlin.toString(event.previous_value)));
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                      var tmp$2;
                      result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveAllTrace((tmp$2 = event.previousPath) != null ? tmp$2 : Kotlin.throwNPE(), event.elementAttributeName));
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                      var tmp$3, tmp$4;
                      var casted = (tmp$3 = event.value) != null ? tmp$3 : Kotlin.throwNPE();
                      var traces = this.compare.inter(casted, casted);
                      result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace((tmp$4 = event.previousPath) != null ? tmp$4 : Kotlin.throwNPE(), event.elementAttributeName, casted.path(), casted.metaClassName()));
                      result.addAll_xeylzf$(traces.traces);
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                      var tmp$5;
                      var casted_0 = (tmp$5 = event.value) != null ? tmp$5 : Kotlin.throwNPE();
                      {
                        var tmp$6 = casted_0.iterator();
                        while (tmp$6.hasNext()) {
                          var elem = tmp$6.next();
                          var elemCasted = elem != null ? elem : Kotlin.throwNPE();
                          var traces_0 = this.compare.inter(elemCasted, elemCasted);
                          var tmp$7;
                          result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace((tmp$7 = event.previousPath) != null ? tmp$7 : Kotlin.throwNPE(), event.elementAttributeName, elemCasted.path(), elemCasted.metaClassName()));
                          result.addAll_xeylzf$(traces_0.traces);
                        }
                      }
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                      if (Kotlin.equals(event.elementAttributeType, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE)) {
                        var tmp$8;
                        result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace((tmp$8 = event.previousPath) != null ? tmp$8 : Kotlin.throwNPE(), event.elementAttributeName, null, _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(event.value), null));
                      }
                       else {
                        var tmp$9, tmp$10;
                        result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace((tmp$9 = event.previousPath) != null ? tmp$9 : Kotlin.throwNPE(), event.elementAttributeName, (tmp$10 = event.value) != null ? tmp$10.path() : null, null, null));
                      }
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    }
                     else {
                      throw new Error("Can't convert event : " + event);
                    }
                  }
                  return (new _.org.kevoree.modeling.api.trace.TraceSequence(this.compare.factory)).populate(result);
                },
                inverse: function (event) {
                  var result = new Kotlin.ArrayList();
                  {
                    var tmp$0 = event.etype;
                    if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                      var tmp$1, tmp$2, tmp$3;
                      result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace((tmp$1 = event.previousPath) != null ? tmp$1 : Kotlin.throwNPE(), event.elementAttributeName, ((tmp$2 = event.value) != null ? tmp$2 : Kotlin.throwNPE()).path(), ((tmp$3 = event.value) != null ? tmp$3 : Kotlin.throwNPE()).metaClassName()));
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                      var tmp$4;
                      var casted = (tmp$4 = event.value) != null ? tmp$4 : Kotlin.throwNPE();
                      {
                        var tmp$5 = casted.iterator();
                        while (tmp$5.hasNext()) {
                          var elem = tmp$5.next();
                          var elemCasted = elem != null ? elem : Kotlin.throwNPE();
                          var traces = this.compare.inter(elemCasted, elemCasted);
                          var tmp$6;
                          result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace((tmp$6 = event.previousPath) != null ? tmp$6 : Kotlin.throwNPE(), event.elementAttributeName, elemCasted.path(), elemCasted.metaClassName()));
                          result.addAll_xeylzf$(traces.traces);
                        }
                      }
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                      var tmp$7, tmp$8;
                      var casted_0 = (tmp$7 = event.value) != null ? tmp$7 : Kotlin.throwNPE();
                      var traces_0 = this.compare.inter(casted_0, casted_0);
                      result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveTrace((tmp$8 = event.previousPath) != null ? tmp$8 : Kotlin.throwNPE(), event.elementAttributeName, casted_0.path()));
                      result.addAll_xeylzf$(traces_0.traces);
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                      var tmp$9;
                      var casted_1 = (tmp$9 = event.value) != null ? tmp$9 : Kotlin.throwNPE();
                      {
                        var tmp$10 = casted_1.iterator();
                        while (tmp$10.hasNext()) {
                          var elem_0 = tmp$10.next();
                          var elemCasted_0 = elem_0 != null ? elem_0 : Kotlin.throwNPE();
                          var traces_1 = this.compare.inter(elemCasted_0, elemCasted_0);
                          var tmp$11;
                          result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveTrace((tmp$11 = event.previousPath) != null ? tmp$11 : Kotlin.throwNPE(), event.elementAttributeName, elemCasted_0.path()));
                          result.addAll_xeylzf$(traces_1.traces);
                        }
                      }
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                      if (Kotlin.equals(event.elementAttributeType, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE)) {
                        var tmp$12;
                        result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace((tmp$12 = event.previousPath) != null ? tmp$12 : Kotlin.throwNPE(), event.elementAttributeName, null, _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(event.previous_value), null));
                      }
                       else {
                        var tmp$13, tmp$14;
                        result.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace((tmp$13 = event.previousPath) != null ? tmp$13 : Kotlin.throwNPE(), event.elementAttributeName, (tmp$14 = event.previous_value) != null ? tmp$14.path() : null, null, null));
                      }
                    }
                     else if (tmp$0 === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    }
                     else {
                      throw new Error("Can't convert event : " + event);
                    }
                  }
                  return (new _.org.kevoree.modeling.api.trace.TraceSequence(this.compare.factory)).populate(result);
                }
              }),
              DefaultTraceConverter: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.TraceConverter];
              }, function () {
                this.metaClassNameEquivalence_1_rqkn57$ = new Kotlin.PrimitiveHashMap();
                this.metaClassNameEquivalence_2_rqkn58$ = new Kotlin.PrimitiveHashMap();
                this.attNameEquivalence_1_vwmrr1$ = new Kotlin.PrimitiveHashMap();
                this.attNameEquivalence_2_vwmrr2$ = new Kotlin.PrimitiveHashMap();
              }, /** @lends _.org.kevoree.modeling.api.trace.DefaultTraceConverter.prototype */ {
                addMetaClassEquivalence: function (name1, name2) {
                  this.metaClassNameEquivalence_1_rqkn57$.put_wn2jw4$(name1, name2);
                  this.metaClassNameEquivalence_2_rqkn58$.put_wn2jw4$(name2, name2);
                },
                addAttEquivalence: function (name1, name2) {
                  var fqnArray_1 = Kotlin.splitString(name1, '#');
                  var fqnArray_2 = Kotlin.splitString(name1, '#');
                  this.attNameEquivalence_1_vwmrr1$.put_wn2jw4$(name1, name2);
                  this.attNameEquivalence_2_vwmrr2$.put_wn2jw4$(name2, name2);
                },
                convert: function (trace) {
                  {
                    if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelAddTrace)) {
                      var addTrace = trace;
                      var newTrace = new _.org.kevoree.modeling.api.trace.ModelAddTrace(addTrace.srcPath, addTrace.refName, addTrace.previousPath, this.tryConvertClassName(addTrace.typeName));
                      return newTrace;
                    }
                     else if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelSetTrace)) {
                      var setTrace = trace;
                      var newTrace_0 = new _.org.kevoree.modeling.api.trace.ModelSetTrace(setTrace.srcPath, setTrace.refName, setTrace.objPath, setTrace.content, this.tryConvertClassName(setTrace.typeName));
                      return newTrace_0;
                    }
                     else {
                      return trace;
                    }
                  }
                },
                tryConvertPath: function (previousPath) {
                  if (previousPath == null) {
                    return null;
                  }
                  return previousPath;
                },
                tryConvertClassName: function (previousClassName) {
                  if (previousClassName == null) {
                    return null;
                  }
                  if (this.metaClassNameEquivalence_1_rqkn57$.containsKey_za3rmp$(previousClassName)) {
                    var tmp$0;
                    return (tmp$0 = this.metaClassNameEquivalence_1_rqkn57$.get_za3rmp$(previousClassName)) != null ? tmp$0 : Kotlin.throwNPE();
                  }
                  if (this.metaClassNameEquivalence_2_rqkn58$.containsKey_za3rmp$(previousClassName)) {
                    var tmp$1;
                    return (tmp$1 = this.metaClassNameEquivalence_2_rqkn58$.get_za3rmp$(previousClassName)) != null ? tmp$1 : Kotlin.throwNPE();
                  }
                  return previousClassName;
                },
                tryConvertAttName: function (previousAttName) {
                  if (previousAttName == null) {
                    return null;
                  }
                  var FQNattName = previousAttName;
                  if (this.attNameEquivalence_1_vwmrr1$.containsKey_za3rmp$(FQNattName)) {
                    var tmp$0;
                    return (tmp$0 = this.attNameEquivalence_1_vwmrr1$.get_za3rmp$(FQNattName)) != null ? tmp$0 : Kotlin.throwNPE();
                  }
                  if (this.attNameEquivalence_2_vwmrr2$.containsKey_za3rmp$(FQNattName)) {
                    var tmp$1;
                    return (tmp$1 = this.attNameEquivalence_2_vwmrr2$.get_za3rmp$(FQNattName)) != null ? tmp$1 : Kotlin.throwNPE();
                  }
                  return previousAttName;
                }
              }),
              TraceSequence: Kotlin.createClass(null, function (factory) {
                this.factory = factory;
                this.traces = new Kotlin.ArrayList();
              }, /** @lends _.org.kevoree.modeling.api.trace.TraceSequence.prototype */ {
                populate: function (addtraces) {
                  this.traces.addAll_xeylzf$(addtraces);
                  return this;
                },
                append: function (seq) {
                  this.traces.addAll_xeylzf$(seq.traces);
                },
                populateFromString: function (addtracesTxt) {
                  return this.populateFromStream(_.org.kevoree.modeling.api.util.ByteConverter.byteArrayInputStreamFromString(addtracesTxt));
                },
                populateFromStream: function (inputStream) {
                  var previousControlSrc = null;
                  var previousControlTypeName = null;
                  var lexer = new _.org.kevoree.modeling.api.json.Lexer(inputStream);
                  var currentToken = lexer.nextToken();
                  if (currentToken.tokenType !== _.org.kevoree.modeling.api.json.Type.LEFT_BRACKET) {
                    throw new Error('Bad Format : expect [');
                  }
                  currentToken = lexer.nextToken();
                  var keys = new Kotlin.PrimitiveHashMap();
                  var previousName = null;
                  while (currentToken.tokenType !== _.org.kevoree.modeling.api.json.Type.EOF && currentToken.tokenType !== _.org.kevoree.modeling.api.json.Type.RIGHT_BRACKET) {
                    if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.LEFT_BRACE) {
                      keys.clear();
                    }
                    if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.VALUE) {
                      if (previousName != null) {
                        keys.put_wn2jw4$(previousName != null ? previousName : Kotlin.throwNPE(), Kotlin.toString(currentToken.value));
                        previousName = null;
                      }
                       else {
                        previousName = Kotlin.toString(currentToken.value);
                      }
                    }
                    if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.RIGHT_BRACE) {
                      var traceTypeRead = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                      if (traceTypeRead == null) {
                        traceTypeRead = previousControlTypeName;
                      }
                      {
                        if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.CONTROL.code) {
                          var src = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                          if (src != null) {
                            var tmp$0;
                            previousControlSrc = (tmp$0 = _.org.kevoree.modeling.api.json.JSONString.unescape(src)) != null ? tmp$0 : Kotlin.throwNPE();
                          }
                          var globalTypeName = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                          if (globalTypeName != null) {
                            previousControlTypeName = globalTypeName;
                          }
                        }
                         else if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.SET.code) {
                          var srcFound = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                          if (srcFound == null) {
                            srcFound = previousControlSrc;
                          }
                           else {
                            srcFound = _.org.kevoree.modeling.api.json.JSONString.unescape(srcFound);
                          }
                          var tmp$1;
                          this.traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace(srcFound != null ? srcFound : Kotlin.throwNPE(), (tmp$1 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname)) != null ? tmp$1 : Kotlin.throwNPE(), _.org.kevoree.modeling.api.json.JSONString.unescape(keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.objpath)), _.org.kevoree.modeling.api.json.JSONString.unescape(keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.content)), _.org.kevoree.modeling.api.json.JSONString.unescape(keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.typename))));
                        }
                         else if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.ADD.code) {
                          var srcFound_0 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                          if (srcFound_0 == null) {
                            srcFound_0 = previousControlSrc;
                          }
                           else {
                            srcFound_0 = _.org.kevoree.modeling.api.json.JSONString.unescape(srcFound_0);
                          }
                          var tmp$2, tmp$3;
                          this.traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(srcFound_0 != null ? srcFound_0 : Kotlin.throwNPE(), (tmp$2 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname)) != null ? tmp$2 : Kotlin.throwNPE(), _.org.kevoree.modeling.api.json.JSONString.unescape((tmp$3 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.previouspath)) != null ? tmp$3 : Kotlin.throwNPE()), keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.typename)));
                        }
                         else if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL.code) {
                          var srcFound_1 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                          if (srcFound_1 == null) {
                            srcFound_1 = previousControlSrc;
                          }
                           else {
                            srcFound_1 = _.org.kevoree.modeling.api.json.JSONString.unescape(srcFound_1);
                          }
                          var tmp$4, tmp$5, tmp$6, tmp$7, tmp$8;
                          this.traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddAllTrace(srcFound_1 != null ? srcFound_1 : Kotlin.throwNPE(), (tmp$4 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname)) != null ? tmp$4 : Kotlin.throwNPE(), (tmp$6 = (tmp$5 = _.org.kevoree.modeling.api.json.JSONString.unescape(keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.content))) != null ? Kotlin.splitString(tmp$5, ';') : null) != null ? _.kotlin.toList_2hx8bi$(tmp$6) : null, (tmp$8 = (tmp$7 = _.org.kevoree.modeling.api.json.JSONString.unescape(keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.typename))) != null ? Kotlin.splitString(tmp$7, ';') : null) != null ? _.kotlin.toList_2hx8bi$(tmp$8) : null));
                        }
                         else if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE.code) {
                          var srcFound_2 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                          if (srcFound_2 == null) {
                            srcFound_2 = previousControlSrc;
                          }
                           else {
                            srcFound_2 = _.org.kevoree.modeling.api.json.JSONString.unescape(srcFound_2);
                          }
                          var tmp$9, tmp$10, tmp$11;
                          this.traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveTrace(srcFound_2 != null ? srcFound_2 : Kotlin.throwNPE(), (tmp$9 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname)) != null ? tmp$9 : Kotlin.throwNPE(), (tmp$11 = _.org.kevoree.modeling.api.json.JSONString.unescape((tmp$10 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.objpath)) != null ? tmp$10 : Kotlin.throwNPE())) != null ? tmp$11 : Kotlin.throwNPE()));
                        }
                         else if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL.code) {
                          var srcFound_3 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                          if (srcFound_3 == null) {
                            srcFound_3 = previousControlSrc;
                          }
                           else {
                            srcFound_3 = _.org.kevoree.modeling.api.json.JSONString.unescape(srcFound_3);
                          }
                          var tmp$12;
                          this.traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveAllTrace(srcFound_3 != null ? srcFound_3 : Kotlin.throwNPE(), (tmp$12 = keys.get_za3rmp$(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname)) != null ? tmp$12 : Kotlin.throwNPE()));
                        }
                         else if (traceTypeRead === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX.code) {
                        }
                         else {
                          Kotlin.println('Trace lost !!!');
                        }
                      }
                    }
                    currentToken = lexer.nextToken();
                  }
                  return this;
                },
                exportToString: function () {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append('[');
                  var isFirst = true;
                  var previousSrc = null;
                  var previousType = null;
                  {
                    var tmp$0 = this.traces.iterator();
                    while (tmp$0.hasNext()) {
                      var trace = tmp$0.next();
                      if (!isFirst) {
                        buffer.append(',\n');
                      }
                      if (previousSrc == null || !Kotlin.equals(previousSrc, trace.srcPath)) {
                        buffer.append((new _.org.kevoree.modeling.api.trace.ModelControlTrace(trace.srcPath, null)).toString());
                        buffer.append(',\n');
                        previousSrc = trace.srcPath;
                      }
                      if (previousType == null || !Kotlin.equals(previousType, trace.traceType.code)) {
                        buffer.append((new _.org.kevoree.modeling.api.trace.ModelControlTrace('', trace.traceType.code)).toString());
                        buffer.append(',\n');
                        previousType = trace.traceType.code;
                      }
                      buffer.append(trace.toCString(false, false));
                      isFirst = false;
                    }
                  }
                  buffer.append(']');
                  return buffer.toString();
                },
                toString: function () {
                  return this.exportToString();
                },
                applyOn: function (target) {
                  var traceApplicator = new _.org.kevoree.modeling.api.trace.ModelTraceApplicator(target, this.factory);
                  traceApplicator.applyTraceOnModel(this);
                  return true;
                },
                silentlyApplyOn: function (target) {
                  var traceApplicator = new _.org.kevoree.modeling.api.trace.ModelTraceApplicator(target, this.factory);
                  traceApplicator.fireEvents = false;
                  traceApplicator.applyTraceOnModel(this);
                  return true;
                },
                reverse: function () {
                  var reversed = new Kotlin.ArrayList();
                  var i = _.kotlin.get_size_0(this.traces);
                  while (i > 0) {
                    i = i - 1;
                    reversed.add_za3rmp$(this.traces.get_za3lpa$(i));
                  }
                  this.traces = reversed;
                }
              }),
              ModelTrace: Kotlin.createTrait(null, /** @lends _.org.kevoree.modeling.api.trace.ModelTrace.prototype */ {
                refName: {
                  get: function () {
                    return this.$refName_eb8jwl$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_cer0bq$;
                  }
                },
                srcPath: {
                  get: function () {
                    return this.$srcPath_z3ltm8$;
                  }
                },
                toString: function () {
                  return this.toCString(true, true);
                }
              }),
              ModelControlTrace: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.ModelTrace];
              }, function (srcPath, traceTypeGlobal) {
                this.$srcPath_5kjq8d$ = srcPath;
                this.traceTypeGlobal = traceTypeGlobal;
                this.$refName_qcwzy0$ = '';
                this.$traceType_5dhonr$ = _.org.kevoree.modeling.api.util.ActionType.object.CONTROL;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelControlTrace.prototype */ {
                srcPath: {
                  get: function () {
                    return this.$srcPath_5kjq8d$;
                  }
                },
                refName: {
                  get: function () {
                    return this.$refName_qcwzy0$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_5dhonr$;
                  }
                },
                toCString: function (withTypeName, withSrcPath) {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.openJSON);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.util.ActionType.object.CONTROL.code);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  if (this.traceTypeGlobal == null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.srcPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                   else {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(this.traceTypeGlobal);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.closeJSON);
                  return buffer.toString();
                }
              }),
              ModelAddTrace: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.ModelTrace];
              }, function (srcPath, refName, previousPath, typeName) {
                this.$srcPath_uvkbsf$ = srcPath;
                this.$refName_a3722s$ = refName;
                this.previousPath = previousPath;
                this.typeName = typeName;
                this.$traceType_2i989x$ = _.org.kevoree.modeling.api.util.ActionType.object.ADD;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelAddTrace.prototype */ {
                srcPath: {
                  get: function () {
                    return this.$srcPath_uvkbsf$;
                  }
                },
                refName: {
                  get: function () {
                    return this.$refName_a3722s$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_2i989x$;
                  }
                },
                toCString: function (withTypeName, withSrcPath) {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.openJSON);
                  if (withTypeName) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.util.ActionType.object.ADD.code);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  if (withSrcPath) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.srcPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(this.refName);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  if (this.previousPath != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.previouspath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.previousPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  if (this.typeName != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.typename);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.typeName);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.closeJSON);
                  return buffer.toString();
                }
              }),
              ModelAddAllTrace: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.ModelTrace];
              }, function (srcPath, refName, previousPath, typeName) {
                this.$srcPath_1h16pc$ = srcPath;
                this.$refName_m9egez$ = refName;
                this.previousPath = previousPath;
                this.typeName = typeName;
                this.$traceType_pralmu$ = _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelAddAllTrace.prototype */ {
                srcPath: {
                  get: function () {
                    return this.$srcPath_1h16pc$;
                  }
                },
                refName: {
                  get: function () {
                    return this.$refName_m9egez$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_pralmu$;
                  }
                },
                mkString: function (ss) {
                  if (ss == null) {
                    return null;
                  }
                  var buffer = new Kotlin.StringBuilder();
                  var isFirst = true;
                  {
                    var tmp$0 = ss.iterator();
                    while (tmp$0.hasNext()) {
                      var s = tmp$0.next();
                      if (!isFirst) {
                        buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                      }
                      buffer.append(s);
                      isFirst = false;
                    }
                  }
                  return buffer.toString();
                },
                toCString: function (withTypeName, withSrcPath) {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.openJSON);
                  if (withTypeName) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL.code);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  if (withSrcPath) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.srcPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(this.refName);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  if (this.previousPath != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.previouspath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.mkString(this.previousPath));
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  if (this.typeName != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.typename);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.mkString(this.typeName));
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.closeJSON);
                  return buffer.toString();
                }
              }),
              ModelRemoveTrace: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.ModelTrace];
              }, function (srcPath, refName, objPath) {
                this.$srcPath_7kbv2k$ = srcPath;
                this.$refName_d81en3$ = refName;
                this.objPath = objPath;
                this.$traceType_po7rum$ = _.org.kevoree.modeling.api.util.ActionType.object.REMOVE;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelRemoveTrace.prototype */ {
                srcPath: {
                  get: function () {
                    return this.$srcPath_7kbv2k$;
                  }
                },
                refName: {
                  get: function () {
                    return this.$refName_d81en3$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_po7rum$;
                  }
                },
                toCString: function (withTypeName, withSrcPath) {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.openJSON);
                  if (withTypeName) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE.code);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  if (withSrcPath) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.srcPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(this.refName);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.objpath);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.objPath);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.closeJSON);
                  return buffer.toString();
                }
              }),
              ModelRemoveAllTrace: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.ModelTrace];
              }, function (srcPath, refName) {
                this.$srcPath_mobmwd$ = srcPath;
                this.$refName_rkf5d4$ = refName;
                this.$traceType_z0g113$ = _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelRemoveAllTrace.prototype */ {
                srcPath: {
                  get: function () {
                    return this.$srcPath_mobmwd$;
                  }
                },
                refName: {
                  get: function () {
                    return this.$refName_rkf5d4$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_z0g113$;
                  }
                },
                toCString: function (withTypeName, withSrcPath) {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.openJSON);
                  if (withTypeName) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL.code);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  if (withSrcPath) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.srcPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(this.refName);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.closeJSON);
                  return buffer.toString();
                }
              }),
              ModelSetTrace: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.trace.ModelTrace];
              }, function (srcPath, refName, objPath, content, typeName) {
                this.$srcPath_guqstu$ = srcPath;
                this.$refName_xdzzfn$ = refName;
                this.objPath = objPath;
                this.content = content;
                this.typeName = typeName;
                this.$traceType_j5yedg$ = _.org.kevoree.modeling.api.util.ActionType.object.SET;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelSetTrace.prototype */ {
                srcPath: {
                  get: function () {
                    return this.$srcPath_guqstu$;
                  }
                },
                refName: {
                  get: function () {
                    return this.$refName_xdzzfn$;
                  }
                },
                traceType: {
                  get: function () {
                    return this.$traceType_j5yedg$;
                  }
                },
                toCString: function (withTypeName, withSrcPath) {
                  var buffer = new Kotlin.StringBuilder();
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.openJSON);
                  if (withTypeName) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.traceType);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.util.ActionType.object.SET.code);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  if (withSrcPath) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.src);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.srcPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.refname);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  buffer.append(this.refName);
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  if (this.objPath != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.objpath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.objPath);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  if (this.content != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.content);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.content);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  if (this.typeName != null) {
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.coma);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.typename);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.dp);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                    _.org.kevoree.modeling.api.json.JSONString.encodeBuffer(buffer, this.typeName);
                    buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.bb);
                  }
                  buffer.append(_.org.kevoree.modeling.api.trace.ModelTraceConstants.closeJSON);
                  return buffer.toString();
                }
              }),
              TraceConverter: Kotlin.createTrait(null),
              ModelTraceApplicator: Kotlin.createClass(null, function (targetModel, factory) {
                this.targetModel = targetModel;
                this.factory = factory;
                this.pendingObj = null;
                this.pendingParent = null;
                this.pendingParentRefName = null;
                this.pendingObjPath = null;
                this.fireEvents = true;
              }, /** @lends _.org.kevoree.modeling.api.trace.ModelTraceApplicator.prototype */ {
                tryClosePending: function (srcPath) {
                  if (this.pendingObj != null && !Kotlin.equals(this.pendingObjPath, srcPath)) {
                    var tmp$0, tmp$1;
                    ((tmp$0 = this.pendingParent) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, (tmp$1 = this.pendingParentRefName) != null ? tmp$1 : Kotlin.throwNPE(), this.pendingObj, true, this.fireEvents);
                    this.pendingObj = null;
                    this.pendingObjPath = null;
                    this.pendingParentRefName = null;
                    this.pendingParent = null;
                  }
                },
                createOrAdd: function (previousPath, target, refName, potentialTypeName) {
                  var targetElem = null;
                  if (previousPath != null) {
                    targetElem = this.targetModel.findByPath(previousPath);
                  }
                  if (targetElem != null) {
                    target.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, refName, targetElem, true, this.fireEvents);
                  }
                   else {
                    if (potentialTypeName == null) {
                      throw new Error('Unknow typeName for potential path ' + Kotlin.toString(previousPath) + ', to store in ' + refName + ', unconsistency error');
                    }
                    this.pendingObj = this.factory.create(potentialTypeName);
                    this.pendingObjPath = previousPath;
                    this.pendingParentRefName = refName;
                    this.pendingParent = target;
                  }
                },
                applyTraceOnModel: function (traceSeq) {
                  {
                    var tmp$0 = traceSeq.traces.iterator();
                    while (tmp$0.hasNext()) {
                      var trace = tmp$0.next();
                      var target = this.targetModel;
                      if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelAddTrace)) {
                        this.tryClosePending(null);
                        if (!Kotlin.equals(trace.srcPath, '')) {
                          var resolvedTarget = this.targetModel.findByPath(trace.srcPath);
                          if (resolvedTarget == null) {
                            throw new Error('Add Trace source not found for path : ' + trace.srcPath + ' pending ' + this.pendingObjPath + '\n' + trace.toString());
                          }
                          target = resolvedTarget != null ? resolvedTarget : Kotlin.throwNPE();
                        }
                        this.createOrAdd(trace.previousPath, target, trace.refName, trace.typeName);
                      }
                      if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelAddAllTrace)) {
                        this.tryClosePending(null);
                        var i = 0;
                        var tmp$1;
                        {
                          var tmp$2 = ((tmp$1 = trace.previousPath) != null ? tmp$1 : Kotlin.throwNPE()).iterator();
                          while (tmp$2.hasNext()) {
                            var path = tmp$2.next();
                            var tmp$3;
                            this.createOrAdd(path, target, trace.refName, ((tmp$3 = trace.typeName) != null ? tmp$3 : Kotlin.throwNPE()).get_za3lpa$(i));
                            i++;
                          }
                        }
                      }
                      if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelRemoveTrace)) {
                        this.tryClosePending(trace.srcPath);
                        var tempTarget = this.targetModel;
                        if (!Kotlin.equals(trace.srcPath, '')) {
                          tempTarget = this.targetModel.findByPath(trace.srcPath);
                        }
                        if (tempTarget != null) {
                          (tempTarget != null ? tempTarget : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, trace.refName, this.targetModel.findByPath(trace.objPath), true, this.fireEvents);
                        }
                      }
                      if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelRemoveAllTrace)) {
                        this.tryClosePending(trace.srcPath);
                        var tempTarget_0 = this.targetModel;
                        if (!Kotlin.equals(trace.srcPath, '')) {
                          tempTarget_0 = this.targetModel.findByPath(trace.srcPath);
                        }
                        if (tempTarget_0 != null) {
                          (tempTarget_0 != null ? tempTarget_0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, trace.refName, null, true, this.fireEvents);
                        }
                      }
                      if (Kotlin.isType(trace, _.org.kevoree.modeling.api.trace.ModelSetTrace)) {
                        this.tryClosePending(trace.srcPath);
                        if (!Kotlin.equals(trace.srcPath, '') && !Kotlin.equals(trace.srcPath, this.pendingObjPath)) {
                          var tempObject = this.targetModel.findByPath(trace.srcPath);
                          if (tempObject == null) {
                            throw new Error('Set Trace source not found for path : ' + trace.srcPath + ' pending ' + this.pendingObjPath + '\n' + trace.toString());
                          }
                          target = tempObject != null ? tempObject : Kotlin.throwNPE();
                        }
                         else {
                          if (Kotlin.equals(trace.srcPath, this.pendingObjPath) && this.pendingObj != null) {
                            var tmp$4;
                            target = (tmp$4 = this.pendingObj) != null ? tmp$4 : Kotlin.throwNPE();
                          }
                        }
                        if (trace.content != null) {
                          target.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, trace.refName, trace.content, true, this.fireEvents);
                        }
                         else {
                          var tmp$5;
                          if (trace.objPath != null) {
                            tmp$5 = this.targetModel.findByPath(trace.objPath);
                          }
                           else {
                            tmp$5 = null;
                          }
                          var targetContentPath = tmp$5;
                          if (targetContentPath != null) {
                            target.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, trace.refName, targetContentPath, true, this.fireEvents);
                          }
                           else {
                            if (trace.typeName != null && !Kotlin.equals(trace.typeName, '')) {
                              this.createOrAdd(trace.objPath, target, trace.refName, trace.typeName);
                            }
                             else {
                              target.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, trace.refName, targetContentPath, true, this.fireEvents);
                            }
                          }
                        }
                      }
                    }
                  }
                  this.tryClosePending(null);
                }
              })
            }),
            compare: Kotlin.definePackage(null, /** @lends _.org.kevoree.modeling.api.compare */ {
              ModelCompare: Kotlin.createClass(null, function (factory) {
                this.factory = factory;
              }, /** @lends _.org.kevoree.modeling.api.compare.ModelCompare.prototype */ {
                diff: function (origin, target) {
                  return (new _.org.kevoree.modeling.api.trace.TraceSequence(this.factory)).populate(this.internal_diff(origin, target, false, false));
                },
                merge: function (origin, target) {
                  return (new _.org.kevoree.modeling.api.trace.TraceSequence(this.factory)).populate(this.internal_diff(origin, target, false, true));
                },
                inter: function (origin, target) {
                  return (new _.org.kevoree.modeling.api.trace.TraceSequence(this.factory)).populate(this.internal_diff(origin, target, true, false));
                },
                internal_diff: function (origin, target, inter, merge) {
                  var traces = new Kotlin.ArrayList();
                  var tracesRef = new Kotlin.ArrayList();
                  var objectsMap = new Kotlin.PrimitiveHashMap();
                  traces.addAll_xeylzf$(origin.createTraces(target, inter, merge, false, true));
                  tracesRef.addAll_xeylzf$(origin.createTraces(target, inter, merge, true, false));
                  var visitor = _.org.kevoree.modeling.api.compare.ModelCompare.internal_diff$f(objectsMap);
                  origin.visit(visitor, true, true, false);
                  var visitor2 = _.org.kevoree.modeling.api.compare.ModelCompare.internal_diff$f_0(objectsMap, inter, traces, merge, tracesRef);
                  target.visit(visitor2, true, true, false);
                  traces.addAll_xeylzf$(tracesRef);
                  if (!inter) {
                    if (!merge) {
                      {
                        var tmp$0 = objectsMap.keySet().iterator();
                        while (tmp$0.hasNext()) {
                          var diffChildKey = tmp$0.next();
                          var tmp$1, tmp$3, tmp$5;
                          var diffChild = (tmp$1 = objectsMap.get_za3rmp$(diffChildKey)) != null ? tmp$1 : Kotlin.throwNPE();
                          if (diffChild.eContainer() != null) {
                            var tmp$2;
                            tmp$3 = ((tmp$2 = diffChild.eContainer()) != null ? tmp$2 : Kotlin.throwNPE()).path();
                          }
                           else {
                            tmp$3 = 'null';
                          }
                          var src = tmp$3;
                          if (diffChild.getRefInParent() != null) {
                            var tmp$4;
                            tmp$5 = (tmp$4 = diffChild.getRefInParent()) != null ? tmp$4 : Kotlin.throwNPE();
                          }
                           else {
                            tmp$5 = 'null';
                          }
                          var refNameInParent = tmp$5;
                          traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveTrace(src, refNameInParent, diffChild.path()));
                        }
                      }
                    }
                  }
                  return traces;
                }
              }, /** @lends _.org.kevoree.modeling.api.compare.ModelCompare */ {
                internal_diff$f: function (objectsMap) {
                  return Kotlin.createObject(function () {
                    return [_.org.kevoree.modeling.api.util.ModelVisitor];
                  }, function $fun() {
                    $fun.baseInitializer.call(this);
                  }, {
                    visit: function (elem, refNameInParent, parent) {
                      var childPath = elem.path();
                      if (childPath != null) {
                        objectsMap.put_wn2jw4$(childPath, elem);
                      }
                       else {
                        throw new Error('Null child path ' + elem);
                      }
                    }
                  });
                },
                internal_diff$f_0: function (objectsMap, inter, traces, merge, tracesRef) {
                  return Kotlin.createObject(function () {
                    return [_.org.kevoree.modeling.api.util.ModelVisitor];
                  }, function $fun() {
                    $fun.baseInitializer.call(this);
                  }, {
                    visit: function (elem, refNameInParent, parent) {
                      var childPath = elem.path();
                      if (objectsMap.containsKey_za3rmp$(childPath)) {
                        if (inter) {
                          traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(parent.path(), refNameInParent, elem.path(), elem.metaClassName()));
                        }
                        var tmp$0, tmp$1;
                        traces.addAll_xeylzf$(((tmp$0 = objectsMap.get_za3rmp$(childPath)) != null ? tmp$0 : Kotlin.throwNPE()).createTraces(elem, inter, merge, false, true));
                        tracesRef.addAll_xeylzf$(((tmp$1 = objectsMap.get_za3rmp$(childPath)) != null ? tmp$1 : Kotlin.throwNPE()).createTraces(elem, inter, merge, true, false));
                        objectsMap.remove_za3rmp$(childPath);
                      }
                       else {
                        if (!inter) {
                          traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(parent.path(), refNameInParent, elem.path(), elem.metaClassName()));
                          traces.addAll_xeylzf$(elem.createTraces(elem, true, merge, false, true));
                          tracesRef.addAll_xeylzf$(elem.createTraces(elem, true, merge, true, false));
                        }
                      }
                    }
                  });
                }
              })
            }),
            events: Kotlin.definePackage(null, /** @lends _.org.kevoree.modeling.api.events */ {
              ModelEvent: Kotlin.createClass(null, function (etype, elementAttributeType, elementAttributeName, value, previous_value, source, previousPath) {
                this.etype = etype;
                this.elementAttributeType = elementAttributeType;
                this.elementAttributeName = elementAttributeName;
                this.value = value;
                this.previous_value = previous_value;
                this.source = source;
                this.previousPath = previousPath;
              }, /** @lends _.org.kevoree.modeling.api.events.ModelEvent.prototype */ {
                toString: function () {
                  if (Kotlin.isType(this.source, _.org.kevoree.modeling.api.time.TimeAwareKMFContainer)) {
                    return 'ModelEvent[src:[' + this.source.now + ']' + this.source.path() + ', type:' + this.etype + ', elementAttributeType:' + this.elementAttributeType + ', elementAttributeName:' + this.elementAttributeName + ', value:' + Kotlin.toString(this.value) + ', previousValue:' + Kotlin.toString(this.previous_value) + ']';
                  }
                   else {
                    var tmp$0;
                    return 'ModelEvent[src:' + Kotlin.toString((tmp$0 = this.source) != null ? tmp$0.path() : null) + ', type:' + this.etype + ', elementAttributeType:' + this.elementAttributeType + ', elementAttributeName:' + this.elementAttributeName + ', value:' + Kotlin.toString(this.value) + ', previousValue:' + Kotlin.toString(this.previous_value) + ']';
                  }
                }
              }),
              ModelElementListener: Kotlin.createTrait(null)
            }),
            ModelPruner: Kotlin.createClass(null, function (factory) {
              this.factory = factory;
            }, /** @lends _.org.kevoree.modeling.api.ModelPruner.prototype */ {
              prune: function (elems) {
                var traces = new Kotlin.ArrayList();
                var tempMap = new Kotlin.PrimitiveHashMap();
                var parentMap = new Kotlin.PrimitiveHashMap();
                {
                  var tmp$0 = elems.iterator();
                  while (tmp$0.hasNext()) {
                    var elem = tmp$0.next();
                    this.internal_prune(elem, traces, tempMap, parentMap);
                  }
                }
                {
                  var tmp$1 = tempMap.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var toLinkKey = tmp$1.next();
                    var tmp$2;
                    var toLink = (tmp$2 = tempMap.get_za3rmp$(toLinkKey)) != null ? tmp$2 : Kotlin.throwNPE();
                    traces.addAll_xeylzf$(toLink.toTraces(false, true));
                  }
                }
                return (new _.org.kevoree.modeling.api.trace.TraceSequence(this.factory)).populate(traces);
              },
              internal_prune: function (elem, traces, cache, parentMap) {
                var parents = new Kotlin.ArrayList();
                var currentParent = elem.eContainer();
                while (currentParent != null && parentMap.get_za3rmp$((currentParent != null ? currentParent : Kotlin.throwNPE()).path()) == null && cache.get_za3rmp$((currentParent != null ? currentParent : Kotlin.throwNPE()).path()) == null) {
                  parents.add_za3rmp$(currentParent != null ? currentParent : Kotlin.throwNPE());
                  currentParent = (currentParent != null ? currentParent : Kotlin.throwNPE()).eContainer();
                }
                {
                  var tmp$0 = _.kotlin.reverse_h3panj$(parents).iterator();
                  while (tmp$0.hasNext()) {
                    var parent = tmp$0.next();
                    if (parent.eContainer() != null) {
                      var tmp$1, tmp$2;
                      traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(((tmp$1 = parent.eContainer()) != null ? tmp$1 : Kotlin.throwNPE()).path(), (tmp$2 = parent.getRefInParent()) != null ? tmp$2 : Kotlin.throwNPE(), parent.path(), parent.metaClassName()));
                    }
                    traces.addAll_xeylzf$(parent.toTraces(true, false));
                    parentMap.put_wn2jw4$(parent.path(), parent);
                  }
                }
                if (cache.get_za3rmp$(elem.path()) == null && parentMap.get_za3rmp$(elem.path()) == null) {
                  if (elem.eContainer() != null) {
                    var tmp$3, tmp$4;
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(((tmp$3 = elem.eContainer()) != null ? tmp$3 : Kotlin.throwNPE()).path(), (tmp$4 = elem.getRefInParent()) != null ? tmp$4 : Kotlin.throwNPE(), elem.path(), elem.metaClassName()));
                  }
                  traces.addAll_xeylzf$(elem.toTraces(true, false));
                }
                cache.put_wn2jw4$(elem.path(), elem);
                elem.visitReferences(_.org.kevoree.modeling.api.ModelPruner.internal_prune$f(cache, this, traces, parentMap));
              }
            }, /** @lends _.org.kevoree.modeling.api.ModelPruner */ {
              internal_prune$f: function (cache, this$ModelPruner, traces, parentMap) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelVisitor];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, {
                  visit: function (elem, refNameInParent, parent) {
                    if (cache.get_za3rmp$(elem.path()) == null) {
                      this$ModelPruner.internal_prune(elem, traces, cache, parentMap);
                    }
                  }
                });
              }
            }),
            ModelLoader: Kotlin.createTrait(null),
            TimedContainer: Kotlin.createTrait(function () {
              return [_.org.kevoree.modeling.api.KMFContainer];
            }, /** @lends _.org.kevoree.modeling.api.TimedContainer.prototype */ {
              now: {
                get: function () {
                  return this.$now_2vpa82$;
                },
                set: function (tmp$0) {
                  this.$now_2vpa82$ = tmp$0;
                }
              }
            }),
            ModelCloner: Kotlin.createClass(null, function (factory) {
              this.factory = factory;
            }, /** @lends _.org.kevoree.modeling.api.ModelCloner.prototype */ {
              createContext: function () {
                return new _.java.util.IdentityHashMap();
              },
              clone: function (o) {
                return this.clone_1(o, false);
              },
              clone_1: function (o, readOnly) {
                return this.clone_2(o, readOnly, false);
              },
              cloneMutableOnly: function (o, readOnly) {
                return this.clone_2(o, readOnly, true);
              },
              cloneModelElem: function (src) {
                var tmp$0;
                var clonedSrc = (tmp$0 = this.factory.create(src.metaClassName())) != null ? tmp$0 : Kotlin.throwNPE();
                var attributesCloner = _.org.kevoree.modeling.api.ModelCloner.cloneModelElem$f(clonedSrc);
                src.visitAttributes(attributesCloner);
                return clonedSrc;
              },
              resolveModelElem: function (src, target, context, mutableOnly) {
                var refResolver = _.org.kevoree.modeling.api.ModelCloner.resolveModelElem$f(mutableOnly, target, context);
                src.visit(refResolver, false, true, true);
              },
              clone_2: function (o, readOnly, mutableOnly) {
                var context = this.createContext();
                var clonedObject = this.cloneModelElem(o);
                context.put_wn2jw4$(o, clonedObject);
                var cloneGraphVisitor = _.org.kevoree.modeling.api.ModelCloner.clone_2$f(mutableOnly, context, this);
                o.visit(cloneGraphVisitor, true, true, false);
                var resolveGraphVisitor = _.org.kevoree.modeling.api.ModelCloner.clone_2$f_0(mutableOnly, context, this, readOnly);
                this.resolveModelElem(o, clonedObject, context, mutableOnly);
                o.visit(resolveGraphVisitor, true, true, false);
                if (readOnly) {
                  clonedObject.setInternalReadOnly();
                }
                if (o.isRoot()) {
                  this.factory.root(clonedObject);
                }
                return clonedObject;
              }
            }, /** @lends _.org.kevoree.modeling.api.ModelCloner */ {
              cloneModelElem$f: function (clonedSrc) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
                }, null, {
                  visit: function (value, name, parent) {
                    if (value != null) {
                      if (Kotlin.isType(value, Kotlin.ArrayList)) {
                        var clonedList = new Kotlin.ArrayList();
                        clonedList.addAll_xeylzf$(value != null ? value : Kotlin.throwNPE());
                        clonedSrc.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, name, clonedList, false, false);
                      }
                       else {
                        clonedSrc.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, name, value, false, false);
                      }
                    }
                  }
                });
              },
              resolveModelElem$f: function (mutableOnly, target, context) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelVisitor];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, {
                  visit: function (elem, refNameInParent, parent) {
                    if (mutableOnly && elem.isRecursiveReadOnly()) {
                      target.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, refNameInParent, elem, false, false);
                    }
                     else {
                      var elemResolved = context.get_za3rmp$(elem);
                      if (elemResolved == null) {
                        throw new Error('Cloner error, not self-contain model, the element ' + elem.path() + ' is contained in the root element');
                      }
                      target.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, refNameInParent, elemResolved, false, false);
                    }
                  }
                });
              },
              clone_2$f: function (mutableOnly, context, this$ModelCloner) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelVisitor];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, {
                  visit: function (elem, refNameInParent, parent) {
                    if (mutableOnly && elem.isRecursiveReadOnly()) {
                      this.noChildrenVisit();
                    }
                     else {
                      context.put_wn2jw4$(elem, this$ModelCloner.cloneModelElem(elem));
                    }
                  }
                });
              },
              clone_2$f_0: function (mutableOnly, context, this$ModelCloner, readOnly) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelVisitor];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, {
                  visit: function (elem, refNameInParent, parent) {
                    if (mutableOnly && elem.isRecursiveReadOnly()) {
                    }
                     else {
                      var tmp$0;
                      var clonedObj = (tmp$0 = context.get_za3rmp$(elem)) != null ? tmp$0 : Kotlin.throwNPE();
                      this$ModelCloner.resolveModelElem(elem, clonedObj, context, mutableOnly);
                      if (readOnly) {
                        clonedObj.setInternalReadOnly();
                      }
                    }
                  }
                });
              }
            }),
            TransactionManager: Kotlin.createTrait(null),
            Transaction: Kotlin.createTrait(null),
            TimeTransaction: Kotlin.createTrait(function () {
              return [_.org.kevoree.modeling.api.Transaction];
            }),
            KMFFactory: Kotlin.createTrait(null),
            KMFContainer: Kotlin.createTrait(null),
            ModelSerializer: Kotlin.createTrait(null),
            util: Kotlin.definePackage(function () {
              this.KevURLEncoder = Kotlin.createObject(null, function () {
                this.nonEscaped_rysd1l$ = new Kotlin.PrimitiveHashMap();
                this.escaped_qojrqa$ = new Kotlin.PrimitiveHashMap();
                this.rescaped_9ikhle$ = new Kotlin.PrimitiveHashMap();
                var i = 'a';
                while (i < 'z') {
                  this.nonEscaped_rysd1l$.put_wn2jw4$(i, true);
                  i++;
                }
                i = 'A';
                while (i < 'Z') {
                  this.nonEscaped_rysd1l$.put_wn2jw4$(i, true);
                  i++;
                }
                i = '0';
                while (i < '9') {
                  this.nonEscaped_rysd1l$.put_wn2jw4$(i, true);
                  i++;
                }
                this.escaped_qojrqa$.put_wn2jw4$('!', '%21');
                this.escaped_qojrqa$.put_wn2jw4$('"', '%22');
                this.escaped_qojrqa$.put_wn2jw4$('#', '%23');
                this.escaped_qojrqa$.put_wn2jw4$('$', '%24');
                this.escaped_qojrqa$.put_wn2jw4$('%', '%25');
                this.escaped_qojrqa$.put_wn2jw4$('&', '%26');
                this.escaped_qojrqa$.put_wn2jw4$('*', '%2A');
                this.escaped_qojrqa$.put_wn2jw4$(',', '%2C');
                this.escaped_qojrqa$.put_wn2jw4$('/', '%2F');
                this.escaped_qojrqa$.put_wn2jw4$(']', '%5B');
                this.escaped_qojrqa$.put_wn2jw4$('\\', '%5c');
                this.escaped_qojrqa$.put_wn2jw4$('[', '%5D');
                {
                  var tmp$0 = this.escaped_qojrqa$.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var c = tmp$0.next();
                    var tmp$1;
                    this.rescaped_9ikhle$.put_wn2jw4$((tmp$1 = this.escaped_qojrqa$.get_za3rmp$(c)) != null ? tmp$1 : Kotlin.throwNPE(), c);
                  }
                }
              }, {
                encode: function (chain) {
                  if (chain == null) {
                    return null;
                  }
                  var buffer = null;
                  var i = 0;
                  while (i < chain.length) {
                    var ch = chain.charAt(i);
                    if (_.kotlin.contains_6halgi$(this.nonEscaped_rysd1l$, ch)) {
                      if (buffer != null) {
                        (buffer != null ? buffer : Kotlin.throwNPE()).append(ch);
                      }
                    }
                     else {
                      var resolved = this.escaped_qojrqa$.get_za3rmp$(ch);
                      if (resolved != null) {
                        if (buffer == null) {
                          buffer = new Kotlin.StringBuilder();
                          (buffer != null ? buffer : Kotlin.throwNPE()).append(chain.substring(0, i));
                        }
                        (buffer != null ? buffer : Kotlin.throwNPE()).append(resolved);
                      }
                    }
                    i = i + 1;
                  }
                  if (buffer != null) {
                    return Kotlin.toString(buffer);
                  }
                   else {
                    return chain;
                  }
                },
                decode: function (src) {
                  if (src == null) {
                    return null;
                  }
                  if (src.length === 0) {
                    return src;
                  }
                  var builder = null;
                  var i = 0;
                  while (i < src.length) {
                    var current = src.charAt(i);
                    if (current === '%') {
                      if (builder == null) {
                        builder = new Kotlin.StringBuilder();
                        builder != null ? builder.append(src.substring(0, i)) : null;
                      }
                      var key = current.toString() + src.charAt(i + 1) + src.charAt(i + 2);
                      var resolved = this.rescaped_9ikhle$.get_za3rmp$(key);
                      if (resolved == null) {
                        builder = builder != null ? builder.append(key) : null;
                      }
                       else {
                        builder = builder != null ? builder.append(resolved) : null;
                      }
                      i = i + 2;
                    }
                     else {
                      if (builder != null) {
                        builder = builder != null ? builder.append(current) : null;
                      }
                    }
                    i++;
                  }
                  if (builder != null) {
                    return (builder != null ? builder : Kotlin.throwNPE()).toString();
                  }
                   else {
                    return src;
                  }
                }
              });
              this.AttConverter = Kotlin.createObject(null, null, {
                convFlatAtt: function (value) {
                  if (value == null) {
                    return null;
                  }
                  if (Kotlin.isType(value, Kotlin.ArrayList)) {
                    var isF = true;
                    var buffer = new Kotlin.StringBuilder();
                    {
                      var tmp$0 = value.iterator();
                      while (tmp$0.hasNext()) {
                        var v = tmp$0.next();
                        if (!isF) {
                          buffer.append('$');
                        }
                        buffer.append(Kotlin.toString(v));
                        isF = false;
                      }
                    }
                    return buffer.toString();
                  }
                   else {
                    return value.toString();
                  }
                },
                convAttFlat: function (value) {
                  return Kotlin.splitString(value.toString(), '$');
                }
              });
              this.ByteConverter = Kotlin.createObject(null, null, {
                toChar: function (b) {
                  return b;
                },
                fromChar: function (b) {
                  return b;
                },
                byteArrayInputStreamFromString: function (str) {
                  var bytes = Kotlin.numberArrayOfSize(str.length);
                  var i = 0;
                  while (i < str.length) {
                    bytes[i] = str.charAt(i);
                    i = i + 1;
                  }
                  return new _.java.io.ByteArrayInputStream(bytes);
                }
              });
              this.Selector = Kotlin.createObject(null, null, {
                select: function (root, query) {
                  var extractedQuery = this.extractFirstQuery(query);
                  var result = new Kotlin.ArrayList();
                  var tempResult = {v: new Kotlin.PrimitiveHashMap()};
                  tempResult.v.put_wn2jw4$(root.path(), root);
                  while (extractedQuery != null) {
                    var staticExtractedQuery = extractedQuery != null ? extractedQuery : Kotlin.throwNPE();
                    var clonedRound = tempResult.v;
                    tempResult.v = new Kotlin.PrimitiveHashMap();
                    {
                      var tmp$0 = clonedRound.keySet().iterator();
                      while (tmp$0.hasNext()) {
                        var currentRootKey = tmp$0.next();
                        var tmp$1;
                        var currentRoot = (tmp$1 = clonedRound.get_za3rmp$(currentRootKey)) != null ? tmp$1 : Kotlin.throwNPE();
                        var resolved = null;
                        if (!staticExtractedQuery.oldString.contains('*')) {
                          resolved = currentRoot.findByPath(staticExtractedQuery.oldString);
                        }
                        if (resolved != null) {
                          tempResult.v.put_wn2jw4$((resolved != null ? resolved : Kotlin.throwNPE()).path(), resolved != null ? resolved : Kotlin.throwNPE());
                        }
                         else {
                          var alreadyVisited = {v: new Kotlin.PrimitiveHashMap()};
                          var visitor = _.org.kevoree.modeling.api.util.select$f(staticExtractedQuery, alreadyVisited, tempResult);
                          if (staticExtractedQuery.previousIsDeep) {
                            currentRoot.visit(visitor, false, true, staticExtractedQuery.previousIsRefDeep);
                          }
                           else {
                            currentRoot.visit(visitor, false, true, true);
                          }
                        }
                      }
                    }
                    if (staticExtractedQuery.subQuery == null) {
                      extractedQuery = null;
                    }
                     else {
                      extractedQuery = this.extractFirstQuery(staticExtractedQuery.subQuery);
                    }
                  }
                  {
                    var tmp$2 = tempResult.v.keySet().iterator();
                    while (tmp$2.hasNext()) {
                      var v = tmp$2.next();
                      var tmp$3;
                      result.add_za3rmp$((tmp$3 = tempResult.v.get_za3rmp$(v)) != null ? tmp$3 : Kotlin.throwNPE());
                    }
                  }
                  return result;
                },
                extractFirstQuery: function (query) {
                  if (query.charAt(0) === '/') {
                    var subQuery = null;
                    if (query.length > 1) {
                      subQuery = query.substring(1);
                    }
                    var params = new Kotlin.PrimitiveHashMap();
                    return new _.org.kevoree.modeling.api.util.KmfQuery('', params, subQuery, '/', false, false);
                  }
                  if (query.startsWith('**/')) {
                    if (query.length > 3) {
                      var next = this.extractFirstQuery(query.substring(3));
                      if (next != null) {
                        next.previousIsDeep = true;
                        next.previousIsRefDeep = false;
                      }
                      return next;
                    }
                     else {
                      return null;
                    }
                  }
                  if (query.startsWith('***/')) {
                    if (query.length > 4) {
                      var next_0 = this.extractFirstQuery(query.substring(4));
                      if (next_0 != null) {
                        next_0.previousIsDeep = true;
                        next_0.previousIsRefDeep = true;
                      }
                      return next_0;
                    }
                     else {
                      return null;
                    }
                  }
                  var i = 0;
                  var relationNameEnd = 0;
                  var attsEnd = 0;
                  var escaped = false;
                  while (i < query.length && (query.charAt(i) !== '/' || escaped)) {
                    if (escaped) {
                      escaped = false;
                    }
                    if (query.charAt(i) === '[') {
                      relationNameEnd = i;
                    }
                     else {
                      if (query.charAt(i) === ']') {
                        attsEnd = i;
                      }
                       else {
                        if (query.charAt(i) === '\\') {
                          escaped = true;
                        }
                      }
                    }
                    i = i + 1;
                  }
                  if (i > 0 && relationNameEnd > 0) {
                    var oldString = query.substring(0, i);
                    var subQuery_0 = null;
                    if (i + 1 < query.length) {
                      subQuery_0 = query.substring(i + 1);
                    }
                    var relName = query.substring(0, relationNameEnd);
                    var params_0 = new Kotlin.PrimitiveHashMap();
                    relName = relName.replace('\\', '');
                    if (attsEnd !== 0) {
                      var paramString = query.substring(relationNameEnd + 1, attsEnd);
                      var iParam = 0;
                      var lastStart = iParam;
                      escaped = false;
                      while (iParam < paramString.length) {
                        if (paramString.charAt(iParam) === ',' && !escaped) {
                          var p = paramString.substring(lastStart, iParam).trim();
                          if (!Kotlin.equals(p, '') && !Kotlin.equals(p, '*')) {
                            if (p.endsWith('=')) {
                              p = p + '*';
                            }
                            var pArray = Kotlin.splitString(p, '=');
                            var pObject;
                            if (pArray.length > 1) {
                              var paramKey = pArray[0].trim();
                              var negative = paramKey.endsWith('!');
                              pObject = new _.org.kevoree.modeling.api.util.KmfQueryParam(paramKey.replace('!', ''), pArray[1].trim(), _.kotlin.get_size_1(params_0), negative);
                              var tmp$0;
                              params_0.put_wn2jw4$((tmp$0 = pObject.name) != null ? tmp$0 : Kotlin.throwNPE(), pObject);
                            }
                             else {
                              pObject = new _.org.kevoree.modeling.api.util.KmfQueryParam(null, p, _.kotlin.get_size_1(params_0), false);
                              params_0.put_wn2jw4$('@id', pObject);
                            }
                          }
                          lastStart = iParam + 1;
                        }
                         else {
                          if (paramString.charAt(iParam) === '\\') {
                            escaped = true;
                          }
                           else {
                            escaped = false;
                          }
                        }
                        iParam = iParam + 1;
                      }
                      var lastParam = paramString.substring(lastStart, iParam).trim();
                      if (!Kotlin.equals(lastParam, '') && !Kotlin.equals(lastParam, '*')) {
                        if (lastParam.endsWith('=')) {
                          lastParam = lastParam + '*';
                        }
                        var pArray_0 = Kotlin.splitString(lastParam, '=');
                        var pObject_0;
                        if (pArray_0.length > 1) {
                          var paramKey_0 = pArray_0[0].trim();
                          var negative_0 = paramKey_0.endsWith('!');
                          pObject_0 = new _.org.kevoree.modeling.api.util.KmfQueryParam(paramKey_0.replace('!', ''), pArray_0[1].trim(), _.kotlin.get_size_1(params_0), negative_0);
                          var tmp$1;
                          params_0.put_wn2jw4$((tmp$1 = pObject_0.name) != null ? tmp$1 : Kotlin.throwNPE(), pObject_0);
                        }
                         else {
                          pObject_0 = new _.org.kevoree.modeling.api.util.KmfQueryParam(null, lastParam, _.kotlin.get_size_1(params_0), false);
                          params_0.put_wn2jw4$('@id', pObject_0);
                        }
                      }
                    }
                    return new _.org.kevoree.modeling.api.util.KmfQuery(relName, params_0, subQuery_0, oldString, false, false);
                  }
                  return null;
                }
              });
            }, /** @lends _.org.kevoree.modeling.api.util */ {
              ModelVisitor: Kotlin.createClass(null, function () {
                this.visitStopped = false;
                this.visitChildren = true;
                this.visitReferences = true;
                this.alreadyVisited = null;
              }, /** @lends _.org.kevoree.modeling.api.util.ModelVisitor.prototype */ {
                stopVisit: function () {
                  this.visitStopped = true;
                },
                noChildrenVisit: function () {
                  this.visitChildren = false;
                },
                noReferencesVisit: function () {
                  this.visitReferences = false;
                },
                beginVisitElem: function (elem) {
                },
                endVisitElem: function (elem) {
                },
                beginVisitRef: function (refName, refType) {
                  return true;
                },
                endVisitRef: function (refName) {
                }
              }),
              ElementAttributeType: Kotlin.createClass(function () {
                return [Kotlin.Enum];
              }, function $fun() {
                $fun.baseInitializer.call(this);
              }, null, /** @lends _.org.kevoree.modeling.api.util.ElementAttributeType */ {
                object_initializer$: function () {
                  return Kotlin.createEnumEntries({
                    ATTRIBUTE: new _.org.kevoree.modeling.api.util.ElementAttributeType(),
                    REFERENCE: new _.org.kevoree.modeling.api.util.ElementAttributeType(),
                    CONTAINMENT: new _.org.kevoree.modeling.api.util.ElementAttributeType()
                  });
                }
              }),
              ActionType: Kotlin.createClass(function () {
                return [Kotlin.Enum];
              }, function $fun(code) {
                $fun.baseInitializer.call(this);
                this.code = code;
              }, null, /** @lends _.org.kevoree.modeling.api.util.ActionType */ {
                object_initializer$: function () {
                  return Kotlin.createEnumEntries({
                    SET: new _.org.kevoree.modeling.api.util.ActionType('S'),
                    ADD: new _.org.kevoree.modeling.api.util.ActionType('a'),
                    REMOVE: new _.org.kevoree.modeling.api.util.ActionType('r'),
                    ADD_ALL: new _.org.kevoree.modeling.api.util.ActionType('A'),
                    REMOVE_ALL: new _.org.kevoree.modeling.api.util.ActionType('R'),
                    RENEW_INDEX: new _.org.kevoree.modeling.api.util.ActionType('I'),
                    CONTROL: new _.org.kevoree.modeling.api.util.ActionType('C')
                  });
                }
              }),
              ModelAttributeVisitor: Kotlin.createTrait(null),
              InboundRefAware: Kotlin.createTrait(null, /** @lends _.org.kevoree.modeling.api.util.InboundRefAware.prototype */ {
                internal_inboundReferences: {
                  get: function () {
                    return this.$internal_inboundReferences_geftyz$;
                  },
                  set: function (tmp$0) {
                    this.$internal_inboundReferences_geftyz$ = tmp$0;
                  }
                }
              }),
              ModelTracker: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.events.ModelElementListener];
              }, function (compare) {
                this.compare = compare;
                this.convertor = new _.org.kevoree.modeling.api.trace.Event2Trace(this.compare);
                this.currentModel = null;
                this.invertedTraceSequence = null;
                this.traceSequence = null;
                this.activated = true;
              }, /** @lends _.org.kevoree.modeling.api.util.ModelTracker.prototype */ {
                elementChanged: function (evt) {
                  if (this.activated) {
                    var tmp$0, tmp$1;
                    ((tmp$0 = this.traceSequence) != null ? tmp$0 : Kotlin.throwNPE()).append(this.convertor.convert(evt));
                    ((tmp$1 = this.invertedTraceSequence) != null ? tmp$1 : Kotlin.throwNPE()).append(this.convertor.inverse(evt));
                  }
                },
                track: function (model) {
                  this.currentModel = model;
                  var tmp$0;
                  ((tmp$0 = this.currentModel) != null ? tmp$0 : Kotlin.throwNPE()).addModelTreeListener(this);
                  this.traceSequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this.compare.factory);
                  this.invertedTraceSequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this.compare.factory);
                },
                untrack: function () {
                  var tmp$0;
                  (tmp$0 = this.currentModel) != null ? tmp$0.removeModelTreeListener(this) : null;
                },
                redo: function () {
                  if (this.currentModel != null && this.traceSequence != null) {
                    this.activated = false;
                    try {
                      var tmp$0, tmp$1;
                      ((tmp$0 = this.traceSequence) != null ? tmp$0 : Kotlin.throwNPE()).applyOn((tmp$1 = this.currentModel) != null ? tmp$1 : Kotlin.throwNPE());
                    }
                    finally {
                      this.activated = true;
                    }
                  }
                },
                undo: function () {
                  if (this.currentModel != null && this.invertedTraceSequence != null) {
                    this.activated = false;
                    var tmp$0;
                    ((tmp$0 = this.invertedTraceSequence) != null ? tmp$0 : Kotlin.throwNPE()).reverse();
                    try {
                      var tmp$1, tmp$2;
                      ((tmp$1 = this.invertedTraceSequence) != null ? tmp$1 : Kotlin.throwNPE()).applyOn((tmp$2 = this.currentModel) != null ? tmp$2 : Kotlin.throwNPE());
                    }
                    finally {
                      var tmp$3;
                      ((tmp$3 = this.invertedTraceSequence) != null ? tmp$3 : Kotlin.throwNPE()).reverse();
                      this.activated = true;
                    }
                  }
                },
                reset: function () {
                  this.traceSequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this.compare.factory);
                  this.invertedTraceSequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this.compare.factory);
                }
              }),
              visit$f: function (i) {
                return false;
              },
              visit$f_0: function (staticExtractedQuery, subResult) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
                }, null, {
                  visit: function (value, name, parent) {
                    {
                      var tmp$0 = staticExtractedQuery.params.keySet().iterator();
                      while (tmp$0.hasNext()) {
                        var att = tmp$0.next();
                        if (Kotlin.equals(att, '@id')) {
                          throw new Error('Malformed KMFQuery, bad selector attribute without attribute name : ' + staticExtractedQuery.params.get_za3rmp$(att));
                        }
                         else {
                          var keySelected = false;
                          if (Kotlin.equals(att, name)) {
                            keySelected = true;
                          }
                           else {
                            if (att.contains('*') && _.js.matches_94jgcu$(name, att.replace('*', '.*'))) {
                              keySelected = true;
                            }
                          }
                          var tmp$1;
                          var attvalue = (tmp$1 = staticExtractedQuery.params.get_za3rmp$(att)) != null ? tmp$1 : Kotlin.throwNPE();
                          if (keySelected) {
                            if (value == null) {
                              if (attvalue.negative) {
                                if (!Kotlin.equals(attvalue.value, 'null')) {
                                  subResult[attvalue.idParam] = true;
                                }
                              }
                               else {
                                if (Kotlin.equals(attvalue.value, 'null')) {
                                  subResult[attvalue.idParam] = true;
                                }
                              }
                            }
                             else {
                              if (attvalue.negative) {
                                if (!attvalue.value.contains('*') && !Kotlin.equals(value, attvalue.value)) {
                                  subResult[attvalue.idParam] = true;
                                }
                                 else {
                                  if (!_.js.matches_94jgcu$(value.toString(), attvalue.value.replace('*', '.*'))) {
                                    subResult[attvalue.idParam] = true;
                                  }
                                }
                              }
                               else {
                                if (Kotlin.equals(value, attvalue.value)) {
                                  subResult[attvalue.idParam] = true;
                                }
                                 else {
                                  if (_.js.matches_94jgcu$(value.toString(), attvalue.value.replace('*', '.*'))) {
                                    subResult[attvalue.idParam] = true;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                });
              },
              select$f: function (staticExtractedQuery, alreadyVisited, tempResult) {
                return Kotlin.createObject(function () {
                  return [_.org.kevoree.modeling.api.util.ModelVisitor];
                }, function $fun() {
                  $fun.baseInitializer.call(this);
                }, {
                  beginVisitRef: function (refName, refType) {
                    if (staticExtractedQuery.previousIsDeep) {
                      return true;
                    }
                     else {
                      if (Kotlin.equals(refName, staticExtractedQuery.relationName)) {
                        return true;
                      }
                       else {
                        if (staticExtractedQuery.relationName.contains('*')) {
                          if (_.js.matches_94jgcu$(refName, staticExtractedQuery.relationName.replace('*', '.*'))) {
                            return true;
                          }
                        }
                      }
                      return false;
                    }
                  },
                  visit: function (elem, refNameInParent, parent) {
                    if (staticExtractedQuery.previousIsRefDeep) {
                      if (alreadyVisited.v.containsKey_za3rmp$(parent.path() + '/' + refNameInParent + '[' + elem.internalGetKey() + ']')) {
                        return;
                      }
                    }
                    if (staticExtractedQuery.previousIsDeep && !staticExtractedQuery.previousIsRefDeep) {
                      if (alreadyVisited.v.containsKey_za3rmp$(elem.path())) {
                        return;
                      }
                    }
                    var selected = true;
                    if (staticExtractedQuery.previousIsDeep) {
                      selected = false;
                      if (Kotlin.equals(refNameInParent, staticExtractedQuery.relationName)) {
                        selected = true;
                      }
                       else {
                        if (staticExtractedQuery.relationName.contains('*')) {
                          if (_.js.matches_94jgcu$(refNameInParent, staticExtractedQuery.relationName.replace('*', '.*'))) {
                            selected = true;
                          }
                        }
                      }
                    }
                    if (selected) {
                      var tmp$0;
                      if (_.kotlin.get_size_1(staticExtractedQuery.params) === 1 && staticExtractedQuery.params.get_za3rmp$('@id') != null && ((tmp$0 = staticExtractedQuery.params.get_za3rmp$('@id')) != null ? tmp$0 : Kotlin.throwNPE()).name == null) {
                        var tmp$1;
                        if (Kotlin.equals(elem.internalGetKey(), (tmp$1 = staticExtractedQuery.params.get_za3rmp$('@id')) != null ? tmp$1.value : null)) {
                          tempResult.v.put_wn2jw4$(elem.path(), elem);
                        }
                      }
                       else {
                        if (_.kotlin.get_size_1(staticExtractedQuery.params) > 0) {
                          var subResult = Kotlin.arrayFromFun(_.kotlin.get_size_1(staticExtractedQuery.params), _.org.kevoree.modeling.api.util.visit$f);
                          elem.visitAttributes(_.org.kevoree.modeling.api.util.visit$f_0(staticExtractedQuery, subResult));
                          var finalRes = true;
                          var tmp$2, tmp$3, tmp$4;
                          {
                            tmp$2 = subResult, tmp$3 = tmp$2.length;
                            for (var tmp$4 = 0; tmp$4 !== tmp$3; ++tmp$4) {
                              var sub = tmp$2[tmp$4];
                              if (!sub) {
                                finalRes = false;
                              }
                            }
                          }
                          if (finalRes) {
                            tempResult.v.put_wn2jw4$(elem.path(), elem);
                          }
                        }
                         else {
                          tempResult.v.put_wn2jw4$(elem.path(), elem);
                        }
                      }
                    }
                    if (staticExtractedQuery.previousIsDeep) {
                      if (staticExtractedQuery.previousIsRefDeep) {
                        alreadyVisited.v.put_wn2jw4$(parent.path() + '/' + refNameInParent + '[' + elem.internalGetKey() + ']', true);
                        elem.visit(this, false, true, true);
                      }
                       else {
                        alreadyVisited.v.put_wn2jw4$(elem.path(), true);
                        elem.visit(this, false, true, false);
                      }
                    }
                  }
                });
              },
              KmfQuery: Kotlin.createClass(null, function (relationName, params, subQuery, oldString, previousIsDeep, previousIsRefDeep) {
                this.relationName = relationName;
                this.params = params;
                this.subQuery = subQuery;
                this.oldString = oldString;
                this.previousIsDeep = previousIsDeep;
                this.previousIsRefDeep = previousIsRefDeep;
              }, /** @lends _.org.kevoree.modeling.api.util.KmfQuery.prototype */ {
                component1: function () {
                  return this.relationName;
                },
                component2: function () {
                  return this.params;
                },
                component3: function () {
                  return this.subQuery;
                },
                component4: function () {
                  return this.oldString;
                },
                component5: function () {
                  return this.previousIsDeep;
                },
                component6: function () {
                  return this.previousIsRefDeep;
                },
                copy: function (relationName, params, subQuery, oldString, previousIsDeep, previousIsRefDeep) {
                  return new _.org.kevoree.modeling.api.util.KmfQuery(relationName === void 0 ? this.relationName : relationName, params === void 0 ? this.params : params, subQuery === void 0 ? this.subQuery : subQuery, oldString === void 0 ? this.oldString : oldString, previousIsDeep === void 0 ? this.previousIsDeep : previousIsDeep, previousIsRefDeep === void 0 ? this.previousIsRefDeep : previousIsRefDeep);
                },
                toString: function () {
                  return 'KmfQuery(relationName=' + Kotlin.toString(this.relationName) + (', params=' + Kotlin.toString(this.params)) + (', subQuery=' + Kotlin.toString(this.subQuery)) + (', oldString=' + Kotlin.toString(this.oldString)) + (', previousIsDeep=' + Kotlin.toString(this.previousIsDeep)) + (', previousIsRefDeep=' + Kotlin.toString(this.previousIsRefDeep)) + ')';
                },
                hashCode: function () {
                  var result = -1987101201;
                  result = result * 31 + Kotlin.hashCode(this.relationName) | 0;
                  result = result * 31 + Kotlin.hashCode(this.params) | 0;
                  result = result * 31 + Kotlin.hashCode(this.subQuery) | 0;
                  result = result * 31 + Kotlin.hashCode(this.oldString) | 0;
                  result = result * 31 + Kotlin.hashCode(this.previousIsDeep) | 0;
                  result = result * 31 + Kotlin.hashCode(this.previousIsRefDeep) | 0;
                  return result;
                },
                equals_za3rmp$: function (other) {
                  return this === other || (other !== null && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.relationName, other.relationName) && Kotlin.equals(this.params, other.params) && Kotlin.equals(this.subQuery, other.subQuery) && Kotlin.equals(this.oldString, other.oldString) && Kotlin.equals(this.previousIsDeep, other.previousIsDeep) && Kotlin.equals(this.previousIsRefDeep, other.previousIsRefDeep))));
                }
              }),
              KmfQueryParam: Kotlin.createClass(null, function (name, value, idParam, negative) {
                this.name = name;
                this.value = value;
                this.idParam = idParam;
                this.negative = negative;
              }, /** @lends _.org.kevoree.modeling.api.util.KmfQueryParam.prototype */ {
                component1: function () {
                  return this.name;
                },
                component2: function () {
                  return this.value;
                },
                component3: function () {
                  return this.idParam;
                },
                component4: function () {
                  return this.negative;
                },
                copy: function (name, value, idParam, negative) {
                  return new _.org.kevoree.modeling.api.util.KmfQueryParam(name === void 0 ? this.name : name, value === void 0 ? this.value : value, idParam === void 0 ? this.idParam : idParam, negative === void 0 ? this.negative : negative);
                },
                toString: function () {
                  return 'KmfQueryParam(name=' + Kotlin.toString(this.name) + (', value=' + Kotlin.toString(this.value)) + (', idParam=' + Kotlin.toString(this.idParam)) + (', negative=' + Kotlin.toString(this.negative)) + ')';
                },
                hashCode: function () {
                  var result = -874887202;
                  result = result * 31 + Kotlin.hashCode(this.name) | 0;
                  result = result * 31 + Kotlin.hashCode(this.value) | 0;
                  result = result * 31 + Kotlin.hashCode(this.idParam) | 0;
                  result = result * 31 + Kotlin.hashCode(this.negative) | 0;
                  return result;
                },
                equals_za3rmp$: function (other) {
                  return this === other || (other !== null && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.value, other.value) && Kotlin.equals(this.idParam, other.idParam) && Kotlin.equals(this.negative, other.negative))));
                }
              })
            }),
            persistence: Kotlin.definePackage(null, /** @lends _.org.kevoree.modeling.api.persistence */ {
              PersistenceKMFFactory: Kotlin.createTrait(function () {
                return [_.org.kevoree.modeling.api.events.ModelElementListener, _.org.kevoree.modeling.api.KMFFactory];
              }, /** @lends _.org.kevoree.modeling.api.persistence.PersistenceKMFFactory.prototype */ {
                datastore: {
                  get: function () {
                    return this.$datastore_xkqfe9$;
                  }
                },
                dirty: {
                  get: function () {
                    return this.$dirty_e66hhy$;
                  },
                  set: function (tmp$0) {
                    this.$dirty_e66hhy$ = tmp$0;
                  }
                },
                originTransaction: {
                  get: function () {
                    return this.$originTransaction_kdsx68$;
                  }
                },
                remove: function (elem) {
                  this.datastore.remove(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), elem.path());
                  this.datastore.remove('type', elem.path());
                  this.elem_cache.remove_za3rmp$(elem.path());
                  this.modified_elements.remove_za3rmp$(Kotlin.hashCode(elem).toString() + elem.internalGetKey());
                },
                elem_cache: {
                  get: function () {
                    return this.$elem_cache_55i3ba$;
                  }
                },
                elementsToBeRemoved: {
                  get: function () {
                    return this.$elementsToBeRemoved_qnzocd$;
                  }
                },
                modified_elements: {
                  get: function () {
                    return this.$modified_elements_qtc91h$;
                  }
                },
                notify: function (elem) {
                  if (elem.internalGetKey() != null) {
                    var key = Kotlin.hashCode(elem).toString() + elem.internalGetKey();
                    if (this.modified_elements.get_za3rmp$(key) == null) {
                      this.modified_elements.put_wn2jw4$(key, elem);
                    }
                    if (elem.path().startsWith('/')) {
                      this.elem_cache.put_wn2jw4$(elem.path(), elem);
                    }
                  }
                  if (Kotlin.isType(elem, _.org.kevoree.modeling.api.persistence.KMFContainerProxy) && !elem.isDirty) {
                    elem.isDirty = true;
                  }
                },
                cleanUnusedPaths: function (path) {
                  this.datastore.remove(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), path);
                  this.datastore.remove('type', path);
                  this.elem_cache.remove_za3rmp$(path);
                },
                persist: function (elem) {
                  if (Kotlin.isType(elem, _.org.kevoree.modeling.api.persistence.KMFContainerProxy) && !elem.isDirty) {
                    return;
                  }
                  var elemPath = elem.path();
                  if (Kotlin.equals(elemPath, '')) {
                    throw new Error('Internal error, empty path found during persist method ' + elem);
                  }
                  if (!elemPath.startsWith('/')) {
                    throw new Error('Cannot persist, because the path of the element do not refer to a root: ' + elemPath + ' -> ' + elem);
                  }
                  var traces = elem.toTraces(true, true);
                  var traceSeq = new _.org.kevoree.modeling.api.trace.TraceSequence(this);
                  traceSeq.populate(traces);
                  this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), elemPath, traceSeq.exportToString());
                  var castedInBounds = elem;
                  var saved = _.org.kevoree.modeling.api.time.blob.MetaHelper.serialize(castedInBounds.internal_inboundReferences);
                  this.datastore.put(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), elemPath + '#', saved);
                  this.datastore.put('type', elemPath, elem.metaClassName());
                  if (Kotlin.isType(elem, _.org.kevoree.modeling.api.persistence.KMFContainerProxy)) {
                    elem.originFactory = this;
                  }
                },
                endCommit: function () {
                  this.datastore.commit();
                },
                commit: function () {
                  if (!this.dirty) {
                    return;
                  }
                  var keys = _.kotlin.toList_h3panj$(this.modified_elements.keySet());
                  {
                    var tmp$0 = keys.iterator();
                    while (tmp$0.hasNext()) {
                      var elem = tmp$0.next();
                      var resolved = this.modified_elements.get_za3rmp$(elem);
                      if (resolved != null) {
                        if (!resolved.path().startsWith('/')) {
                          if (!resolved.isDeleted()) {
                            resolved.delete();
                          }
                          this.modified_elements.remove_za3rmp$(elem);
                        }
                      }
                    }
                  }
                  {
                    var tmp$1 = this.modified_elements.keySet().iterator();
                    while (tmp$1.hasNext()) {
                      var elemKey = tmp$1.next();
                      var tmp$2;
                      var elem_0 = (tmp$2 = this.modified_elements.get_za3rmp$(elemKey)) != null ? tmp$2 : Kotlin.throwNPE();
                      this.persist(elem_0);
                      this.elementsToBeRemoved.remove_za3rmp$(elem_0.path());
                    }
                  }
                  {
                    var tmp$3 = this.elementsToBeRemoved.iterator();
                    while (tmp$3.hasNext()) {
                      var e = tmp$3.next();
                      this.cleanUnusedPaths(e);
                    }
                  }
                },
                clear: function () {
                  {
                    var tmp$0 = this.elem_cache.keySet().iterator();
                    while (tmp$0.hasNext()) {
                      var elemKey = tmp$0.next();
                      var tmp$1;
                      var elem = (tmp$1 = this.elem_cache.get_za3rmp$(elemKey)) != null ? tmp$1 : Kotlin.throwNPE();
                      elem.removeModelElementListener(this);
                    }
                  }
                  this.elem_cache.clear();
                  this.modified_elements.clear();
                  this.elementsToBeRemoved.clear();
                },
                elementChanged: function (evt) {
                  var tmp$0;
                  ((tmp$0 = evt.source) != null ? tmp$0 : Kotlin.throwNPE()).isDirty = true;
                  this.notify(evt.source);
                },
                monitor: function (elem) {
                  if (!this.dirty) {
                    this.dirty = true;
                  }
                  elem.addModelElementListener(this);
                },
                lookup: function (path) {
                  if (Kotlin.equals(path, '')) {
                    return null;
                  }
                  if (this.elem_cache.containsKey_za3rmp$(path)) {
                    return this.elem_cache.get_za3rmp$(path);
                  }
                  var typeName = this.datastore.get('type', path);
                  if (typeName != null) {
                    var tmp$0;
                    var elem = (tmp$0 = this.create(typeName)) != null ? tmp$0 : Kotlin.throwNPE();
                    this.elem_cache.put_wn2jw4$(path, elem);
                    elem.isResolved = false;
                    elem.setOriginPath(path);
                    this.monitor(elem);
                    return elem;
                  }
                  return null;
                },
                getTraces: function (origin) {
                  var sequence = new _.org.kevoree.modeling.api.trace.TraceSequence(this);
                  var traces = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), origin.path());
                  if (traces != null) {
                    sequence.populateFromString(traces);
                    return sequence;
                  }
                  return null;
                },
                loadInbounds: function (elem) {
                  var castedInBounds = elem;
                  var payload = this.datastore.get(_.org.kevoree.modeling.api.time.TimeSegment.object.RAW.name(), elem.path() + '#');
                  if (payload != null) {
                    castedInBounds.internal_inboundReferences = _.org.kevoree.modeling.api.time.blob.MetaHelper.unserialize(payload, this);
                  }
                },
                select: function (query) {
                  var localRoot = this.lookup('/');
                  if (localRoot != null && Kotlin.equals(query, '/')) {
                    var result = new Kotlin.ArrayList();
                    result.add_za3rmp$(localRoot);
                    return result;
                  }
                  if (localRoot != null) {
                    return localRoot.select(query);
                  }
                   else {
                    return new Kotlin.ArrayList();
                  }
                }
              }),
              MemoryDataStore: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.persistence.DataStore];
              }, function () {
                this.selector_38kq2e$ = new _.org.kevoree.modeling.api.persistence.EventDispatcher();
                this.maps = new Kotlin.PrimitiveHashMap();
              }, /** @lends _.org.kevoree.modeling.api.persistence.MemoryDataStore.prototype */ {
                commit: function () {
                },
                register: function (listener, from, to, path) {
                  this.selector_38kq2e$.register(listener, from, to, path);
                },
                unregister: function (listener) {
                  this.selector_38kq2e$.unregister(listener);
                },
                notify: function (event) {
                  this.selector_38kq2e$.dispatch(event);
                },
                getSegmentKeys: function (segment) {
                  if (this.maps.containsKey_za3rmp$(segment)) {
                    var tmp$0;
                    ((tmp$0 = this.maps.get_za3rmp$(segment)) != null ? tmp$0 : Kotlin.throwNPE()).keySet();
                  }
                  return new Kotlin.PrimitiveHashSet();
                },
                getSegments: function () {
                  return this.maps.keySet();
                },
                close: function () {
                  this.selector_38kq2e$.clear();
                  this.maps.clear();
                },
                getOrCreateSegment: function (segment) {
                  if (!this.maps.containsKey_za3rmp$(segment)) {
                    this.maps.put_wn2jw4$(segment, new Kotlin.PrimitiveHashMap());
                  }
                  var tmp$0;
                  return (tmp$0 = this.maps.get_za3rmp$(segment)) != null ? tmp$0 : Kotlin.throwNPE();
                },
                put: function (segment, key, value) {
                  this.getOrCreateSegment(segment).put_wn2jw4$(key, value);
                },
                get: function (segment, key) {
                  return this.getOrCreateSegment(segment).get_za3rmp$(key);
                },
                remove: function (segment, key) {
                  this.getOrCreateSegment(segment).remove_za3rmp$(key);
                },
                dump: function () {
                  {
                    var tmp$0 = _.kotlin.iterator_s8ckw1$(this.maps);
                    while (tmp$0.hasNext()) {
                      var k = tmp$0.next();
                      Kotlin.println('Map ' + _.kotlin.get_key(k));
                      {
                        var tmp$1 = _.kotlin.iterator_s8ckw1$(_.kotlin.get_value(k));
                        while (tmp$1.hasNext()) {
                          var t = tmp$1.next();
                          Kotlin.println(_.kotlin.get_key(t) + '->' + _.kotlin.get_value(t));
                        }
                      }
                    }
                  }
                }
              }),
              EventDispatcher: Kotlin.createClass(null, function () {
                this.listeners_3hhuzx$ = new Kotlin.ComplexHashMap();
              }, /** @lends _.org.kevoree.modeling.api.persistence.EventDispatcher.prototype */ {
                register: function (listener, from, to, pathRegex) {
                  this.listeners_3hhuzx$.put_wn2jw4$(listener, new _.org.kevoree.modeling.api.persistence.TimedRegistration(from, to, pathRegex));
                },
                unregister: function (listener) {
                  this.listeners_3hhuzx$.remove_za3rmp$(listener);
                },
                dispatch: function (event) {
                  {
                    var tmp$0 = _.kotlin.iterator_s8ckw1$(this.listeners_3hhuzx$);
                    while (tmp$0.hasNext()) {
                      var l = tmp$0.next();
                      if (_.kotlin.get_value(l).covered(event)) {
                        _.kotlin.get_key(l).elementChanged(event);
                      }
                    }
                  }
                },
                clear: function () {
                  this.listeners_3hhuzx$.clear();
                }
              }),
              TimedRegistration: Kotlin.createClass(null, function (from, to, pathRegex) {
                this.from = from;
                this.to = to;
                this.pathRegex = pathRegex;
              }, /** @lends _.org.kevoree.modeling.api.persistence.TimedRegistration.prototype */ {
                covered: function (event) {
                  if (Kotlin.isType(event.source, _.org.kevoree.modeling.api.time.TimeAwareKMFContainer)) {
                    if (this.from != null) {
                      if (this.from < event.source.now) {
                        return false;
                      }
                    }
                    if (this.to != null) {
                      if (this.to < event.source.now) {
                        return false;
                      }
                    }
                  }
                  if (event.source != null) {
                    if (this.pathRegex.contains('*')) {
                      var regexPath = this.pathRegex.replace('*', '.*');
                      return _.js.matches_94jgcu$(event.source.path(), regexPath);
                    }
                     else {
                      return Kotlin.equals(event.source.path(), this.pathRegex);
                    }
                  }
                   else {
                    return false;
                  }
                },
                component1: function () {
                  return this.from;
                },
                component2: function () {
                  return this.to;
                },
                component3: function () {
                  return this.pathRegex;
                },
                copy: function (from, to, pathRegex) {
                  return new _.org.kevoree.modeling.api.persistence.TimedRegistration(from === void 0 ? this.from : from, to === void 0 ? this.to : to, pathRegex === void 0 ? this.pathRegex : pathRegex);
                },
                toString: function () {
                  return 'TimedRegistration(from=' + Kotlin.toString(this.from) + (', to=' + Kotlin.toString(this.to)) + (', pathRegex=' + Kotlin.toString(this.pathRegex)) + ')';
                },
                hashCode: function () {
                  var result = -551475360;
                  result = result * 31 + Kotlin.hashCode(this.from) | 0;
                  result = result * 31 + Kotlin.hashCode(this.to) | 0;
                  result = result * 31 + Kotlin.hashCode(this.pathRegex) | 0;
                  return result;
                },
                equals_za3rmp$: function (other) {
                  return this === other || (other !== null && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.from, other.from) && Kotlin.equals(this.to, other.to) && Kotlin.equals(this.pathRegex, other.pathRegex))));
                }
              }),
              DataStore: Kotlin.createTrait(null),
              KMFContainerProxy: Kotlin.createTrait(function () {
                return [_.org.kevoree.modeling.api.KMFContainer];
              }, /** @lends _.org.kevoree.modeling.api.persistence.KMFContainerProxy.prototype */ {
                isResolved: {
                  get: function () {
                    return this.$isResolved_q9gcci$;
                  },
                  set: function (tmp$0) {
                    this.$isResolved_q9gcci$ = tmp$0;
                  }
                },
                inResolution: {
                  get: function () {
                    return this.$inResolution_fvhr0z$;
                  },
                  set: function (tmp$0) {
                    this.$inResolution_fvhr0z$ = tmp$0;
                  }
                },
                isDirty: {
                  get: function () {
                    return this.$isDirty_z1d6gk$;
                  },
                  set: function (tmp$0) {
                    this.$isDirty_z1d6gk$ = tmp$0;
                  }
                },
                originFactory: {
                  get: function () {
                    return this.$originFactory_8fzws8$;
                  },
                  set: function (tmp$0) {
                    this.$originFactory_8fzws8$ = tmp$0;
                  }
                },
                relativeLookupFrom: function (base, relationInParent, key) {
                  var currentPath = base.path();
                  if (Kotlin.equals(currentPath, '/')) {
                    var tmp$0;
                    return (tmp$0 = this.originFactory) != null ? tmp$0.lookup('/' + relationInParent + '[' + key + ']') : null;
                  }
                   else {
                    var tmp$1;
                    return (tmp$1 = this.originFactory) != null ? tmp$1.lookup(currentPath + '/' + relationInParent + '[' + key + ']') : null;
                  }
                }
              }),
              AbstractDataStore: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.persistence.DataStore];
              }, function () {
                this.selector_6kse09$ = new _.org.kevoree.modeling.api.persistence.EventDispatcher();
              }, /** @lends _.org.kevoree.modeling.api.persistence.AbstractDataStore.prototype */ {
                register: function (listener, from, to, path) {
                  this.selector_6kse09$.register(listener, from, to, path);
                },
                unregister: function (listener) {
                  this.selector_6kse09$.unregister(listener);
                },
                notify: function (event) {
                  this.selector_6kse09$.dispatch(event);
                }
              })
            }),
            json: Kotlin.definePackage(function () {
              this.JSONString = Kotlin.createObject(null, function () {
                this.escapeChar_iwx5i$ = '\\';
              }, {
                encodeBuffer: function (buffer, chain) {
                  if (chain == null) {
                    return;
                  }
                  var i = 0;
                  while (i < chain.length) {
                    var ch = chain.charAt(i);
                    if (ch === '"') {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append('"');
                    }
                     else if (ch === this.escapeChar_iwx5i$) {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append(this.escapeChar_iwx5i$);
                    }
                     else if (ch === '\n') {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append('n');
                    }
                     else if (ch === '\r') {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append('r');
                    }
                     else if (ch === '\t') {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append('t');
                    }
                     else if (ch === '\u2028') {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append('u');
                      buffer.append('2');
                      buffer.append('0');
                      buffer.append('2');
                      buffer.append('8');
                    }
                     else if (ch === '\u2029') {
                      buffer.append(this.escapeChar_iwx5i$);
                      buffer.append('u');
                      buffer.append('2');
                      buffer.append('0');
                      buffer.append('2');
                      buffer.append('9');
                    }
                     else {
                      buffer.append(ch);
                    }
                    i = i + 1;
                  }
                },
                encode: function (ostream, chain) {
                  if (chain == null) {
                    return;
                  }
                  var i = 0;
                  while (i < chain.length) {
                    var ch = chain.charAt(i);
                    if (ch === '"') {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1('"');
                    }
                     else if (ch === this.escapeChar_iwx5i$) {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1(this.escapeChar_iwx5i$);
                    }
                     else if (ch === '\n') {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1('n');
                    }
                     else if (ch === '\r') {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1('r');
                    }
                     else if (ch === '\t') {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1('t');
                    }
                     else if (ch === '\u2028') {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1('u');
                      ostream.print_1('2');
                      ostream.print_1('0');
                      ostream.print_1('2');
                      ostream.print_1('8');
                    }
                     else if (ch === '\u2029') {
                      ostream.print_1(this.escapeChar_iwx5i$);
                      ostream.print_1('u');
                      ostream.print_1('2');
                      ostream.print_1('0');
                      ostream.print_1('2');
                      ostream.print_1('9');
                    }
                     else {
                      ostream.print_1(ch);
                    }
                    i = i + 1;
                  }
                },
                unescape: function (src) {
                  if (src == null) {
                    return null;
                  }
                  if (src.length === 0) {
                    return src;
                  }
                  var builder = null;
                  var i = 0;
                  while (i < src.length) {
                    var current = src.charAt(i);
                    if (current === this.escapeChar_iwx5i$) {
                      if (builder == null) {
                        builder = new Kotlin.StringBuilder();
                        builder != null ? builder.append(src.substring(0, i)) : null;
                      }
                      i++;
                      var current2 = src.charAt(i);
                      {
                        if (current2 === '"') {
                          builder != null ? builder.append('"') : null;
                        }
                         else if (current2 === '\\') {
                          builder != null ? builder.append(current2) : null;
                        }
                         else if (current2 === '/') {
                          builder != null ? builder.append(current2) : null;
                        }
                         else if (current2 === 'b') {
                          builder != null ? builder.append('\b') : null;
                        }
                         else if (current2 === 'f') {
                          builder != null ? builder.append((12).toChar()) : null;
                        }
                         else if (current2 === 'n') {
                          builder != null ? builder.append('\n') : null;
                        }
                         else if (current2 === 'r') {
                          builder != null ? builder.append('\r') : null;
                        }
                         else if (current2 === 't') {
                          builder != null ? builder.append('\t') : null;
                        }
                         else if (current2 === 'u') {
                          throw new Error('Bad char to escape ');
                        }
                      }
                    }
                     else {
                      if (builder != null) {
                        builder = builder != null ? builder.append(current) : null;
                      }
                    }
                    i++;
                  }
                  if (builder != null) {
                    return (builder != null ? builder : Kotlin.throwNPE()).toString();
                  }
                   else {
                    return src;
                  }
                }
              });
              this.Type = Kotlin.createObject(null, function () {
                this.VALUE = 0;
                this.LEFT_BRACE = 1;
                this.RIGHT_BRACE = 2;
                this.LEFT_BRACKET = 3;
                this.RIGHT_BRACKET = 4;
                this.COMMA = 5;
                this.COLON = 6;
                this.EOF = 42;
              });
            }, /** @lends _.org.kevoree.modeling.api.json */ {
              JSONModelLoader: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.ModelLoader];
              }, function (factory) {
                this.factory = factory;
              }, /** @lends _.org.kevoree.modeling.api.json.JSONModelLoader.prototype */ {
                loadModelFromString: function (str) {
                  return this.deserialize(_.org.kevoree.modeling.api.util.ByteConverter.byteArrayInputStreamFromString(str));
                },
                loadModelFromStream: function (inputStream) {
                  return this.deserialize(inputStream);
                },
                deserialize: function (instream) {
                  if (instream == null) {
                    throw new Error('Null input Stream');
                  }
                  var resolverCommands = new Kotlin.ArrayList();
                  var roots = new Kotlin.ArrayList();
                  var lexer = new _.org.kevoree.modeling.api.json.Lexer(instream);
                  var currentToken = lexer.nextToken();
                  if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.LEFT_BRACE) {
                    this.loadObject(lexer, null, null, roots, resolverCommands);
                  }
                   else {
                    throw new Error('Bad Format / {\xA0expected');
                  }
                  {
                    var tmp$0 = resolverCommands.iterator();
                    while (tmp$0.hasNext()) {
                      var resol = tmp$0.next();
                      resol.run();
                    }
                  }
                  return roots;
                },
                loadObject: function (lexer, nameInParent, parent, roots, commands) {
                  var currentToken = lexer.nextToken();
                  var currentObject = null;
                  if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.VALUE) {
                    if (Kotlin.equals(currentToken.value, 'class')) {
                      lexer.nextToken();
                      currentToken = lexer.nextToken();
                      var tmp$0, tmp$1;
                      var name = (tmp$1 = (tmp$0 = currentToken.value) != null ? tmp$0.toString() : null) != null ? tmp$1 : Kotlin.throwNPE();
                      var typeName = null;
                      var isRoot = false;
                      if (name.startsWith('root:')) {
                        isRoot = true;
                        name = name.substring('root:'.length);
                      }
                      if (name.contains('@')) {
                        typeName = name.substring(0, name.indexOf('@'));
                        var key = name.substring(name.indexOf('@') + 1);
                        if (parent == null) {
                          if (isRoot) {
                            currentObject = this.factory.lookup('/');
                          }
                        }
                         else {
                          var path = parent.path() + '/' + nameInParent + '[' + key + ']';
                          currentObject = this.factory.lookup(path);
                        }
                      }
                       else {
                        typeName = name;
                      }
                      if (currentObject == null) {
                        currentObject = this.factory.create(typeName != null ? typeName : Kotlin.throwNPE());
                      }
                      if (isRoot) {
                        this.factory.root(currentObject != null ? currentObject : Kotlin.throwNPE());
                      }
                      if (parent == null) {
                        roots.add_za3rmp$(currentObject != null ? currentObject : Kotlin.throwNPE());
                      }
                      var currentNameAttOrRef = null;
                      var refModel = false;
                      currentToken = lexer.nextToken();
                      while (currentToken.tokenType !== _.org.kevoree.modeling.api.json.Type.EOF) {
                        if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.LEFT_BRACE) {
                          this.loadObject(lexer, currentNameAttOrRef != null ? currentNameAttOrRef : Kotlin.throwNPE(), currentObject, roots, commands);
                        }
                        if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.COMMA) {
                        }
                        if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.VALUE) {
                          if (currentNameAttOrRef == null) {
                            currentNameAttOrRef = Kotlin.toString(currentToken.value);
                          }
                           else {
                            if (refModel) {
                              var tmp$2;
                              commands.add_za3rmp$(new _.org.kevoree.modeling.api.json.ResolveCommand(roots, ((tmp$2 = currentToken.value) != null ? tmp$2 : Kotlin.throwNPE()).toString(), currentObject != null ? currentObject : Kotlin.throwNPE(), currentNameAttOrRef != null ? currentNameAttOrRef : Kotlin.throwNPE()));
                            }
                             else {
                              var unscaped = _.org.kevoree.modeling.api.json.JSONString.unescape(Kotlin.toString(currentToken.value));
                              (currentObject != null ? currentObject : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, currentNameAttOrRef != null ? currentNameAttOrRef : Kotlin.throwNPE(), unscaped, false, false);
                              currentNameAttOrRef = null;
                            }
                          }
                        }
                        if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.LEFT_BRACKET) {
                          currentToken = lexer.nextToken();
                          if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.LEFT_BRACE) {
                            this.loadObject(lexer, currentNameAttOrRef != null ? currentNameAttOrRef : Kotlin.throwNPE(), currentObject, roots, commands);
                          }
                           else {
                            refModel = true;
                            if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.VALUE) {
                              var tmp$3;
                              commands.add_za3rmp$(new _.org.kevoree.modeling.api.json.ResolveCommand(roots, ((tmp$3 = currentToken.value) != null ? tmp$3 : Kotlin.throwNPE()).toString(), currentObject != null ? currentObject : Kotlin.throwNPE(), currentNameAttOrRef != null ? currentNameAttOrRef : Kotlin.throwNPE()));
                            }
                          }
                        }
                        if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.RIGHT_BRACKET) {
                          currentNameAttOrRef = null;
                          refModel = false;
                        }
                        if (currentToken.tokenType === _.org.kevoree.modeling.api.json.Type.RIGHT_BRACE) {
                          if (parent != null) {
                            parent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, nameInParent != null ? nameInParent : Kotlin.throwNPE(), currentObject, false, false);
                          }
                          return;
                        }
                        currentToken = lexer.nextToken();
                      }
                    }
                     else {
                      throw new Error('Bad Format / eClass att must be first');
                    }
                  }
                   else {
                    throw new Error('Bad Format');
                  }
                }
              }),
              ResolveCommand: Kotlin.createClass(null, function (roots, ref, currentRootElem, refName) {
                this.roots = roots;
                this.ref = ref;
                this.currentRootElem = currentRootElem;
                this.refName = refName;
              }, /** @lends _.org.kevoree.modeling.api.json.ResolveCommand.prototype */ {
                run: function () {
                  var referencedElement = null;
                  var i = 0;
                  while (referencedElement == null && i < this.roots.size()) {
                    referencedElement = this.roots.get_za3lpa$(i++).findByPath(this.ref);
                  }
                  if (referencedElement != null) {
                    this.currentRootElem.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, this.refName, referencedElement, false, false);
                  }
                   else {
                    throw new Error('Unresolved ' + this.ref);
                  }
                }
              }),
              Token: Kotlin.createClass(null, function (tokenType, value) {
                this.tokenType = tokenType;
                this.value = value;
              }, /** @lends _.org.kevoree.modeling.api.json.Token.prototype */ {
                toString: function () {
                  var tmp$0;
                  if (this.value != null) {
                    tmp$0 = ' (' + this.value + ')';
                  }
                   else {
                    tmp$0 = '';
                  }
                  var v = tmp$0;
                  var result = this.tokenType.toString() + v;
                  return result;
                }
              }),
              Lexer: Kotlin.createClass(null, function (inputStream) {
                this.inputStream = inputStream;
                this.bytes = this.inputStream.readBytes();
                this.EOF = new _.org.kevoree.modeling.api.json.Token(_.org.kevoree.modeling.api.json.Type.EOF, null);
                this.index = 0;
                this.BOOLEAN_LETTERS = null;
                this.DIGIT = null;
              }, /** @lends _.org.kevoree.modeling.api.json.Lexer.prototype */ {
                isSpace: function (c) {
                  return c === ' ' || c === '\r' || c === '\n' || c === '\t';
                },
                nextChar: function () {
                  return _.org.kevoree.modeling.api.util.ByteConverter.toChar(this.bytes[this.index++]);
                },
                peekChar: function () {
                  return _.org.kevoree.modeling.api.util.ByteConverter.toChar(this.bytes[this.index]);
                },
                isDone: function () {
                  return this.index >= this.bytes.length;
                },
                isBooleanLetter: function (c) {
                  if (this.BOOLEAN_LETTERS == null) {
                    this.BOOLEAN_LETTERS = new Kotlin.PrimitiveHashSet();
                    var tmp$0, tmp$1, tmp$2, tmp$3, tmp$4, tmp$5, tmp$6, tmp$7;
                    ((tmp$0 = this.BOOLEAN_LETTERS) != null ? tmp$0 : Kotlin.throwNPE()).add_za3rmp$('f');
                    ((tmp$1 = this.BOOLEAN_LETTERS) != null ? tmp$1 : Kotlin.throwNPE()).add_za3rmp$('a');
                    ((tmp$2 = this.BOOLEAN_LETTERS) != null ? tmp$2 : Kotlin.throwNPE()).add_za3rmp$('l');
                    ((tmp$3 = this.BOOLEAN_LETTERS) != null ? tmp$3 : Kotlin.throwNPE()).add_za3rmp$('s');
                    ((tmp$4 = this.BOOLEAN_LETTERS) != null ? tmp$4 : Kotlin.throwNPE()).add_za3rmp$('e');
                    ((tmp$5 = this.BOOLEAN_LETTERS) != null ? tmp$5 : Kotlin.throwNPE()).add_za3rmp$('t');
                    ((tmp$6 = this.BOOLEAN_LETTERS) != null ? tmp$6 : Kotlin.throwNPE()).add_za3rmp$('r');
                    ((tmp$7 = this.BOOLEAN_LETTERS) != null ? tmp$7 : Kotlin.throwNPE()).add_za3rmp$('u');
                  }
                  var tmp$8;
                  return ((tmp$8 = this.BOOLEAN_LETTERS) != null ? tmp$8 : Kotlin.throwNPE()).contains_za3rmp$(c);
                },
                isDigit: function (c) {
                  if (this.DIGIT == null) {
                    this.DIGIT = new Kotlin.PrimitiveHashSet();
                    var tmp$0, tmp$1, tmp$2, tmp$3, tmp$4, tmp$5, tmp$6, tmp$7, tmp$8, tmp$9;
                    ((tmp$0 = this.DIGIT) != null ? tmp$0 : Kotlin.throwNPE()).add_za3rmp$('0');
                    ((tmp$1 = this.DIGIT) != null ? tmp$1 : Kotlin.throwNPE()).add_za3rmp$('1');
                    ((tmp$2 = this.DIGIT) != null ? tmp$2 : Kotlin.throwNPE()).add_za3rmp$('2');
                    ((tmp$3 = this.DIGIT) != null ? tmp$3 : Kotlin.throwNPE()).add_za3rmp$('3');
                    ((tmp$4 = this.DIGIT) != null ? tmp$4 : Kotlin.throwNPE()).add_za3rmp$('4');
                    ((tmp$5 = this.DIGIT) != null ? tmp$5 : Kotlin.throwNPE()).add_za3rmp$('5');
                    ((tmp$6 = this.DIGIT) != null ? tmp$6 : Kotlin.throwNPE()).add_za3rmp$('6');
                    ((tmp$7 = this.DIGIT) != null ? tmp$7 : Kotlin.throwNPE()).add_za3rmp$('7');
                    ((tmp$8 = this.DIGIT) != null ? tmp$8 : Kotlin.throwNPE()).add_za3rmp$('8');
                    ((tmp$9 = this.DIGIT) != null ? tmp$9 : Kotlin.throwNPE()).add_za3rmp$('9');
                  }
                  var tmp$10;
                  return ((tmp$10 = this.DIGIT) != null ? tmp$10 : Kotlin.throwNPE()).contains_za3rmp$(c);
                },
                isValueLetter: function (c) {
                  return c === '-' || c === '+' || c === '.' || this.isDigit(c) || this.isBooleanLetter(c);
                },
                nextToken: function () {
                  if (this.isDone()) {
                    return this.EOF;
                  }
                  var tokenType = _.org.kevoree.modeling.api.json.Type.EOF;
                  var c = this.nextChar();
                  var currentValue = new Kotlin.StringBuilder();
                  var jsonValue = null;
                  while (!this.isDone() && this.isSpace(c)) {
                    c = this.nextChar();
                  }
                  if ('"' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.VALUE;
                    if (!this.isDone()) {
                      c = this.nextChar();
                      while (this.index < this.bytes.length && c !== '"') {
                        currentValue.append(c);
                        if (c === '\\' && this.index < this.bytes.length) {
                          c = this.nextChar();
                          currentValue.append(c);
                        }
                        c = this.nextChar();
                      }
                      jsonValue = currentValue.toString();
                    }
                     else {
                      throw new Kotlin.RuntimeException('Unterminated string');
                    }
                  }
                   else if ('{' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.LEFT_BRACE;
                  }
                   else if ('}' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.RIGHT_BRACE;
                  }
                   else if ('[' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.LEFT_BRACKET;
                  }
                   else if (']' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.RIGHT_BRACKET;
                  }
                   else if (':' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.COLON;
                  }
                   else if (',' === c) {
                    tokenType = _.org.kevoree.modeling.api.json.Type.COMMA;
                  }
                   else if (!this.isDone()) {
                    while (this.isValueLetter(c)) {
                      currentValue.append(c);
                      if (!this.isValueLetter(this.peekChar())) {
                        break;
                      }
                       else {
                        c = this.nextChar();
                      }
                    }
                    var v = currentValue.toString();
                    if (Kotlin.equals('true', v.toLowerCase())) {
                      jsonValue = true;
                    }
                     else if (Kotlin.equals('false', v.toLowerCase())) {
                      jsonValue = false;
                    }
                     else {
                      jsonValue = v.toLowerCase();
                    }
                    tokenType = _.org.kevoree.modeling.api.json.Type.VALUE;
                  }
                   else {
                    tokenType = _.org.kevoree.modeling.api.json.Type.EOF;
                  }
                  return new _.org.kevoree.modeling.api.json.Token(tokenType, jsonValue);
                }
              }),
              ModelReferenceVisitor: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.util.ModelVisitor];
              }, function $fun(out) {
                $fun.baseInitializer.call(this);
                this.out = out;
                this.isFirst = true;
              }, /** @lends _.org.kevoree.modeling.api.json.ModelReferenceVisitor.prototype */ {
                beginVisitRef: function (refName, refType) {
                  this.out.print_4(',"' + refName + '":[');
                  this.isFirst = true;
                  return true;
                },
                endVisitRef: function (refName) {
                  this.out.print_4(']');
                },
                visit: function (elem, refNameInParent, parent) {
                  if (!this.isFirst) {
                    this.out.print_4(',');
                  }
                   else {
                    this.isFirst = false;
                  }
                  this.out.print_4('"' + elem.path() + '"');
                }
              }),
              JSONModelSerializer: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.ModelSerializer];
              }, null, /** @lends _.org.kevoree.modeling.api.json.JSONModelSerializer.prototype */ {
                serialize: function (model) {
                  var outstream = new _.java.io.ByteArrayOutputStream();
                  this.serializeToStream(model, outstream);
                  outstream.close();
                  return outstream.toString();
                },
                serializeToStream: function (model, raw) {
                  var out = new _.java.io.PrintStream(new _.java.io.BufferedOutputStream(raw), false);
                  var internalReferenceVisitor = new _.org.kevoree.modeling.api.json.ModelReferenceVisitor(out);
                  var masterVisitor = _.org.kevoree.modeling.api.json.JSONModelSerializer.serializeToStream$f(out, this, internalReferenceVisitor);
                  model.visit(masterVisitor, true, true, false);
                  out.flush();
                },
                printAttName: function (elem, out) {
                  var isRoot = '';
                  if (Kotlin.equals(elem.path(), '/')) {
                    isRoot = 'root:';
                  }
                  out.print_4('\n{"class":"' + isRoot + elem.metaClassName() + '@' + elem.internalGetKey() + '"');
                  var attributeVisitor = _.org.kevoree.modeling.api.json.JSONModelSerializer.printAttName$f(out);
                  elem.visitAttributes(attributeVisitor);
                }
              }, /** @lends _.org.kevoree.modeling.api.json.JSONModelSerializer */ {
                serializeToStream$f: function (out, this$JSONModelSerializer, internalReferenceVisitor) {
                  return Kotlin.createObject(function () {
                    return [_.org.kevoree.modeling.api.util.ModelVisitor];
                  }, function $fun() {
                    $fun.baseInitializer.call(this);
                    this.isFirstInRef = true;
                  }, {
                    beginVisitElem: function (elem) {
                      if (!this.isFirstInRef) {
                        out.print_4(',');
                        this.isFirstInRef = false;
                      }
                      this$JSONModelSerializer.printAttName(elem, out);
                      var tmp$0;
                      (tmp$0 = internalReferenceVisitor.alreadyVisited) != null ? tmp$0.clear() : null;
                      elem.visit(internalReferenceVisitor, false, false, true);
                    },
                    endVisitElem: function (elem) {
                      out.println_2('}');
                      this.isFirstInRef = false;
                    },
                    beginVisitRef: function (refName, refType) {
                      out.print_4(',"' + refName + '":[');
                      this.isFirstInRef = true;
                      return true;
                    },
                    endVisitRef: function (refName) {
                      out.print_4(']');
                      this.isFirstInRef = false;
                    },
                    visit: function (elem, refNameInParent, parent) {
                    }
                  });
                },
                printAttName$f: function (out) {
                  return Kotlin.createObject(function () {
                    return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
                  }, null, {
                    visit: function (value, name, parent) {
                      if (value != null) {
                        out.print_4(',"' + name + '":"');
                        if (Kotlin.isType(value, Date)) {
                          _.org.kevoree.modeling.api.json.JSONString.encode(out, '' + value.getTime());
                        }
                         else {
                          _.org.kevoree.modeling.api.json.JSONString.encode(out, _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(value));
                        }
                        out.print_4('"');
                      }
                    }
                  });
                }
              })
            }),
            xmi: Kotlin.definePackage(function () {
              this.Token = Kotlin.createObject(null, function () {
                this.XML_HEADER = 0;
                this.END_DOCUMENT = 1;
                this.START_TAG = 2;
                this.END_TAG = 3;
                this.COMMENT = 4;
                this.SINGLETON_TAG = 5;
              });
            }, /** @lends _.org.kevoree.modeling.api.xmi */ {
              ReferencesVisitor: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.util.ModelVisitor];
              }, function $fun(ostream, addressTable, elementsCount, resourceSet) {
                $fun.baseInitializer.call(this);
                this.ostream = ostream;
                this.addressTable = addressTable;
                this.elementsCount = elementsCount;
                this.resourceSet = resourceSet;
                this.value = null;
              }, /** @lends _.org.kevoree.modeling.api.xmi.ReferencesVisitor.prototype */ {
                endVisitRef: function (refName) {
                  if (this.value != null) {
                    this.ostream.print_4(' ' + refName + '="' + Kotlin.toString(this.value) + '"');
                    this.value = null;
                  }
                },
                visit: function (elem, refNameInParent, parent) {
                  var tmp$0;
                  var adjustedAddress = (tmp$0 = this.resourceSet) != null ? tmp$0.objToAddr(elem) : null;
                  if (adjustedAddress == null) {
                    adjustedAddress = this.addressTable.get_za3rmp$(elem);
                  }
                  if (this.value == null) {
                    this.value = adjustedAddress;
                  }
                   else {
                    var tmp$1, tmp$2;
                    this.value = ((tmp$1 = this.value) != null ? tmp$1 : Kotlin.throwNPE()) + ' ';
                    this.value = ((tmp$2 = this.value) != null ? tmp$2 : Kotlin.throwNPE()) + Kotlin.toString(adjustedAddress);
                  }
                }
              }),
              AttributesVisitor: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
              }, function (ostream, ignoreGeneratedID) {
                this.ostream = ostream;
                this.ignoreGeneratedID = ignoreGeneratedID;
              }, /** @lends _.org.kevoree.modeling.api.xmi.AttributesVisitor.prototype */ {
                visit: function (value, name, parent) {
                  if (value != null) {
                    if (this.ignoreGeneratedID && Kotlin.equals(name, 'generated_KMF_ID')) {
                      return;
                    }
                    if (typeof value === 'string' && Kotlin.equals(value, '')) {
                      return;
                    }
                    this.ostream.print_4(' ' + name + '="');
                    if (Kotlin.isType(value, Date)) {
                      this.escapeXml(this.ostream, '' + value.getTime());
                    }
                     else {
                      this.escapeXml(this.ostream, _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(value));
                    }
                    this.ostream.print_4('"');
                  }
                },
                escapeXml: function (ostream, chain) {
                  if (chain == null) {
                    return;
                  }
                  var i = 0;
                  var max = chain.length;
                  while (i < max) {
                    var c = chain.charAt(i);
                    if (c === '"') {
                      ostream.print_4('&quot;');
                    }
                     else if (c === '&') {
                      ostream.print_4('&amp;');
                    }
                     else if (c === "'") {
                      ostream.print_4('&apos;');
                    }
                     else if (c === '<') {
                      ostream.print_4('&lt;');
                    }
                     else if (c === '>') {
                      ostream.print_4('&gt;');
                    }
                     else {
                      ostream.print_1(c);
                    }
                    i = i + 1;
                  }
                }
              }),
              ModelSerializationVisitor: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.util.ModelVisitor];
              }, function $fun(ostream, addressTable, elementsCount, resourceSet, ignoreGeneratedID) {
                $fun.baseInitializer.call(this);
                this.ostream = ostream;
                this.addressTable = addressTable;
                this.elementsCount = elementsCount;
                this.resourceSet = resourceSet;
                this.attributeVisitor = new _.org.kevoree.modeling.api.xmi.AttributesVisitor(this.ostream, ignoreGeneratedID);
                this.referenceVisitor = new _.org.kevoree.modeling.api.xmi.ReferencesVisitor(this.ostream, this.addressTable, this.elementsCount, this.resourceSet);
              }, /** @lends _.org.kevoree.modeling.api.xmi.ModelSerializationVisitor.prototype */ {
                visit: function (elem, refNameInParent, parent) {
                  this.ostream.print_1('<');
                  this.ostream.print_4(refNameInParent);
                  this.ostream.print_4(' xsi:type="' + this.formatMetaClassName(elem.metaClassName()) + '"');
                  elem.visitAttributes(this.attributeVisitor);
                  elem.visit(this.referenceVisitor, false, false, true);
                  this.ostream.println_1('>');
                  elem.visit(this, false, true, false);
                  this.ostream.print_4('<\/');
                  this.ostream.print_4(refNameInParent);
                  this.ostream.print_1('>');
                  this.ostream.println();
                },
                formatMetaClassName: function (metaClassName) {
                  var lastPoint = _.js.lastIndexOf_960177$(metaClassName, '.');
                  var pack = metaClassName.substring(0, lastPoint);
                  var cls = metaClassName.substring(lastPoint + 1);
                  return pack + ':' + cls;
                }
              }),
              ModelAddressVisitor: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.util.ModelVisitor];
              }, function $fun(addressTable, elementsCount, packageList) {
                $fun.baseInitializer.call(this);
                this.addressTable = addressTable;
                this.elementsCount = elementsCount;
                this.packageList = packageList;
              }, /** @lends _.org.kevoree.modeling.api.xmi.ModelAddressVisitor.prototype */ {
                visit: function (elem, refNameInParent, parent) {
                  var tmp$0, tmp$1;
                  var parentXmiAddress = (tmp$0 = this.addressTable.get_za3rmp$(parent)) != null ? tmp$0 : Kotlin.throwNPE();
                  var i = (tmp$1 = this.elementsCount.get_za3rmp$(parentXmiAddress + '/@' + refNameInParent)) != null ? tmp$1 : 0;
                  this.addressTable.put_wn2jw4$(elem, parentXmiAddress + '/@' + refNameInParent + '.' + i);
                  this.elementsCount.put_wn2jw4$(parentXmiAddress + '/@' + refNameInParent, i + 1);
                  var pack = elem.metaClassName().substring(0, _.js.lastIndexOf_960177$(elem.metaClassName(), '.'));
                  if (!this.packageList.contains_za3rmp$(pack))
                    this.packageList.add_za3rmp$(pack);
                }
              }),
              XMIModelSerializer: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.ModelSerializer];
              }, function () {
                this.resourceSet = null;
                this.ignoreGeneratedID = false;
              }, /** @lends _.org.kevoree.modeling.api.xmi.XMIModelSerializer.prototype */ {
                serialize: function (oMS) {
                  var oo = new _.java.io.ByteArrayOutputStream();
                  this.serializeToStream(oMS, oo);
                  oo.flush();
                  return oo.toString();
                },
                serializeToStream: function (oMS, ostream) {
                  var wt = new _.java.io.PrintStream(new _.java.io.BufferedOutputStream(ostream), false);
                  var addressTable = new Kotlin.ComplexHashMap();
                  var packageList = new Kotlin.ArrayList();
                  addressTable.put_wn2jw4$(oMS, '/');
                  var elementsCount = new Kotlin.PrimitiveHashMap();
                  var addressBuilderVisitor = new _.org.kevoree.modeling.api.xmi.ModelAddressVisitor(addressTable, elementsCount, packageList);
                  oMS.visit(addressBuilderVisitor, true, true, false);
                  var masterVisitor = new _.org.kevoree.modeling.api.xmi.ModelSerializationVisitor(wt, addressTable, elementsCount, this.resourceSet, this.ignoreGeneratedID);
                  wt.println_2('<?xml version="1.0" encoding="UTF-8"?>');
                  wt.print_4('<' + this.formatMetaClassName(oMS.metaClassName()).replace('.', '_'));
                  wt.print_4(' xmlns:xsi="http://wwww.w3.org/2001/XMLSchema-instance"');
                  wt.print_4(' xmi:version="2.0"');
                  wt.print_4(' xmlns:xmi="http://www.omg.org/XMI"');
                  var index = 0;
                  while (index < _.kotlin.get_size_0(packageList)) {
                    wt.print_4(' xmlns:' + packageList.get_za3lpa$(index).replace('.', '_') + '="http://' + packageList.get_za3lpa$(index) + '"');
                    index++;
                  }
                  oMS.visitAttributes(new _.org.kevoree.modeling.api.xmi.AttributesVisitor(wt, this.ignoreGeneratedID));
                  oMS.visit(new _.org.kevoree.modeling.api.xmi.ReferencesVisitor(wt, addressTable, elementsCount, this.resourceSet), false, false, true);
                  wt.println_2('>');
                  oMS.visit(masterVisitor, false, true, false);
                  wt.println_2('<\/' + this.formatMetaClassName(oMS.metaClassName()).replace('.', '_') + '>');
                  wt.flush();
                },
                formatMetaClassName: function (metaClassName) {
                  var lastPoint = _.js.lastIndexOf_960177$(metaClassName, '.');
                  var pack = metaClassName.substring(0, lastPoint);
                  var cls = metaClassName.substring(lastPoint + 1);
                  return pack + ':' + cls;
                }
              }),
              ResourceSet: Kotlin.createClass(null, function () {
                this.resources_twji9r$ = new Kotlin.PrimitiveHashMap();
                this.invertedResources_583d58$ = new Kotlin.ComplexHashMap();
              }, /** @lends _.org.kevoree.modeling.api.xmi.ResourceSet.prototype */ {
                registerXmiAddrMappedObjects: function (nsuri, xmiAddrs) {
                  this.resources_twji9r$.put_wn2jw4$(nsuri, xmiAddrs);
                  {
                    var tmp$0 = _.kotlin.iterator_s8ckw1$(xmiAddrs);
                    while (tmp$0.hasNext()) {
                      var ad = tmp$0.next();
                      if (this.invertedResources_583d58$.containsKey_za3rmp$(_.kotlin.get_value(ad))) {
                        var alreadyVal = this.invertedResources_583d58$.get_za3rmp$(_.kotlin.get_value(ad));
                        if ((alreadyVal != null ? alreadyVal : Kotlin.throwNPE()).addr.contains('@')) {
                          this.invertedResources_583d58$.put_wn2jw4$(_.kotlin.get_value(ad), new _.org.kevoree.modeling.api.xmi.XmiObjAddr(nsuri, _.kotlin.get_key(ad)));
                        }
                      }
                       else {
                        this.invertedResources_583d58$.put_wn2jw4$(_.kotlin.get_value(ad), new _.org.kevoree.modeling.api.xmi.XmiObjAddr(nsuri, _.kotlin.get_key(ad)));
                      }
                    }
                  }
                },
                resolveObject: function (xmiAddr) {
                  var typeAndAddr = Kotlin.splitString(xmiAddr, ' ');
                  if (typeAndAddr.length > 1) {
                    var addrs = Kotlin.splitString(typeAndAddr[1], '#');
                    if (addrs.length === 2) {
                      var resolvedAddrs = this.resources_twji9r$.get_za3rmp$(addrs[0]);
                      var addr = addrs[1];
                      addr = '#' + addr;
                      addr = addr.replace('#//', '/0/');
                      return resolvedAddrs != null ? resolvedAddrs.get_za3rmp$(addr) : null;
                    }
                  }
                  return null;
                },
                objToAddr: function (obj) {
                  var resolved = this.invertedResources_583d58$.get_za3rmp$(obj);
                  if (resolved != null) {
                    var packName = this.formatMetaClassName(obj.metaClassName());
                    var nsURI = resolved.nsuri;
                    var addr = resolved.addr;
                    addr = addr.replace('/0/', '#//');
                    return packName + ' ' + nsURI + addr;
                  }
                  return null;
                },
                formatMetaClassName: function (metaClassName) {
                  var lastPoint = _.js.lastIndexOf_960177$(metaClassName, '.');
                  var pack = metaClassName.substring(0, lastPoint);
                  var cls = metaClassName.substring(lastPoint + 1);
                  return pack + ':' + cls;
                }
              }),
              XmiObjAddr: Kotlin.createClass(null, function (nsuri, addr) {
                this.nsuri = nsuri;
                this.addr = addr;
              }, /** @lends _.org.kevoree.modeling.api.xmi.XmiObjAddr.prototype */ {
                component1: function () {
                  return this.nsuri;
                },
                component2: function () {
                  return this.addr;
                },
                copy: function (nsuri, addr) {
                  return new _.org.kevoree.modeling.api.xmi.XmiObjAddr(nsuri === void 0 ? this.nsuri : nsuri, addr === void 0 ? this.addr : addr);
                },
                toString: function () {
                  return 'XmiObjAddr(nsuri=' + Kotlin.toString(this.nsuri) + (', addr=' + Kotlin.toString(this.addr)) + ')';
                },
                hashCode: function () {
                  var result = 977237871;
                  result = result * 31 + Kotlin.hashCode(this.nsuri) | 0;
                  result = result * 31 + Kotlin.hashCode(this.addr) | 0;
                  return result;
                },
                equals_za3rmp$: function (other) {
                  return this === other || (other !== null && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.nsuri, other.nsuri) && Kotlin.equals(this.addr, other.addr))));
                }
              }),
              XMIModelLoader: Kotlin.createClass(function () {
                return [_.org.kevoree.modeling.api.ModelLoader];
              }, function (factory) {
                this.factory = factory;
                this.resourceSet = null;
                this.LOADER_XMI_LOCAL_NAME = 'type';
                this.LOADER_XMI_XSI = 'xsi';
                this.LOADER_XMI_NS_URI = 'nsURI';
                this.attributesHashmap_7wijs5$ = new Kotlin.PrimitiveHashMap();
                this.referencesHashmap_cc1kom$ = new Kotlin.PrimitiveHashMap();
                this.namedElementSupportActivated_71goxr$ = false;
                this.attributeVisitor_g67dla$ = _.org.kevoree.modeling.api.xmi.XMIModelLoader.XMIModelLoader$f(this);
                this.referencesVisitor_g5fzti$ = _.org.kevoree.modeling.api.xmi.XMIModelLoader.XMIModelLoader$f_0(this);
              }, /** @lends _.org.kevoree.modeling.api.xmi.XMIModelLoader.prototype */ {
                activateSupportForNamedElements: function (activate) {
                  this.namedElementSupportActivated_71goxr$ = activate;
                },
                unescapeXml: function (src) {
                  var builder = null;
                  var i = 0;
                  while (i < src.length) {
                    var c = src.charAt(i);
                    if (c === '&') {
                      if (builder == null) {
                        builder = new Kotlin.StringBuilder();
                        (builder != null ? builder : Kotlin.throwNPE()).append(src.substring(0, i));
                      }
                      if (src.charAt(i + 1) === 'a') {
                        if (src.charAt(i + 2) === 'm') {
                          builder != null ? builder.append('&') : null;
                          i = i + 5;
                        }
                         else if (src.charAt(i + 2) === 'p') {
                          builder != null ? builder.append("'") : null;
                          i = i + 6;
                        }
                         else {
                          Kotlin.println('Could not unescaped chain:' + src.charAt(i) + src.charAt(i + 1) + src.charAt(i + 2));
                        }
                      }
                       else if (src.charAt(i + 1) === 'q') {
                        builder != null ? builder.append('"') : null;
                        i = i + 6;
                      }
                       else if (src.charAt(i + 1) === 'l') {
                        builder != null ? builder.append('<') : null;
                        i = i + 4;
                      }
                       else if (src.charAt(i + 1) === 'g') {
                        builder != null ? builder.append('>') : null;
                        i = i + 4;
                      }
                       else {
                        Kotlin.println('Could not unescaped chain:' + src.charAt(i) + src.charAt(i + 1));
                      }
                    }
                     else {
                      if (builder != null) {
                        builder != null ? builder.append(c) : null;
                      }
                      i++;
                    }
                  }
                  if (builder != null) {
                    return Kotlin.toString(builder);
                  }
                   else {
                    return src;
                  }
                },
                loadModelFromString: function (str) {
                  var reader = new _.org.kevoree.modeling.api.xmi.XmlParser(_.org.kevoree.modeling.api.util.ByteConverter.byteArrayInputStreamFromString(str));
                  if (reader.hasNext()) {
                    return this.deserialize(reader);
                  }
                   else {
                    Kotlin.println('Loader::Nothing in the String !');
                    return null;
                  }
                },
                loadModelFromStream: function (inputStream) {
                  var reader = new _.org.kevoree.modeling.api.xmi.XmlParser(inputStream);
                  if (reader.hasNext()) {
                    return this.deserialize(reader);
                  }
                   else {
                    Kotlin.println('Loader::Nothing in the file !');
                    return null;
                  }
                },
                loadObject: function (ctx, xmiAddress, objectType) {
                  if (objectType === void 0)
                    objectType = null;
                  var tmp$0, tmp$12, tmp$13, tmp$14, tmp$15, tmp$16, tmp$17, tmp$18;
                  var elementTagName = ((tmp$0 = ctx.xmiReader) != null ? tmp$0 : Kotlin.throwNPE()).getLocalName();
                  var modelElem;
                  if (objectType != null) {
                    var tmp$1;
                    modelElem = (tmp$1 = this.factory) != null ? tmp$1.create(objectType) : null;
                    if (modelElem == null) {
                      var xsiType = null;
                      var tmp$2, tmp$3, tmp$4, tmp$5, tmp$6;
                      {
                        tmp$3 = new Kotlin.NumberRange(0, ((tmp$2 = ctx.xmiReader) != null ? tmp$2 : Kotlin.throwNPE()).getAttributeCount() - 1), tmp$4 = tmp$3.start, tmp$5 = tmp$3.end, tmp$6 = tmp$3.increment;
                        for (var i = tmp$4; i <= tmp$5; i += tmp$6) {
                          var tmp$7, tmp$8;
                          var localName = ((tmp$7 = ctx.xmiReader) != null ? tmp$7 : Kotlin.throwNPE()).getAttributeLocalName(i);
                          var xsi = ((tmp$8 = ctx.xmiReader) != null ? tmp$8 : Kotlin.throwNPE()).getAttributePrefix(i);
                          if (Kotlin.equals(localName, this.LOADER_XMI_LOCAL_NAME) && Kotlin.equals(xsi, this.LOADER_XMI_XSI)) {
                            var tmp$9;
                            xsiType = ((tmp$9 = ctx.xmiReader) != null ? tmp$9 : Kotlin.throwNPE()).getAttributeValue(i);
                            break;
                          }
                        }
                      }
                      if (xsiType != null) {
                        var realTypeName = xsiType != null ? xsiType.substring(0, (xsiType != null ? xsiType : Kotlin.throwNPE()).lastIndexOf(':')) : null;
                        var realName = (xsiType != null ? xsiType : Kotlin.throwNPE()).substring((xsiType != null ? xsiType : Kotlin.throwNPE()).lastIndexOf(':') + 1, (xsiType != null ? xsiType : Kotlin.throwNPE()).length);
                        var tmp$10;
                        modelElem = (tmp$10 = this.factory) != null ? tmp$10.create(_.kotlin.plus_n7iowf$(realTypeName, '.') + realName) : null;
                      }
                    }
                  }
                   else {
                    var tmp$11;
                    modelElem = (tmp$11 = this.factory) != null ? tmp$11.create(elementTagName) : null;
                  }
                  if (modelElem == null) {
                    Kotlin.println('Could not create an object for local name ' + elementTagName);
                  }
                  ctx.map.put_wn2jw4$(xmiAddress, modelElem != null ? modelElem : Kotlin.throwNPE());
                  if (!this.attributesHashmap_7wijs5$.containsKey_za3rmp$((modelElem != null ? modelElem : Kotlin.throwNPE()).metaClassName())) {
                    modelElem != null ? modelElem.visitAttributes(this.attributeVisitor_g67dla$) : null;
                  }
                  var elemAttributesMap = (tmp$12 = this.attributesHashmap_7wijs5$.get_za3rmp$((modelElem != null ? modelElem : Kotlin.throwNPE()).metaClassName())) != null ? tmp$12 : Kotlin.throwNPE();
                  if (!this.referencesHashmap_cc1kom$.containsKey_za3rmp$((modelElem != null ? modelElem : Kotlin.throwNPE()).metaClassName())) {
                    modelElem != null ? modelElem.visit(this.referencesVisitor_g5fzti$, false, true, false) : null;
                  }
                  var elemReferencesMap = (tmp$13 = this.referencesHashmap_cc1kom$.get_za3rmp$((modelElem != null ? modelElem : Kotlin.throwNPE()).metaClassName())) != null ? tmp$13 : Kotlin.throwNPE();
                  {
                    tmp$15 = new Kotlin.NumberRange(0, ((tmp$14 = ctx.xmiReader) != null ? tmp$14 : Kotlin.throwNPE()).getAttributeCount() - 1), tmp$16 = tmp$15.start, tmp$17 = tmp$15.end, tmp$18 = tmp$15.increment;
                    for (var i_0 = tmp$16; i_0 <= tmp$17; i_0 += tmp$18) {
                      var tmp$19;
                      var prefix = ((tmp$19 = ctx.xmiReader) != null ? tmp$19 : Kotlin.throwNPE()).getAttributePrefix(i_0);
                      if (prefix == null || Kotlin.equals(prefix, '')) {
                        var tmp$20, tmp$21;
                        var attrName = ((tmp$20 = ctx.xmiReader) != null ? tmp$20 : Kotlin.throwNPE()).getAttributeLocalName(i_0).trim();
                        var valueAtt = ((tmp$21 = ctx.xmiReader) != null ? tmp$21 : Kotlin.throwNPE()).getAttributeValue(i_0).trim();
                        if (valueAtt != null) {
                          if (elemAttributesMap.containsKey_za3rmp$(attrName)) {
                            modelElem != null ? modelElem.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, attrName, this.unescapeXml(valueAtt), false, false) : null;
                            if (this.namedElementSupportActivated_71goxr$ && Kotlin.equals(attrName, 'name')) {
                              var parent = ctx.map.get_za3rmp$(xmiAddress.substring(0, xmiAddress.lastIndexOf('/')));
                              {
                                var tmp$22 = _.kotlin.toList_h3panj$(ctx.map.entrySet()).iterator();
                                while (tmp$22.hasNext()) {
                                  var entry = tmp$22.next();
                                  if (Kotlin.equals(_.kotlin.get_value(entry), parent)) {
                                    var refT = _.kotlin.get_key(entry) + '/' + this.unescapeXml(valueAtt);
                                    ctx.map.put_wn2jw4$(refT, modelElem != null ? modelElem : Kotlin.throwNPE());
                                  }
                                }
                              }
                            }
                          }
                           else {
                            if (!valueAtt.startsWith('#') && !valueAtt.startsWith('/')) {
                              if (this.resourceSet != null) {
                                var tmp$23;
                                var previousLoadedRef = ((tmp$23 = this.resourceSet) != null ? tmp$23 : Kotlin.throwNPE()).resolveObject(valueAtt);
                                if (previousLoadedRef != null) {
                                  modelElem != null ? modelElem.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, attrName, previousLoadedRef, true, false) : null;
                                }
                                 else {
                                  throw new Error('Unresolve NsURI based XMI reference ' + valueAtt);
                                }
                              }
                               else {
                                throw new Error('Bad XMI reference ' + valueAtt);
                              }
                            }
                             else {
                              var tmp$24, tmp$25, tmp$26;
                              {
                                tmp$24 = Kotlin.splitString(valueAtt, ' '), tmp$25 = tmp$24.length;
                                for (var tmp$26 = 0; tmp$26 !== tmp$25; ++tmp$26) {
                                  var xmiRef = tmp$24[tmp$26];
                                  var tmp$27, tmp$28;
                                  if (xmiRef.startsWith('#')) {
                                    tmp$27 = xmiRef.substring(1);
                                  }
                                   else {
                                    tmp$27 = xmiRef;
                                  }
                                  var adjustedRef = tmp$27;
                                  if (adjustedRef.startsWith('//')) {
                                    tmp$28 = '/0' + adjustedRef.substring(1);
                                  }
                                   else {
                                    tmp$28 = adjustedRef;
                                  }
                                  adjustedRef = tmp$28;
                                  adjustedRef = adjustedRef.replace('.0', '');
                                  var ref = ctx.map.get_za3rmp$(adjustedRef);
                                  if (ref != null) {
                                    modelElem != null ? modelElem.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, attrName, ref, true, false) : null;
                                  }
                                   else {
                                    ctx.resolvers.add_za3rmp$(new _.org.kevoree.modeling.api.xmi.XMIResolveCommand(ctx, modelElem != null ? modelElem : Kotlin.throwNPE(), _.org.kevoree.modeling.api.util.ActionType.object.ADD, attrName, adjustedRef, this.resourceSet));
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  var done = false;
                  while (!done) {
                    var tmp$29;
                    {
                      var tmp$30 = ((tmp$29 = ctx.xmiReader) != null ? tmp$29 : Kotlin.throwNPE()).next();
                      if (tmp$30 === _.org.kevoree.modeling.api.xmi.Token.START_TAG) {
                        var tmp$31, tmp$32, tmp$34;
                        var subElemName = ((tmp$31 = ctx.xmiReader) != null ? tmp$31 : Kotlin.throwNPE()).getLocalName();
                        var i_1 = (tmp$32 = ctx.elementsCount.get_za3rmp$(xmiAddress + '/@' + subElemName)) != null ? tmp$32 : 0;
                        var tmp$33 = xmiAddress + '/@' + subElemName;
                        if (i_1 !== 0) {
                          tmp$34 = '.' + i_1;
                        }
                         else {
                          tmp$34 = '';
                        }
                        var subElementId = tmp$33 + tmp$34;
                        var containedElement = this.loadObject(ctx, subElementId, elemReferencesMap.get_za3rmp$(subElemName));
                        modelElem != null ? modelElem.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, subElemName, containedElement, true, false) : null;
                        ctx.elementsCount.put_wn2jw4$(xmiAddress + '/@' + subElemName, i_1 + 1);
                      }
                       else if (tmp$30 === _.org.kevoree.modeling.api.xmi.Token.END_TAG) {
                        var tmp$35;
                        if (Kotlin.equals(((tmp$35 = ctx.xmiReader) != null ? tmp$35 : Kotlin.throwNPE()).getLocalName(), elementTagName)) {
                          done = true;
                        }
                      }
                       else {
                      }
                    }
                  }
                  return modelElem != null ? modelElem : Kotlin.throwNPE();
                },
                deserialize: function (reader) {
                  var nsURI = null;
                  var context = new _.org.kevoree.modeling.api.xmi.LoadingContext();
                  context.xmiReader = reader;
                  while (reader.hasNext()) {
                    var nextTag = reader.next();
                    {
                      if (nextTag === _.org.kevoree.modeling.api.xmi.Token.START_TAG) {
                        var localName = reader.getLocalName();
                        if (localName != null) {
                          var loadedRootsSize = context.loadedRoots.size();
                          var ns = new Kotlin.PrimitiveHashMap();
                          var tmp$0, tmp$1, tmp$2, tmp$3, tmp$4;
                          {
                            tmp$1 = new Kotlin.NumberRange(0, ((tmp$0 = context.xmiReader) != null ? tmp$0 : Kotlin.throwNPE()).getAttributeCount() - 1), tmp$2 = tmp$1.start, tmp$3 = tmp$1.end, tmp$4 = tmp$1.increment;
                            for (var i = tmp$2; i <= tmp$3; i += tmp$4) {
                              var tmp$5, tmp$6;
                              var localName_0 = ((tmp$5 = context.xmiReader) != null ? tmp$5 : Kotlin.throwNPE()).getAttributeLocalName(i);
                              var localValue = ((tmp$6 = context.xmiReader) != null ? tmp$6 : Kotlin.throwNPE()).getAttributeValue(i);
                              if (Kotlin.equals(localName_0, this.LOADER_XMI_NS_URI)) {
                                nsURI = localValue;
                              }
                              ns.put_wn2jw4$(localName_0, localValue);
                            }
                          }
                          var xsiType = reader.tagPrefix;
                          var realTypeName = ns.get_za3rmp$(xsiType);
                          if (realTypeName == null) {
                            realTypeName = xsiType;
                          }
                          context.loadedRoots.add_za3rmp$(this.loadObject(context, '/' + loadedRootsSize, Kotlin.toString(xsiType) + '.' + localName));
                        }
                         else {
                          Kotlin.println('Tried to read a tag with null tag_name.');
                        }
                      }
                       else if (nextTag === _.org.kevoree.modeling.api.xmi.Token.END_TAG) {
                        break;
                      }
                       else if (nextTag === _.org.kevoree.modeling.api.xmi.Token.END_DOCUMENT) {
                        break;
                      }
                       else {
                      }
                    }
                  }
                  {
                    var tmp$7 = context.resolvers.iterator();
                    while (tmp$7.hasNext()) {
                      var res = tmp$7.next();
                      res.run();
                    }
                  }
                  if (this.resourceSet != null && nsURI != null) {
                    var tmp$8;
                    ((tmp$8 = this.resourceSet) != null ? tmp$8 : Kotlin.throwNPE()).registerXmiAddrMappedObjects(nsURI != null ? nsURI : Kotlin.throwNPE(), context.map);
                  }
                  return context.loadedRoots;
                }
              }, /** @lends _.org.kevoree.modeling.api.xmi.XMIModelLoader */ {
                visit$f: function () {
                  return new Kotlin.PrimitiveHashMap();
                },
                XMIModelLoader$f: function (this$XMIModelLoader) {
                  return Kotlin.createObject(function () {
                    return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
                  }, null, {
                    visit: function (value, name, parent) {
                      _.kotlin.getOrPut_ynyybx$(this$XMIModelLoader.attributesHashmap_7wijs5$, parent.metaClassName(), _.org.kevoree.modeling.api.xmi.XMIModelLoader.visit$f).put_wn2jw4$(name, true);
                    }
                  });
                },
                beginVisitElem$f: function () {
                  return new Kotlin.PrimitiveHashMap();
                },
                XMIModelLoader$f_0: function (this$XMIModelLoader) {
                  return Kotlin.createObject(function () {
                    return [_.org.kevoree.modeling.api.util.ModelVisitor];
                  }, function $fun() {
                    $fun.baseInitializer.call(this);
                    this.refMap = null;
                  }, {
                    beginVisitElem: function (elem) {
                      this.refMap = _.kotlin.getOrPut_ynyybx$(this$XMIModelLoader.referencesHashmap_cc1kom$, elem.metaClassName(), _.org.kevoree.modeling.api.xmi.XMIModelLoader.beginVisitElem$f);
                    },
                    endVisitElem: function (elem) {
                      this.refMap = null;
                    },
                    beginVisitRef: function (refName, refType) {
                      var tmp$0;
                      ((tmp$0 = this.refMap) != null ? tmp$0 : Kotlin.throwNPE()).put_wn2jw4$(refName, refType);
                      return true;
                    },
                    visit: function (elem, refNameInParent, parent) {
                    }
                  });
                }
              }),
              LoadingContext: Kotlin.createClass(null, function () {
                this.xmiReader = null;
                this.loadedRoots = new Kotlin.ArrayList();
                this.map = new Kotlin.PrimitiveHashMap();
                this.elementsCount = new Kotlin.PrimitiveHashMap();
                this.resolvers = new Kotlin.ArrayList();
                this.stats = new Kotlin.PrimitiveHashMap();
                this.oppositesAlreadySet = new Kotlin.PrimitiveHashMap();
              }, /** @lends _.org.kevoree.modeling.api.xmi.LoadingContext.prototype */ {
                isOppositeAlreadySet: function (localRef, oppositeRef) {
                  var res = this.oppositesAlreadySet.get_za3rmp$(oppositeRef + '_' + localRef) != null || this.oppositesAlreadySet.get_za3rmp$(localRef + '_' + oppositeRef) != null;
                  return res;
                },
                storeOppositeRelation: function (localRef, oppositeRef) {
                  this.oppositesAlreadySet.put_wn2jw4$(localRef + '_' + oppositeRef, true);
                }
              }),
              XMIResolveCommand: Kotlin.createClass(null, function (context, target, mutatorType, refName, ref, resourceSet) {
                this.context = context;
                this.target = target;
                this.mutatorType = mutatorType;
                this.refName = refName;
                this.ref = ref;
                this.resourceSet = resourceSet;
              }, /** @lends _.org.kevoree.modeling.api.xmi.XMIResolveCommand.prototype */ {
                run: function () {
                  var referencedElement = this.context.map.get_za3rmp$(this.ref);
                  if (referencedElement != null) {
                    this.target.reflexiveMutator(this.mutatorType, this.refName, referencedElement, true, false);
                    return;
                  }
                  if (Kotlin.equals(this.ref, '/0/') || Kotlin.equals(this.ref, '/')) {
                    referencedElement = this.context.map.get_za3rmp$('/0');
                    if (referencedElement != null) {
                      this.target.reflexiveMutator(this.mutatorType, this.refName, referencedElement, true, false);
                      return;
                    }
                  }
                  if (this.resourceSet != null) {
                    referencedElement = this.resourceSet.resolveObject(this.ref);
                    if (referencedElement != null) {
                      this.target.reflexiveMutator(this.mutatorType, this.refName, referencedElement, true, false);
                      return;
                    }
                  }
                  throw new Error('KMF Load error : reference ' + this.ref + ' not found in map when trying to  ' + this.mutatorType + ' ' + this.refName + '  on ' + this.target.metaClassName() + '(path:' + this.target.path() + ')');
                }
              }),
              XmlParser: Kotlin.createClass(null, function (inputStream) {
                this.inputStream = inputStream;
                this.bytes_gdnk4p$ = this.inputStream.readBytes();
                this.index_gharkg$ = -1;
                this.currentChar_x9b225$ = null;
                this.xmlVersion_ywy43n$ = null;
                this.xmlCharset_tph6x5$ = null;
                this.tagName_b61wcj$ = '';
                this.tagPrefix = null;
                this.attributesNames_b5o00h$ = new Kotlin.ArrayList();
                this.attributesPrefixes_hgbl8n$ = new Kotlin.ArrayList();
                this.attributesValues_d28x97$ = new Kotlin.ArrayList();
                this.attributeName_f9qnph$ = new Kotlin.StringBuilder();
                this.attributePrefix_r6drlg$ = null;
                this.attributeValue_npfmfd$ = new Kotlin.StringBuilder();
                this.readSingleton_h1okvh$ = false;
              }, /** @lends _.org.kevoree.modeling.api.xmi.XmlParser.prototype */ {
                hasNext: function () {
                  return this.bytes_gdnk4p$.length - this.index_gharkg$ > 2;
                },
                getLocalName: function () {
                  return this.tagName_b61wcj$;
                },
                getAttributeCount: function () {
                  return this.attributesNames_b5o00h$.size();
                },
                getAttributeLocalName: function (i) {
                  return this.attributesNames_b5o00h$.get_za3lpa$(i);
                },
                getAttributePrefix: function (i) {
                  return this.attributesPrefixes_hgbl8n$.get_za3lpa$(i);
                },
                getAttributeValue: function (i) {
                  return this.attributesValues_d28x97$.get_za3lpa$(i);
                },
                readChar: function () {
                  return _.org.kevoree.modeling.api.util.ByteConverter.toChar(this.bytes_gdnk4p$[++this.index_gharkg$]);
                },
                next: function () {
                  if (this.readSingleton_h1okvh$) {
                    this.readSingleton_h1okvh$ = false;
                    return _.org.kevoree.modeling.api.xmi.Token.END_TAG;
                  }
                  if (!this.hasNext()) {
                    return _.org.kevoree.modeling.api.xmi.Token.END_DOCUMENT;
                  }
                  this.attributesNames_b5o00h$.clear();
                  this.attributesPrefixes_hgbl8n$.clear();
                  this.attributesValues_d28x97$.clear();
                  this.read_lessThan();
                  this.currentChar_x9b225$ = this.readChar();
                  if (this.currentChar_x9b225$ === '?') {
                    this.currentChar_x9b225$ = this.readChar();
                    this.read_xmlHeader();
                    return _.org.kevoree.modeling.api.xmi.Token.XML_HEADER;
                  }
                   else if (this.currentChar_x9b225$ === '!') {
                    do {
                      this.currentChar_x9b225$ = this.readChar();
                    }
                     while (this.currentChar_x9b225$ !== '>');
                    return _.org.kevoree.modeling.api.xmi.Token.COMMENT;
                  }
                   else if (this.currentChar_x9b225$ === '/') {
                    this.currentChar_x9b225$ = this.readChar();
                    this.read_closingTag();
                    return _.org.kevoree.modeling.api.xmi.Token.END_TAG;
                  }
                   else {
                    this.read_openTag();
                    if (this.currentChar_x9b225$ === '/') {
                      this.read_upperThan();
                      this.readSingleton_h1okvh$ = true;
                    }
                    return _.org.kevoree.modeling.api.xmi.Token.START_TAG;
                  }
                },
                read_lessThan: function () {
                  do {
                    this.currentChar_x9b225$ = this.readChar();
                  }
                   while (this.currentChar_x9b225$ !== '<');
                },
                read_upperThan: function () {
                  while (this.currentChar_x9b225$ !== '>') {
                    this.currentChar_x9b225$ = this.readChar();
                  }
                },
                read_xmlHeader: function () {
                  this.read_tagName();
                  this.read_attributes();
                  this.read_upperThan();
                },
                read_closingTag: function () {
                  this.read_tagName();
                  this.read_upperThan();
                },
                read_openTag: function () {
                  this.read_tagName();
                  if (this.currentChar_x9b225$ !== '>' && this.currentChar_x9b225$ !== '/') {
                    this.read_attributes();
                  }
                },
                read_tagName: function () {
                  this.tagName_b61wcj$ = '' + this.currentChar_x9b225$;
                  this.tagPrefix = null;
                  this.currentChar_x9b225$ = this.readChar();
                  while (this.currentChar_x9b225$ !== ' ' && this.currentChar_x9b225$ !== '>' && this.currentChar_x9b225$ !== '/') {
                    if (this.currentChar_x9b225$ === ':') {
                      this.tagPrefix = this.tagName_b61wcj$;
                      this.tagName_b61wcj$ = '';
                    }
                     else {
                      this.tagName_b61wcj$ += this.currentChar_x9b225$;
                    }
                    this.currentChar_x9b225$ = this.readChar();
                  }
                },
                read_attributes: function () {
                  var end_of_tag = false;
                  while (this.currentChar_x9b225$ === ' ') {
                    this.currentChar_x9b225$ = this.readChar();
                  }
                  while (!end_of_tag) {
                    while (this.currentChar_x9b225$ !== '=') {
                      if (this.currentChar_x9b225$ === ':') {
                        this.attributePrefix_r6drlg$ = this.attributeName_f9qnph$.toString();
                        this.attributeName_f9qnph$ = new Kotlin.StringBuilder();
                      }
                       else {
                        var tmp$0;
                        this.attributeName_f9qnph$.append((tmp$0 = this.currentChar_x9b225$) != null ? tmp$0 : Kotlin.throwNPE());
                      }
                      this.currentChar_x9b225$ = this.readChar();
                    }
                    do {
                      this.currentChar_x9b225$ = this.readChar();
                    }
                     while (this.currentChar_x9b225$ !== '"');
                    this.currentChar_x9b225$ = this.readChar();
                    while (this.currentChar_x9b225$ !== '"') {
                      var tmp$1;
                      this.attributeValue_npfmfd$.append((tmp$1 = this.currentChar_x9b225$) != null ? tmp$1 : Kotlin.throwNPE());
                      this.currentChar_x9b225$ = this.readChar();
                    }
                    this.attributesNames_b5o00h$.add_za3rmp$(this.attributeName_f9qnph$.toString());
                    this.attributesPrefixes_hgbl8n$.add_za3rmp$(this.attributePrefix_r6drlg$);
                    this.attributesValues_d28x97$.add_za3rmp$(this.attributeValue_npfmfd$.toString());
                    this.attributeName_f9qnph$ = new Kotlin.StringBuilder();
                    this.attributePrefix_r6drlg$ = null;
                    this.attributeValue_npfmfd$ = new Kotlin.StringBuilder();
                    do {
                      this.currentChar_x9b225$ = this.readChar();
                      if (this.currentChar_x9b225$ === '?' || this.currentChar_x9b225$ === '/' || this.currentChar_x9b225$ === '-' || this.currentChar_x9b225$ === '>') {
                        end_of_tag = true;
                      }
                    }
                     while (!end_of_tag && this.currentChar_x9b225$ === ' ');
                  }
                }
              })
            })
          })
        })
      }),
      w3c: Kotlin.definePackage(null, /** @lends _.org.w3c */ {
        dom: Kotlin.definePackage(null, /** @lends _.org.w3c.dom */ {
          events: Kotlin.definePackage(null, /** @lends _.org.w3c.dom.events */ {
            EventListener: Kotlin.createTrait(null)
          })
        })
      })
    }),
    occi: Kotlin.definePackage(null, /** @lends _.occi */ {
      GeneratedAspect_EGenericType: Kotlin.createTrait(function () {
        return [_.ecore.EGenericType];
      }, /** @lends _.occi.GeneratedAspect_EGenericType.prototype */ {
        isInstance: function (_object) {
          throw new Error('Not implemented yet !');
        }
      }),
      Category: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Category.prototype */ {
        term: {
          get: function () {
            return this.$term_p27vk8$;
          },
          set: function (tmp$0) {
            this.$term_p27vk8$ = tmp$0;
          }
        },
        scheme: {
          get: function () {
            return this.$scheme_48r8ht$;
          },
          set: function (tmp$0) {
            this.$scheme_48r8ht$ = tmp$0;
          }
        },
        title: {
          get: function () {
            return this.$title_4fdttw$;
          },
          set: function (tmp$0) {
            this.$title_4fdttw$ = tmp$0;
          }
        },
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_qs9jq6$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_qs9jq6$ = tmp$0;
          }
        },
        attributes: {
          get: function () {
            return this.$attributes_t2wjn7$;
          },
          set: function (tmp$0) {
            this.$attributes_t2wjn7$ = tmp$0;
          }
        }
      }),
      Attribute: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Attribute.prototype */ {
        name: {
          get: function () {
            return this.$name_oxyqy9$;
          },
          set: function (tmp$0) {
            this.$name_oxyqy9$ = tmp$0;
          }
        },
        mutable: {
          get: function () {
            return this.$mutable_vrjabk$;
          },
          set: function (tmp$0) {
            this.$mutable_vrjabk$ = tmp$0;
          }
        },
        required: {
          get: function () {
            return this.$required_uj3dvf$;
          },
          set: function (tmp$0) {
            this.$required_uj3dvf$ = tmp$0;
          }
        },
        default: {
          get: function () {
            return this.$default_xxs5qz$;
          },
          set: function (tmp$0) {
            this.$default_xxs5qz$ = tmp$0;
          }
        },
        description: {
          get: function () {
            return this.$description_em271m$;
          },
          set: function (tmp$0) {
            this.$description_em271m$ = tmp$0;
          }
        },
        multiple_values: {
          get: function () {
            return this.$multiple_values_kme13f$;
          },
          set: function (tmp$0) {
            this.$multiple_values_kme13f$ = tmp$0;
          }
        },
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_dfyvjg$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_dfyvjg$ = tmp$0;
          }
        },
        type: {
          get: function () {
            return this.$type_oy32qo$;
          },
          set: function (tmp$0) {
            this.$type_oy32qo$ = tmp$0;
          }
        }
      }),
      Kind: Kotlin.createTrait(function () {
        return [_.occi.Category, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Kind.prototype */ {
        parent: {
          get: function () {
            return this.$parent_yp5cvk$;
          },
          set: function (tmp$0) {
            this.$parent_yp5cvk$ = tmp$0;
          }
        },
        actions: {
          get: function () {
            return this.$actions_43kkqf$;
          },
          set: function (tmp$0) {
            this.$actions_43kkqf$ = tmp$0;
          }
        },
        entities: {
          get: function () {
            return this.$entities_md0dfd$;
          },
          set: function (tmp$0) {
            this.$entities_md0dfd$ = tmp$0;
          }
        }
      }),
      Action: Kotlin.createTrait(function () {
        return [_.occi.Category, _.org.kevoree.modeling.api.KMFContainer];
      }),
      Mixin: Kotlin.createTrait(function () {
        return [_.occi.Category, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Mixin.prototype */ {
        actions: {
          get: function () {
            return this.$actions_67wp8c$;
          },
          set: function (tmp$0) {
            this.$actions_67wp8c$ = tmp$0;
          }
        },
        depends: {
          get: function () {
            return this.$depends_jw70l6$;
          },
          set: function (tmp$0) {
            this.$depends_jw70l6$ = tmp$0;
          }
        },
        applies: {
          get: function () {
            return this.$applies_cbcea3$;
          },
          set: function (tmp$0) {
            this.$applies_cbcea3$ = tmp$0;
          }
        },
        entities: {
          get: function () {
            return this.$entities_rnojz2$;
          },
          set: function (tmp$0) {
            this.$entities_rnojz2$ = tmp$0;
          }
        }
      }),
      Entity: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Entity.prototype */ {
        id: {
          get: function () {
            return this.$id_st6ib6$;
          },
          set: function (tmp$0) {
            this.$id_st6ib6$ = tmp$0;
          }
        },
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_1rfv6l$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_1rfv6l$ = tmp$0;
          }
        },
        kind: {
          get: function () {
            return this.$kind_f355w5$;
          },
          set: function (tmp$0) {
            this.$kind_f355w5$ = tmp$0;
          }
        },
        mixins: {
          get: function () {
            return this.$mixins_7nlavr$;
          },
          set: function (tmp$0) {
            this.$mixins_7nlavr$ = tmp$0;
          }
        },
        attributes: {
          get: function () {
            return this.$attributes_2komlq$;
          },
          set: function (tmp$0) {
            this.$attributes_2komlq$ = tmp$0;
          }
        }
      }),
      AttributeState: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.AttributeState.prototype */ {
        name: {
          get: function () {
            return this.$name_1b9p68$;
          },
          set: function (tmp$0) {
            this.$name_1b9p68$ = tmp$0;
          }
        },
        value: {
          get: function () {
            return this.$value_u7d15g$;
          },
          set: function (tmp$0) {
            this.$value_u7d15g$ = tmp$0;
          }
        },
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_xzii3$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_xzii3$ = tmp$0;
          }
        }
      }),
      Resource: Kotlin.createTrait(function () {
        return [_.occi.Entity, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Resource.prototype */ {
        links: {
          get: function () {
            return this.$links_v7i5eb$;
          },
          set: function (tmp$0) {
            this.$links_v7i5eb$ = tmp$0;
          }
        }
      }),
      Link: Kotlin.createTrait(function () {
        return [_.occi.Entity, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Link.prototype */ {
        source: {
          get: function () {
            return this.$source_4ps8cl$;
          },
          set: function (tmp$0) {
            this.$source_4ps8cl$ = tmp$0;
          }
        },
        target: {
          get: function () {
            return this.$target_4ghvbj$;
          },
          set: function (tmp$0) {
            this.$target_4ghvbj$ = tmp$0;
          }
        }
      }),
      Extension: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Extension.prototype */ {
        name: {
          get: function () {
            return this.$name_cqnutu$;
          },
          set: function (tmp$0) {
            this.$name_cqnutu$ = tmp$0;
          }
        },
        scheme: {
          get: function () {
            return this.$scheme_o17xq0$;
          },
          set: function (tmp$0) {
            this.$scheme_o17xq0$ = tmp$0;
          }
        },
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_14mlt5$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_14mlt5$ = tmp$0;
          }
        },
        import: {
          get: function () {
            return this.$import_sm0wag$;
          },
          set: function (tmp$0) {
            this.$import_sm0wag$ = tmp$0;
          }
        },
        kinds: {
          get: function () {
            return this.$kinds_v6mj30$;
          },
          set: function (tmp$0) {
            this.$kinds_v6mj30$ = tmp$0;
          }
        },
        mixins: {
          get: function () {
            return this.$mixins_qrwlqj$;
          },
          set: function (tmp$0) {
            this.$mixins_qrwlqj$ = tmp$0;
          }
        },
        types: {
          get: function () {
            return this.$types_vbuxpy$;
          },
          set: function (tmp$0) {
            this.$types_vbuxpy$ = tmp$0;
          }
        }
      }),
      Configuration: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.occi.Configuration.prototype */ {
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_l26fm$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_l26fm$ = tmp$0;
          }
        },
        use: {
          get: function () {
            return this.$use_v8dfp7$;
          },
          set: function (tmp$0) {
            this.$use_v8dfp7$ = tmp$0;
          }
        },
        resources: {
          get: function () {
            return this.$resources_1wnwrr$;
          },
          set: function (tmp$0) {
            this.$resources_1wnwrr$ = tmp$0;
          }
        }
      }),
      GeneratedAspect_EClass: Kotlin.createTrait(function () {
        return [_.ecore.EClass];
      }, /** @lends _.occi.GeneratedAspect_EClass.prototype */ {
        isInstance: function (_object) {
          throw new Error('Not implemented yet !');
        },
        getEStructuralFeature: function (_featureID) {
          throw new Error('Not implemented yet !');
        },
        getOperationID: function (_operation) {
          throw new Error('Not implemented yet !');
        },
        getEStructuralFeature_1: function (_featureName) {
          throw new Error('Not implemented yet !');
        },
        isSuperTypeOf: function (_someClass) {
          throw new Error('Not implemented yet !');
        },
        getOverride: function (_operation) {
          throw new Error('Not implemented yet !');
        },
        getClassifierID: function () {
          throw new Error('Not implemented yet !');
        },
        getFeatureCount: function () {
          throw new Error('Not implemented yet !');
        },
        getFeatureID: function (_feature) {
          throw new Error('Not implemented yet !');
        },
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        },
        getEOperation: function (_operationID) {
          throw new Error('Not implemented yet !');
        },
        getFeatureType: function (_feature) {
          throw new Error('Not implemented yet !');
        },
        getOperationCount: function () {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EObject: Kotlin.createTrait(function () {
        return [_.ecore.EObject];
      }, /** @lends _.occi.GeneratedAspect_EObject.prototype */ {
        eAllContents: function () {
          throw new Error('Not implemented yet !');
        },
        eIsProxy: function () {
          throw new Error('Not implemented yet !');
        },
        eGet: function (_feature) {
          throw new Error('Not implemented yet !');
        },
        eContents: function () {
          throw new Error('Not implemented yet !');
        },
        eContainmentFeature: function () {
          throw new Error('Not implemented yet !');
        },
        eInvoke: function (_operation, _arguments) {
          throw new Error('Not implemented yet !');
        },
        eClass: function () {
          throw new Error('Not implemented yet !');
        },
        eCrossReferences: function () {
          throw new Error('Not implemented yet !');
        },
        eGet_1: function (_feature, _resolve) {
          throw new Error('Not implemented yet !');
        },
        eUnset: function (_feature) {
          throw new Error('Not implemented yet !');
        },
        eIsSet: function (_feature) {
          throw new Error('Not implemented yet !');
        },
        eContainingFeature: function () {
          throw new Error('Not implemented yet !');
        },
        eResource: function () {
          throw new Error('Not implemented yet !');
        },
        eSet: function (_feature, _newValue) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EParameter: Kotlin.createTrait(function () {
        return [_.ecore.EParameter];
      }, /** @lends _.occi.GeneratedAspect_EParameter.prototype */ {
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EAnnotation: Kotlin.createTrait(function () {
        return [_.ecore.EAnnotation];
      }, /** @lends _.occi.GeneratedAspect_EAnnotation.prototype */ {
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EDataType: Kotlin.createTrait(function () {
        return [_.ecore.EDataType];
      }, /** @lends _.occi.GeneratedAspect_EDataType.prototype */ {
        isInstance: function (_object) {
          throw new Error('Not implemented yet !');
        },
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        },
        getClassifierID: function () {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EEnum: Kotlin.createTrait(function () {
        return [_.ecore.EEnum];
      }, /** @lends _.occi.GeneratedAspect_EEnum.prototype */ {
        getEEnumLiteral_1: function (_name) {
          throw new Error('Not implemented yet !');
        },
        getEEnumLiteral: function (_value) {
          throw new Error('Not implemented yet !');
        },
        getEEnumLiteralByLiteral: function (_literal) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EReference: Kotlin.createTrait(function () {
        return [_.ecore.EReference];
      }, /** @lends _.occi.GeneratedAspect_EReference.prototype */ {
        getFeatureID: function () {
          throw new Error('Not implemented yet !');
        },
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        },
        getContainerClass: function () {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EEnumLiteral: Kotlin.createTrait(function () {
        return [_.ecore.EEnumLiteral];
      }, /** @lends _.occi.GeneratedAspect_EEnumLiteral.prototype */ {
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_ETypeParameter: Kotlin.createTrait(function () {
        return [_.ecore.ETypeParameter];
      }, /** @lends _.occi.GeneratedAspect_ETypeParameter.prototype */ {
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EAttribute: Kotlin.createTrait(function () {
        return [_.ecore.EAttribute];
      }, /** @lends _.occi.GeneratedAspect_EAttribute.prototype */ {
        getFeatureID: function () {
          throw new Error('Not implemented yet !');
        },
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        },
        getContainerClass: function () {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EOperation: Kotlin.createTrait(function () {
        return [_.ecore.EOperation];
      }, /** @lends _.occi.GeneratedAspect_EOperation.prototype */ {
        isOverrideOf: function (_someOperation) {
          throw new Error('Not implemented yet !');
        },
        getOperationID: function () {
          throw new Error('Not implemented yet !');
        },
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EPackage: Kotlin.createTrait(function () {
        return [_.ecore.EPackage];
      }, /** @lends _.occi.GeneratedAspect_EPackage.prototype */ {
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        },
        getEClassifier: function (_name) {
          throw new Error('Not implemented yet !');
        }
      }),
      GeneratedAspect_EFactory: Kotlin.createTrait(function () {
        return [_.ecore.EFactory];
      }, /** @lends _.occi.GeneratedAspect_EFactory.prototype */ {
        getEAnnotation: function (_source) {
          throw new Error('Not implemented yet !');
        },
        createFromString: function (_eDataType, _literalValue) {
          throw new Error('Not implemented yet !');
        },
        create: function (_eClass) {
          throw new Error('Not implemented yet !');
        },
        convertToString: function (_eDataType, _instanceValue) {
          throw new Error('Not implemented yet !');
        }
      }),
      container: Kotlin.definePackage(function () {
        this.cleanCacheVisitor = Kotlin.createObject(function () {
          return [_.org.kevoree.modeling.api.util.ModelVisitor];
        }, function $fun() {
          $fun.baseInitializer.call(this);
        }, {
          visit: function (elem, refNameInParent, parent) {
          },
          endVisitElem: function (elem) {
            elem.path_cache = null;
          }
        });
      }, /** @lends _.occi.container */ {
        KMFContainerImpl: Kotlin.createTrait(function () {
          return [_.org.kevoree.modeling.api.util.InboundRefAware, _.org.kevoree.modeling.api.KMFContainer];
        }, /** @lends _.occi.container.KMFContainerImpl.prototype */ {
          internal_hashcode_ee2ddf$: {
            get: function () {
              return this.$internal_hashcode_ee2ddf$;
            },
            set: function (tmp$0) {
              this.$internal_hashcode_ee2ddf$ = tmp$0;
            }
          },
          hashCode: function () {
            if (this.internal_hashcode_ee2ddf$ == null) {
              this.internal_hashcode_ee2ddf$ = Math.floor(Math.random() * 10000000) + (new Date()).getTime();
            }
            var tmp$0;
            return (tmp$0 = this.internal_hashcode_ee2ddf$) != null ? tmp$0 : Kotlin.throwNPE();
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_hj5huy$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_hj5huy$ = tmp$0;
            }
          },
          isDeleted: function () {
            return this.internal_is_deleted;
          },
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_eqepzm$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_eqepzm$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_h62dwd$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_h62dwd$ = tmp$0;
            }
          },
          eContainer: function () {
            return this.internal_eContainer;
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_4r8cci$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_4r8cci$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_qjkmhv$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_qjkmhv$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_oa3j5c$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_oa3j5c$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_jj9ga9$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_jj9ga9$ = tmp$0;
            }
          },
          addInboundReference: function (path, refName) {
            if (!this.internal_deleteInProgress) {
              _.kotlin.getOrPut_ynyybx$(this.internal_inboundReferences, path, _.occi.container.KMFContainerImpl.addInboundReference$f).add_za3rmp$(refName);
            }
          },
          removeInboundReference: function (path, refName) {
            if (!this.internal_deleteInProgress) {
              var refs = this.internal_inboundReferences.get_za3rmp$(path);
              if (refs != null) {
                if (refs.size() > 1) {
                  refs.remove_za3rmp$(refName);
                }
                 else {
                  this.internal_inboundReferences.remove_za3rmp$(path);
                }
              }
            }
          },
          advertiseInboundRefs: function (action, value) {
            {
              var tmp$0 = this.internal_inboundReferences.keySet().iterator();
              while (tmp$0.hasNext()) {
                var inboundElem = tmp$0.next();
                if (!inboundElem.isDeleted()) {
                  var tmp$1;
                  var refList = (tmp$1 = this.internal_inboundReferences.get_za3rmp$(inboundElem)) != null ? tmp$1 : Kotlin.throwNPE();
                  {
                    var tmp$2 = refList.iterator();
                    while (tmp$2.hasNext()) {
                      var ref = tmp$2.next();
                      inboundElem.reflexiveMutator(action, ref, value, false, true);
                    }
                  }
                }
              }
            }
          },
          setRecursiveReadOnly: function () {
            if (Kotlin.equals(this.internal_recursive_readOnlyElem, true)) {
              return;
            }
            this.setInternalRecursiveReadOnly();
            var recVisitor = _.occi.container.KMFContainerImpl.setRecursiveReadOnly$f();
            this.visit(recVisitor, true, true, true);
            this.setInternalReadOnly();
          },
          setInternalReadOnly: function () {
            this.internal_readOnlyElem = true;
          },
          setInternalRecursiveReadOnly: function () {
            this.internal_recursive_readOnlyElem = true;
          },
          getRefInParent: function () {
            return this.internal_containmentRefName;
          },
          isReadOnly: function () {
            return this.internal_readOnlyElem;
          },
          isRecursiveReadOnly: function () {
            return this.internal_recursive_readOnlyElem;
          },
          setEContainer: function (container, unsetCmd, refNameInParent) {
            if (this.internal_readOnlyElem) {
              return;
            }
            if (Kotlin.equals(this.eContainer(), container)) {
              return;
            }
            this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            var tempUnsetCmd = this.internal_unsetCmd;
            this.internal_unsetCmd = null;
            if (tempUnsetCmd != null) {
              tempUnsetCmd.run();
            }
            this.internal_eContainer = container;
            this.internal_unsetCmd = unsetCmd;
            this.internal_containmentRefName = refNameInParent;
            this.path_cache = null;
          },
          select: function (query) {
            if (Kotlin.equals(this.path(), '/') && query.startsWith('/')) {
              return _.org.kevoree.modeling.api.util.Selector.select(this, query.substring(1));
            }
             else {
              return _.org.kevoree.modeling.api.util.Selector.select(this, query);
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_ms6tuu$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_ms6tuu$ = tmp$0;
            }
          },
          fireModelEvent: function (evt) {
            if (this.internal_modelElementListeners != null) {
              var tmp$0;
              {
                var tmp$1 = ((tmp$0 = this.internal_modelElementListeners) != null ? tmp$0 : Kotlin.throwNPE()).iterator();
                while (tmp$1.hasNext()) {
                  var lst = tmp$1.next();
                  lst.elementChanged(evt);
                }
              }
            }
            this.fireModelEventOnTree(evt);
          },
          addModelElementListener: function (lst) {
            if (this.internal_modelElementListeners == null) {
              this.internal_modelElementListeners = new Kotlin.ArrayList();
            }
            var tmp$0;
            ((tmp$0 = this.internal_modelElementListeners) != null ? tmp$0 : Kotlin.throwNPE()).add_za3rmp$(lst);
          },
          removeModelElementListener: function (lst) {
            if (this.internal_modelElementListeners != null) {
              var tmp$0, tmp$1;
              ((tmp$0 = this.internal_modelElementListeners) != null ? tmp$0 : Kotlin.throwNPE()).remove_za3rmp$(lst);
              if (((tmp$1 = this.internal_modelElementListeners) != null ? tmp$1 : Kotlin.throwNPE()).isEmpty()) {
                this.internal_modelElementListeners = null;
              }
            }
          },
          removeAllModelElementListeners: function () {
            if (this.internal_modelElementListeners != null) {
              var tmp$0;
              ((tmp$0 = this.internal_modelElementListeners) != null ? tmp$0 : Kotlin.throwNPE()).clear();
              this.internal_modelElementListeners = null;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_6oha1i$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_6oha1i$ = tmp$0;
            }
          },
          fireModelEventOnTree: function (evt) {
            if (this.internal_modelTreeListeners != null) {
              var tmp$0;
              {
                var tmp$1 = ((tmp$0 = this.internal_modelTreeListeners) != null ? tmp$0 : Kotlin.throwNPE()).iterator();
                while (tmp$1.hasNext()) {
                  var lst = tmp$1.next();
                  lst.elementChanged(evt);
                }
              }
            }
            if (this.eContainer() != null) {
              var tmp$2;
              ((tmp$2 = this.eContainer()) != null ? tmp$2 : Kotlin.throwNPE()).fireModelEventOnTree(evt);
            }
          },
          addModelTreeListener: function (lst) {
            if (this.internal_modelTreeListeners == null) {
              this.internal_modelTreeListeners = new Kotlin.ArrayList();
            }
            var tmp$0;
            ((tmp$0 = this.internal_modelTreeListeners) != null ? tmp$0 : Kotlin.throwNPE()).add_za3rmp$(lst);
          },
          removeModelTreeListener: function (lst) {
            if (this.internal_modelTreeListeners != null) {
              var tmp$0, tmp$1;
              ((tmp$0 = this.internal_modelTreeListeners) != null ? tmp$0 : Kotlin.throwNPE()).remove_za3rmp$(lst);
              if (((tmp$1 = this.internal_modelTreeListeners) != null ? tmp$1 : Kotlin.throwNPE()).isEmpty()) {
                this.internal_modelTreeListeners = null;
              }
            }
          },
          removeAllModelTreeListeners: function () {
            if (this.internal_modelTreeListeners != null) {
              var tmp$0;
              ((tmp$0 = this.internal_modelTreeListeners) != null ? tmp$0 : Kotlin.throwNPE()).clear();
              this.internal_modelElementListeners = null;
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
          },
          visitAttributes: function (visitor) {
          },
          internal_visit: function (visitor, internalElem, recursive, containedReference, nonContainedReference, refName) {
            if (internalElem != null) {
              if (nonContainedReference && recursive) {
                var elemPath = internalElem.path();
                var tmp$0, tmp$1;
                if (visitor.alreadyVisited != null && ((tmp$0 = visitor.alreadyVisited) != null ? tmp$0 : Kotlin.throwNPE()).containsKey_za3rmp$(elemPath)) {
                  return;
                }
                if (visitor.alreadyVisited == null) {
                  visitor.alreadyVisited = new Kotlin.PrimitiveHashMap();
                }
                ((tmp$1 = visitor.alreadyVisited) != null ? tmp$1 : Kotlin.throwNPE()).put_wn2jw4$(elemPath, internalElem);
              }
              visitor.visit(internalElem, refName, this);
              if (!visitor.visitStopped) {
                if (recursive && (visitor.visitChildren || visitor.visitReferences)) {
                  var visitSubReferences = nonContainedReference && visitor.visitReferences;
                  var visitSubChilds = containedReference && visitor.visitChildren;
                  internalElem.visit(visitor, recursive, visitSubChilds, visitSubReferences);
                }
                visitor.visitChildren = true;
                visitor.visitReferences = true;
              }
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_2iwnmw$;
            },
            set: function (tmp$0) {
              this.$path_cache_2iwnmw$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_d2m6gi$;
            },
            set: function (tmp$0) {
              this.$key_cache_d2m6gi$ = tmp$0;
            }
          },
          isRoot: function () {
            return this.is_root;
          },
          is_root: {
            get: function () {
              return this.$is_root_77j82h$;
            },
            set: function (tmp$0) {
              this.$is_root_77j82h$ = tmp$0;
            }
          },
          path: function () {
            if (this.path_cache != null) {
              var tmp$0;
              return (tmp$0 = this.path_cache) != null ? tmp$0 : Kotlin.throwNPE();
            }
            var container = this.eContainer();
            if (container != null) {
              var parentPath = container.path();
              if (Kotlin.equals(parentPath, '')) {
                var tmp$1;
                this.path_cache = ((tmp$1 = this.internal_containmentRefName) != null ? tmp$1 : Kotlin.throwNPE()) + '[' + this.internalGetKey() + ']';
              }
               else if (Kotlin.equals(parentPath, '/')) {
                var tmp$2;
                this.path_cache = parentPath + ((tmp$2 = this.internal_containmentRefName) != null ? tmp$2 : Kotlin.throwNPE()) + '[' + this.internalGetKey() + ']';
              }
               else {
                var tmp$3;
                this.path_cache = parentPath + '/' + ((tmp$3 = this.internal_containmentRefName) != null ? tmp$3 : Kotlin.throwNPE()) + '[' + this.internalGetKey() + ']';
              }
            }
             else {
              if (this.is_root) {
                this.path_cache = '/';
              }
               else {
                this.path_cache = '';
              }
            }
            var tmp$4;
            return (tmp$4 = this.path_cache) != null ? tmp$4 : Kotlin.throwNPE();
          },
          modelEquals: function (similarObj) {
            if (similarObj == null) {
              return false;
            }
            if (Kotlin.equals(this, similarObj)) {
              return true;
            }
            if (!Kotlin.equals(similarObj.metaClassName(), this.metaClassName())) {
              return false;
            }
            var values = new Kotlin.PrimitiveHashMap();
            var attVisitor = _.occi.container.KMFContainerImpl.modelEquals$f(values);
            this.visitAttributes(attVisitor);
            similarObj.visitAttributes(attVisitor);
            if (!values.isEmpty()) {
              return false;
            }
            var payload = '';
            var refVisitor = _.occi.container.KMFContainerImpl.modelEquals$f_0(values, payload);
            this.visit(refVisitor, false, false, true);
            similarObj.visit(refVisitor, false, false, true);
            if (!values.isEmpty()) {
              return false;
            }
            return true;
          },
          deepModelEquals: function (similarObj) {
            if (!this.modelEquals(similarObj)) {
              return false;
            }
            var similarRoot = similarObj != null ? similarObj : Kotlin.throwNPE();
            while (similarRoot.eContainer() != null) {
              var tmp$0;
              similarRoot = (tmp$0 = similarRoot.eContainer()) != null ? tmp$0 : Kotlin.throwNPE();
            }
            var resultTest = {v: true};
            var finalRoot = similarRoot;
            var objVisitor = _.occi.container.KMFContainerImpl.deepModelEquals$f(finalRoot, resultTest);
            this.visit(objVisitor, true, true, false);
            return resultTest.v;
          },
          findByPath: function (query) {
            if (Kotlin.equals(query, this.path())) {
              return this;
            }
            if (Kotlin.equals(this.path(), '/') && query.startsWith('/')) {
              return this.findByPath(query.substring(1));
            }
            var firstSepIndex = _.js.indexOf_960177$(query, '[');
            if (firstSepIndex === -1) {
              if (query.length === 0) {
                return this;
              }
               else {
                return null;
              }
            }
            var queryID = '';
            var extraReadChar = 2;
            var relationName = query.substring(0, _.js.indexOf_960177$(query, '['));
            if (_.js.indexOf_960177$(query, '{') === firstSepIndex + 1) {
              queryID = query.substring(_.js.indexOf_960177$(query, '{') + 1, _.js.indexOf_960177$(query, '}'));
              extraReadChar = extraReadChar + 2;
            }
             else {
              var indexFirstClose = _.js.indexOf_960177$(query, ']');
              while (indexFirstClose + 1 < query.length && query.charAt(indexFirstClose + 1) !== '/') {
                indexFirstClose = _.js.indexOf_orzsrp$(query, ']', indexFirstClose + 1);
                if (indexFirstClose === -1) {
                  return null;
                }
              }
              queryID = query.substring(_.js.indexOf_960177$(query, '[') + 1, indexFirstClose);
            }
            var subquery = query.substring(relationName.length + queryID.length + extraReadChar, query.length);
            if (_.js.indexOf_960177$(subquery, '/') !== -1) {
              subquery = subquery.substring(_.js.indexOf_960177$(subquery, '/') + 1, subquery.length);
            }
            var objFound = this.findByID(relationName, queryID);
            if (!Kotlin.equals(subquery, '') && objFound != null) {
              return objFound.findByPath(subquery);
            }
             else {
              return objFound;
            }
          },
          createTraces: function (similarObj, isInter, isMerge, onlyReferences, onlyAttributes) {
            var traces = new Kotlin.ArrayList();
            var values = new Kotlin.PrimitiveHashMap();
            if (onlyAttributes) {
              var attVisitorFill = _.occi.container.KMFContainerImpl.createTraces$f(values);
              this.visitAttributes(attVisitorFill);
              var attVisitor = _.occi.container.KMFContainerImpl.createTraces$f_0(values, isInter, traces, this);
              if (similarObj != null) {
                similarObj.visitAttributes(attVisitor);
              }
              if (!isInter && !isMerge && _.kotlin.get_size_1(values) !== 0) {
                {
                  var tmp$0 = values.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var hashLoopRes = tmp$0.next();
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace(this.path(), hashLoopRes, null, null, null));
                  }
                }
              }
            }
            if (onlyReferences) {
              var payload = '';
              var refVisitorFill = _.occi.container.KMFContainerImpl.createTraces$f_1(values, payload);
              this.visit(refVisitorFill, false, false, true);
              var refVisitor = _.occi.container.KMFContainerImpl.createTraces$f_2(values, isInter, traces, this);
              if (similarObj != null) {
                similarObj.visit(refVisitor, false, false, true);
              }
              if (!isInter && !isMerge && _.kotlin.get_size_1(values) !== 0) {
                {
                  var tmp$1 = values.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var hashLoopRes_0 = tmp$1.next();
                    var splittedVal = Kotlin.splitString(hashLoopRes_0, '_');
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelRemoveTrace(this.path(), splittedVal[0], splittedVal[1]));
                  }
                }
              }
            }
            return traces;
          },
          toTraces: function (attributes, references) {
            var traces = new Kotlin.ArrayList();
            if (attributes) {
              var attVisitorFill = _.occi.container.KMFContainerImpl.toTraces$f(traces, this);
              this.visitAttributes(attVisitorFill);
            }
            if (references) {
              var refVisitorFill = _.occi.container.KMFContainerImpl.toTraces$f_0(traces, this);
              this.visit(refVisitorFill, false, true, true);
            }
            return traces;
          },
          visitNotContained: function (visitor) {
            this.visit(visitor, false, false, true);
          },
          visitContained: function (visitor) {
            this.visit(visitor, false, true, false);
          },
          visitReferences: function (visitor) {
            this.visit(visitor, false, true, true);
          },
          deepVisitNotContained: function (visitor) {
            this.visit(visitor, true, false, true);
          },
          deepVisitContained: function (visitor) {
            this.visit(visitor, true, true, false);
          },
          deepVisitReferences: function (visitor) {
            this.visit(visitor, true, true, true);
          }
        }, /** @lends _.occi.container.KMFContainerImpl */ {
          addInboundReference$f: function () {
            return new Kotlin.PrimitiveHashSet();
          },
          setRecursiveReadOnly$f: function () {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelVisitor];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              visit: function (elem, refNameInParent, parent) {
                if (elem.isRecursiveReadOnly()) {
                  this.noChildrenVisit();
                }
                 else {
                  elem.setInternalRecursiveReadOnly();
                  elem.setInternalReadOnly();
                }
              }
            });
          },
          modelEquals$f: function (values) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
            }, null, {
              visit: function (value, name, parent) {
                if (values.containsKey_za3rmp$(name)) {
                  if (Kotlin.equals(values.get_za3rmp$(name), value != null ? value.toString() : null)) {
                    values.remove_za3rmp$(name);
                  }
                }
                 else {
                  values.put_wn2jw4$(name, value != null ? value.toString() : null);
                }
              }
            });
          },
          modelEquals$f_0: function (values, payload) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelVisitor];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              visit: function (elem, refNameInParent, parent) {
                var concatedKey = refNameInParent + '_' + elem.path();
                if (values.containsKey_za3rmp$(concatedKey)) {
                  values.remove_za3rmp$(concatedKey);
                }
                 else {
                  values.put_wn2jw4$(concatedKey, payload);
                }
              }
            });
          },
          deepModelEquals$f: function (finalRoot, resultTest) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelVisitor];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              visit: function (elem, refNameInParent, parent) {
                var similarSubObj = finalRoot.findByPath(elem.path());
                if (!elem.modelEquals(similarSubObj)) {
                  resultTest.v = false;
                  this.stopVisit();
                }
              }
            });
          },
          createTraces$f: function (values) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
            }, null, {
              visit: function (value, name, parent) {
                values.put_wn2jw4$(name, _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(value));
              }
            });
          },
          createTraces$f_0: function (values, isInter, traces, this$KMFContainerImpl) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
            }, null, {
              visit: function (value, name, parent) {
                var attVal2 = _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(value);
                if (Kotlin.equals(values.get_za3rmp$(name), attVal2)) {
                  if (isInter) {
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace(this$KMFContainerImpl.path(), name, null, attVal2, null));
                  }
                }
                 else {
                  if (!isInter) {
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace(this$KMFContainerImpl.path(), name, null, attVal2, null));
                  }
                }
                values.remove_za3rmp$(name);
              }
            });
          },
          createTraces$f_1: function (values, payload) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelVisitor];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              visit: function (elem, refNameInParent, parent) {
                var concatedKey = refNameInParent + '_' + elem.path();
                values.put_wn2jw4$(concatedKey, payload);
              }
            });
          },
          createTraces$f_2: function (values, isInter, traces, this$KMFContainerImpl) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelVisitor];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              visit: function (elem, refNameInParent, parent) {
                var concatedKey = refNameInParent + '_' + elem.path();
                if (values.get_za3rmp$(concatedKey) != null) {
                  if (isInter) {
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(this$KMFContainerImpl.path(), refNameInParent, elem.path(), null));
                  }
                }
                 else {
                  if (!isInter) {
                    traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(this$KMFContainerImpl.path(), refNameInParent, elem.path(), null));
                  }
                }
                values.remove_za3rmp$(concatedKey);
              }
            });
          },
          toTraces$f: function (traces, this$KMFContainerImpl) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelAttributeVisitor];
            }, null, {
              visit: function (value, name, parent) {
                traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelSetTrace(this$KMFContainerImpl.path(), name, null, _.org.kevoree.modeling.api.util.AttConverter.convFlatAtt(value), null));
              }
            });
          },
          toTraces$f_0: function (traces, this$KMFContainerImpl) {
            return Kotlin.createObject(function () {
              return [_.org.kevoree.modeling.api.util.ModelVisitor];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              visit: function (elem, refNameInParent, parent) {
                traces.add_za3rmp$(new _.org.kevoree.modeling.api.trace.ModelAddTrace(this$KMFContainerImpl.path(), refNameInParent, elem.path(), null));
              }
            });
          }
        }),
        RemoveFromContainerCommand: Kotlin.createClass(null, function (target, mutatorType, refName, element) {
          this.target = target;
          this.mutatorType = mutatorType;
          this.refName = refName;
          this.element = element;
        }, /** @lends _.occi.container.RemoveFromContainerCommand.prototype */ {
          run: function () {
            if (!this.target.isDeleted()) {
              this.target.reflexiveMutator(this.mutatorType, this.refName, this.element, true, true);
            }
          }
        })
      }),
      impl: Kotlin.definePackage(null, /** @lends _.occi.impl */ {
        MixinImpl: Kotlin.createClass(function () {
          return [_.occi.Mixin, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_p74idl$ = null;
          this.$internal_containmentRefName_tb2xzb$ = null;
          this.$internal_unsetCmd_7v6pp0$ = null;
          this.$internal_readOnlyElem_ebyfys$ = false;
          this.$internal_recursive_readOnlyElem_j58amx$ = false;
          this.$internal_inboundReferences_cfvlqy$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_sowty0$ = false;
          this.$internal_is_deleted_rzva8x$ = false;
          this.$is_root_wr9ouo$ = false;
          this.$internal_modelElementListeners_wu73nz$ = null;
          this.$internal_modelTreeListeners_rdu0ab$ = null;
          this.$path_cache_crj9w1$ = null;
          this.$key_cache_x30wp1$ = null;
          this.$term_eyf3sj$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$scheme_o25gto$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$title_xkpirz$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_s8ar03$ = '' + Math.random() + (new Date()).getTime();
          this._applies = new _.java.util.concurrent.ConcurrentHashMap();
          this._depends = new _.java.util.concurrent.ConcurrentHashMap();
          this._entities = new _.java.util.concurrent.ConcurrentHashMap();
          this._attributes = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllAttributesCurrentlyProcessing = false;
          this._actions = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllActionsCurrentlyProcessing = false;
        }, /** @lends _.occi.impl.MixinImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_p74idl$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_p74idl$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_tb2xzb$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_tb2xzb$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_7v6pp0$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_7v6pp0$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_ebyfys$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_ebyfys$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_j58amx$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_j58amx$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_cfvlqy$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_cfvlqy$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_sowty0$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_sowty0$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_rzva8x$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_rzva8x$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_wr9ouo$;
            },
            set: function (tmp$0) {
              this.$is_root_wr9ouo$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_wu73nz$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_wu73nz$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_rdu0ab$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_rdu0ab$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_crj9w1$;
            },
            set: function (tmp$0) {
              this.$path_cache_crj9w1$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_x30wp1$;
            },
            set: function (tmp$0) {
              this.$key_cache_x30wp1$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.attributes.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            {
              var tmp$1 = this.actions.iterator();
              while (tmp$1.hasNext()) {
                var el_0 = tmp$1.next();
                el_0.delete();
              }
            }
            this.removeAllDepends();
            this.removeAllApplies();
            this.removeAllEntities();
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$2;
              ((tmp$2 = this.internal_unsetCmd) != null ? tmp$2 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withTerm: function (p) {
            this.term = p;
            return this;
          },
          term: {
            get: function () {
              return this.$term_eyf3sj$;
            },
            set: function (iP) {
              this.internal_term(iP, true);
            }
          },
          internal_term: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.term)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$term_eyf3sj$;
              this.$term_eyf3sj$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_term, this.term, kmf_previousVal, this, oldPath));
              }
            }
          },
          withScheme: function (p) {
            this.scheme = p;
            return this;
          },
          scheme: {
            get: function () {
              return this.$scheme_o25gto$;
            },
            set: function (iP) {
              this.internal_scheme(iP, true);
            }
          },
          internal_scheme: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.scheme)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$scheme_o25gto$;
              this.$scheme_o25gto$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_scheme, this.scheme, kmf_previousVal, this, oldPath));
              }
            }
          },
          withTitle: function (p) {
            this.title = p;
            return this;
          },
          title: {
            get: function () {
              return this.$title_xkpirz$;
            },
            set: function (iP) {
              this.internal_title(iP, true);
            }
          },
          internal_title: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.title)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$title_xkpirz$;
              this.$title_xkpirz$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_title, this.title, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_s8ar03$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_s8ar03$;
              this.$generated_KMF_ID_s8ar03$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          applies: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._applies.values());
            },
            set: function (appliesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (appliesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_applies(appliesP, true, true);
            }
          },
          internal_applies: function (appliesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._applies.values(), appliesP)) {
              var kmf_previousVal = this._applies;
              this._applies.clear();
              {
                var tmp$0 = appliesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._applies.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_applies);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_applies, appliesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddApplies: function (appliesP) {
            var _key_ = appliesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._applies.containsKey_za3rmp$(_key_)) {
              this._applies.put_wn2jw4$(_key_, appliesP);
              appliesP.addInboundReference(this, _.occi.util.Constants.Ref_applies);
            }
          },
          addApplies: function (appliesP) {
            this.internal_addApplies(appliesP, true, true);
            return this;
          },
          addAllApplies: function (appliesP) {
            this.internal_addAllApplies(appliesP, true, true);
            return this;
          },
          internal_addApplies: function (appliesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddApplies(appliesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_applies, appliesP, null, this, this.path()));
            }
          },
          internal_addAllApplies: function (appliesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = appliesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddApplies(el);
                }
              }
            }
             else {
              {
                var tmp$1 = appliesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddApplies(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_applies, appliesP, null, this, this.path()));
            }
          },
          removeApplies: function (appliesP) {
            this.internal_removeApplies(appliesP, true, true);
            return this;
          },
          removeAllApplies: function () {
            this.internal_removeAllApplies(true, true);
            return this;
          },
          internal_removeApplies: function (appliesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._applies.size() !== 0 && this._applies.containsKey_za3rmp$(appliesP.internalGetKey())) {
              var previousPathToBeRemoved = appliesP.path();
              this._applies.remove_za3rmp$(appliesP.internalGetKey());
              appliesP.removeInboundReference(this, _.occi.util.Constants.Ref_applies);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_applies, appliesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllApplies: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.applies;
            this._applies.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_applies, temp_els, null, this, this.path()));
            }
          },
          depends: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._depends.values());
            },
            set: function (dependsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (dependsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_depends(dependsP, true, true);
            }
          },
          internal_depends: function (dependsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._depends.values(), dependsP)) {
              var kmf_previousVal = this._depends;
              this._depends.clear();
              {
                var tmp$0 = dependsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._depends.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_depends);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_depends, dependsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddDepends: function (dependsP) {
            var _key_ = dependsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._depends.containsKey_za3rmp$(_key_)) {
              this._depends.put_wn2jw4$(_key_, dependsP);
              dependsP.addInboundReference(this, _.occi.util.Constants.Ref_depends);
            }
          },
          addDepends: function (dependsP) {
            this.internal_addDepends(dependsP, true, true);
            return this;
          },
          addAllDepends: function (dependsP) {
            this.internal_addAllDepends(dependsP, true, true);
            return this;
          },
          internal_addDepends: function (dependsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddDepends(dependsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_depends, dependsP, null, this, this.path()));
            }
          },
          internal_addAllDepends: function (dependsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = dependsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddDepends(el);
                }
              }
            }
             else {
              {
                var tmp$1 = dependsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddDepends(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_depends, dependsP, null, this, this.path()));
            }
          },
          removeDepends: function (dependsP) {
            this.internal_removeDepends(dependsP, true, true);
            return this;
          },
          removeAllDepends: function () {
            this.internal_removeAllDepends(true, true);
            return this;
          },
          internal_removeDepends: function (dependsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._depends.size() !== 0 && this._depends.containsKey_za3rmp$(dependsP.internalGetKey())) {
              var previousPathToBeRemoved = dependsP.path();
              this._depends.remove_za3rmp$(dependsP.internalGetKey());
              dependsP.removeInboundReference(this, _.occi.util.Constants.Ref_depends);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_depends, dependsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllDepends: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.depends;
            this._depends.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_depends, temp_els, null, this, this.path()));
            }
          },
          entities: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._entities.values());
            },
            set: function (entitiesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (entitiesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_entities(entitiesP, true, true);
            }
          },
          internal_entities: function (entitiesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._entities.values(), entitiesP)) {
              var kmf_previousVal = this._entities;
              this._entities.clear();
              {
                var tmp$0 = entitiesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._entities.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_entities);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEntities: function (entitiesP) {
            var _key_ = entitiesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._entities.containsKey_za3rmp$(_key_)) {
              this._entities.put_wn2jw4$(_key_, entitiesP);
              entitiesP.addInboundReference(this, _.occi.util.Constants.Ref_entities);
            }
          },
          addEntities: function (entitiesP) {
            this.internal_addEntities(entitiesP, true, true);
            return this;
          },
          addAllEntities: function (entitiesP) {
            this.internal_addAllEntities(entitiesP, true, true);
            return this;
          },
          internal_addEntities: function (entitiesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEntities(entitiesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, null, this, this.path()));
            }
          },
          internal_addAllEntities: function (entitiesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = entitiesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEntities(el);
                }
              }
            }
             else {
              {
                var tmp$1 = entitiesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEntities(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, null, this, this.path()));
            }
          },
          removeEntities: function (entitiesP) {
            this.internal_removeEntities(entitiesP, true, true);
            return this;
          },
          removeAllEntities: function () {
            this.internal_removeAllEntities(true, true);
            return this;
          },
          internal_removeEntities: function (entitiesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._entities.size() !== 0 && this._entities.containsKey_za3rmp$(entitiesP.internalGetKey())) {
              var previousPathToBeRemoved = entitiesP.path();
              this._entities.remove_za3rmp$(entitiesP.internalGetKey());
              entitiesP.removeInboundReference(this, _.occi.util.Constants.Ref_entities);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEntities: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.entities;
            this._entities.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, temp_els, null, this, this.path()));
            }
          },
          attributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._attributes.values());
            },
            set: function (attributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (attributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_attributes(attributesP, true, true);
            }
          },
          internal_attributes: function (attributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._attributes.values(), attributesP)) {
              var kmf_previousVal = this._attributes;
              this._attributes.clear();
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._attributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, el), _.occi.util.Constants.Ref_attributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddAttributes: function (attributesP) {
            var _key_ = attributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._attributes.containsKey_za3rmp$(_key_)) {
              this._attributes.put_wn2jw4$(_key_, attributesP);
              attributesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, attributesP), _.occi.util.Constants.Ref_attributes);
              attributesP.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
            }
          },
          addAttributes: function (attributesP) {
            this.internal_addAttributes(attributesP, true, true);
            return this;
          },
          addAllAttributes: function (attributesP) {
            this.internal_addAllAttributes(attributesP, true, true);
            return this;
          },
          internal_addAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddAttributes(attributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          internal_addAllAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = attributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          removeAttributes: function (attributesP) {
            this.internal_removeAttributes(attributesP, true, true);
            return this;
          },
          removeAllAttributes: function () {
            this.internal_removeAllAttributes(true, true);
            return this;
          },
          internal_removeAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(attributesP.internalGetKey())) {
              var previousPathToBeRemoved = attributesP.path();
              this._attributes.remove_za3rmp$(attributesP.internalGetKey());
              attributesP.removeInboundReference(this, _.occi.util.Constants.Ref_attributes);
              attributesP.setEContainer(null, null, null);
              if (!this.removeAllAttributesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllAttributesCurrentlyProcessing = true;
            }
            var temp_els = this.attributes;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._attributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, temp_els, null, this, this.path()));
              this.removeAllAttributesCurrentlyProcessing = false;
            }
          },
          actions: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._actions.values());
            },
            set: function (actionsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (actionsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_actions(actionsP, true, true);
            }
          },
          internal_actions: function (actionsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._actions.values(), actionsP)) {
              var kmf_previousVal = this._actions;
              this._actions.clear();
              {
                var tmp$0 = actionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._actions.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_actions);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_actions, el), _.occi.util.Constants.Ref_actions);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddActions: function (actionsP) {
            var _key_ = actionsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._actions.containsKey_za3rmp$(_key_)) {
              this._actions.put_wn2jw4$(_key_, actionsP);
              actionsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_actions, actionsP), _.occi.util.Constants.Ref_actions);
              actionsP.addInboundReference(this, _.occi.util.Constants.Ref_actions);
            }
          },
          addActions: function (actionsP) {
            this.internal_addActions(actionsP, true, true);
            return this;
          },
          addAllActions: function (actionsP) {
            this.internal_addAllActions(actionsP, true, true);
            return this;
          },
          internal_addActions: function (actionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddActions(actionsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, null, this, this.path()));
            }
          },
          internal_addAllActions: function (actionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = actionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddActions(el);
                }
              }
            }
             else {
              {
                var tmp$1 = actionsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddActions(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, null, this, this.path()));
            }
          },
          removeActions: function (actionsP) {
            this.internal_removeActions(actionsP, true, true);
            return this;
          },
          removeAllActions: function () {
            this.internal_removeAllActions(true, true);
            return this;
          },
          internal_removeActions: function (actionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._actions.size() !== 0 && this._actions.containsKey_za3rmp$(actionsP.internalGetKey())) {
              var previousPathToBeRemoved = actionsP.path();
              this._actions.remove_za3rmp$(actionsP.internalGetKey());
              actionsP.removeInboundReference(this, _.occi.util.Constants.Ref_actions);
              actionsP.setEContainer(null, null, null);
              if (!this.removeAllActionsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllActions: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllActionsCurrentlyProcessing = true;
            }
            var temp_els = this.actions;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._actions.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, temp_els, null, this, this.path()));
              this.removeAllActionsCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_term) {
                this.internal_term(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_scheme) {
                this.internal_scheme(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_title) {
                this.internal_title(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_attributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(value)) {
                      var obj = this._attributes.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._attributes.remove_za3rmp$(value);
                      this._attributes.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_actions) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addActions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllActions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeActions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllActions();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._actions.size() !== 0 && this._actions.containsKey_za3rmp$(value)) {
                      var obj_0 = this._actions.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._actions.remove_za3rmp$(value);
                      this._actions.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_depends) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addDepends(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllDepends(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeDepends(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllDepends();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._depends.size() !== 0 && this._depends.containsKey_za3rmp$(value)) {
                      var obj_1 = this._depends.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._depends.remove_za3rmp$(value);
                      this._depends.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_applies) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addApplies(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllApplies(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeApplies(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllApplies();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._applies.size() !== 0 && this._applies.containsKey_za3rmp$(value)) {
                      var obj_2 = this._applies.get_za3rmp$(value);
                      var objNewKey_2 = (obj_2 != null ? obj_2 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_2 == null) {
                        throw new Error('Key newed to null ' + obj_2);
                      }
                      this._applies.remove_za3rmp$(value);
                      this._applies.put_wn2jw4$(objNewKey_2, obj_2);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_entities) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEntities(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEntities(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEntities(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEntities();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._entities.size() !== 0 && this._entities.containsKey_za3rmp$(value)) {
                      var obj_3 = this._entities.get_za3rmp$(value);
                      var objNewKey_3 = (obj_3 != null ? obj_3 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_3 == null) {
                        throw new Error('Key newed to null ' + obj_3);
                      }
                      this._entities.remove_za3rmp$(value);
                      this._entities.put_wn2jw4$(objNewKey_3, obj_3);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findAttributesByID: function (key) {
            return this._attributes.get_za3rmp$(key);
          },
          findActionsByID: function (key) {
            return this._actions.get_za3rmp$(key);
          },
          findDependsByID: function (key) {
            return this._depends.get_za3rmp$(key);
          },
          findAppliesByID: function (key) {
            return this._applies.get_za3rmp$(key);
          },
          findEntitiesByID: function (key) {
            return this._entities.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_attributes) {
                return this.findAttributesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_actions) {
                return this.findActionsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_depends) {
                return this.findDependsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_applies) {
                return this.findAppliesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_entities) {
                return this.findEntitiesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_attributes, _.occi.util.Constants.occi_Attribute)) {
                {
                  var tmp$0 = this._attributes.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._attributes.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_attributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_attributes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_actions, _.occi.util.Constants.occi_Action)) {
                {
                  var tmp$1 = this._actions.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._actions.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_actions);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_actions);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_depends, _.occi.util.Constants.occi_Mixin)) {
                {
                  var tmp$2 = this._depends.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._depends.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_depends);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_depends);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_applies, _.occi.util.Constants.occi_Kind)) {
                {
                  var tmp$3 = this._applies.keySet().iterator();
                  while (tmp$3.hasNext()) {
                    var KMFLoopEntryKey_2 = tmp$3.next();
                    this.internal_visit(visitor, this._applies.get_za3rmp$(KMFLoopEntryKey_2), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_applies);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_applies);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_entities, _.occi.util.Constants.occi_Entity)) {
                {
                  var tmp$4 = this._entities.keySet().iterator();
                  while (tmp$4.hasNext()) {
                    var KMFLoopEntryKey_3 = tmp$4.next();
                    this.internal_visit(visitor, this._entities.get_za3rmp$(KMFLoopEntryKey_3), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_entities);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_entities);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.scheme, _.occi.util.Constants.Att_scheme, this);
            visitor.visit(this.term, _.occi.util.Constants.Att_term, this);
            visitor.visit(this.title, _.occi.util.Constants.Att_title, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Mixin;
          }
        }),
        ActionImpl: Kotlin.createClass(function () {
          return [_.occi.Action, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_h0p61s$ = null;
          this.$internal_containmentRefName_wypdao$ = null;
          this.$internal_unsetCmd_7w9kkr$ = null;
          this.$internal_readOnlyElem_240pt7$ = false;
          this.$internal_recursive_readOnlyElem_hu08fy$ = false;
          this.$internal_inboundReferences_hmmqe5$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_4i7nj$ = false;
          this.$internal_is_deleted_e7ye6g$ = false;
          this.$is_root_vxpobd$ = false;
          this.$internal_modelElementListeners_bsly5k$ = null;
          this.$internal_modelTreeListeners_yvyazo$ = null;
          this.$path_cache_39hd7q$ = null;
          this.$key_cache_e8if6k$ = null;
          this.$term_o7pjje$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$scheme_suf40t$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$title_up66jq$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_5bgi2k$ = '' + Math.random() + (new Date()).getTime();
          this._attributes = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllAttributesCurrentlyProcessing = false;
        }, /** @lends _.occi.impl.ActionImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_h0p61s$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_h0p61s$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_wypdao$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_wypdao$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_7w9kkr$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_7w9kkr$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_240pt7$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_240pt7$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_hu08fy$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_hu08fy$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_hmmqe5$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_hmmqe5$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_4i7nj$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_4i7nj$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_e7ye6g$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_e7ye6g$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_vxpobd$;
            },
            set: function (tmp$0) {
              this.$is_root_vxpobd$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_bsly5k$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_bsly5k$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_yvyazo$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_yvyazo$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_39hd7q$;
            },
            set: function (tmp$0) {
              this.$path_cache_39hd7q$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_e8if6k$;
            },
            set: function (tmp$0) {
              this.$key_cache_e8if6k$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.attributes.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$1;
              ((tmp$1 = this.internal_unsetCmd) != null ? tmp$1 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withTerm: function (p) {
            this.term = p;
            return this;
          },
          term: {
            get: function () {
              return this.$term_o7pjje$;
            },
            set: function (iP) {
              this.internal_term(iP, true);
            }
          },
          internal_term: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.term)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$term_o7pjje$;
              this.$term_o7pjje$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_term, this.term, kmf_previousVal, this, oldPath));
              }
            }
          },
          withScheme: function (p) {
            this.scheme = p;
            return this;
          },
          scheme: {
            get: function () {
              return this.$scheme_suf40t$;
            },
            set: function (iP) {
              this.internal_scheme(iP, true);
            }
          },
          internal_scheme: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.scheme)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$scheme_suf40t$;
              this.$scheme_suf40t$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_scheme, this.scheme, kmf_previousVal, this, oldPath));
              }
            }
          },
          withTitle: function (p) {
            this.title = p;
            return this;
          },
          title: {
            get: function () {
              return this.$title_up66jq$;
            },
            set: function (iP) {
              this.internal_title(iP, true);
            }
          },
          internal_title: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.title)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$title_up66jq$;
              this.$title_up66jq$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_title, this.title, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_5bgi2k$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_5bgi2k$;
              this.$generated_KMF_ID_5bgi2k$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          attributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._attributes.values());
            },
            set: function (attributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (attributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_attributes(attributesP, true, true);
            }
          },
          internal_attributes: function (attributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._attributes.values(), attributesP)) {
              var kmf_previousVal = this._attributes;
              this._attributes.clear();
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._attributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, el), _.occi.util.Constants.Ref_attributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddAttributes: function (attributesP) {
            var _key_ = attributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._attributes.containsKey_za3rmp$(_key_)) {
              this._attributes.put_wn2jw4$(_key_, attributesP);
              attributesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, attributesP), _.occi.util.Constants.Ref_attributes);
              attributesP.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
            }
          },
          addAttributes: function (attributesP) {
            this.internal_addAttributes(attributesP, true, true);
            return this;
          },
          addAllAttributes: function (attributesP) {
            this.internal_addAllAttributes(attributesP, true, true);
            return this;
          },
          internal_addAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddAttributes(attributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          internal_addAllAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = attributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          removeAttributes: function (attributesP) {
            this.internal_removeAttributes(attributesP, true, true);
            return this;
          },
          removeAllAttributes: function () {
            this.internal_removeAllAttributes(true, true);
            return this;
          },
          internal_removeAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(attributesP.internalGetKey())) {
              var previousPathToBeRemoved = attributesP.path();
              this._attributes.remove_za3rmp$(attributesP.internalGetKey());
              attributesP.removeInboundReference(this, _.occi.util.Constants.Ref_attributes);
              attributesP.setEContainer(null, null, null);
              if (!this.removeAllAttributesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllAttributesCurrentlyProcessing = true;
            }
            var temp_els = this.attributes;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._attributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, temp_els, null, this, this.path()));
              this.removeAllAttributesCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_term) {
                this.internal_term(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_scheme) {
                this.internal_scheme(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_title) {
                this.internal_title(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_attributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(value)) {
                      var obj = this._attributes.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._attributes.remove_za3rmp$(value);
                      this._attributes.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findAttributesByID: function (key) {
            return this._attributes.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_attributes) {
                return this.findAttributesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_attributes, _.occi.util.Constants.occi_Attribute)) {
                {
                  var tmp$0 = this._attributes.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._attributes.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_attributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_attributes);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.scheme, _.occi.util.Constants.Att_scheme, this);
            visitor.visit(this.term, _.occi.util.Constants.Att_term, this);
            visitor.visit(this.title, _.occi.util.Constants.Att_title, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Action;
          }
        }),
        AttributeImpl: Kotlin.createClass(function () {
          return [_.occi.Attribute, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_4bqexe$ = null;
          this.$internal_containmentRefName_mtycm6$ = null;
          this.$internal_unsetCmd_jvr2vb$ = null;
          this.$internal_readOnlyElem_grmps7$ = false;
          this.$internal_recursive_readOnlyElem_fq17jo$ = false;
          this.$internal_inboundReferences_di34l$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_d1if03$ = false;
          this.$internal_is_deleted_1izn22$ = false;
          this.$is_root_a197yj$ = false;
          this.$internal_modelElementListeners_sd72h6$ = null;
          this.$internal_modelTreeListeners_or7ab6$ = null;
          this.$path_cache_n1pygk$ = null;
          this.$key_cache_yip8wm$ = null;
          this.$name_50orbr$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$mutable_10xwdi$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$required_ieso6j$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$default_15az1x$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$description_ib3auo$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$multiple_values_ox9e5h$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$generated_KMF_ID_4qr0cy$ = '' + Math.random() + (new Date()).getTime();
          this.$type_50t346$ = null;
        }, /** @lends _.occi.impl.AttributeImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_4bqexe$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_4bqexe$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_mtycm6$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_mtycm6$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_jvr2vb$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_jvr2vb$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_grmps7$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_grmps7$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_fq17jo$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_fq17jo$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_di34l$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_di34l$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_d1if03$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_d1if03$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_1izn22$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_1izn22$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_a197yj$;
            },
            set: function (tmp$0) {
              this.$is_root_a197yj$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_sd72h6$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_sd72h6$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_or7ab6$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_or7ab6$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_n1pygk$;
            },
            set: function (tmp$0) {
              this.$path_cache_n1pygk$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_yip8wm$;
            },
            set: function (tmp$0) {
              this.$key_cache_yip8wm$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            if (this.type != null) {
              var tmp$0;
              ((tmp$0 = this.type) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_type);
              this.type = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$1;
              ((tmp$1 = this.internal_unsetCmd) != null ? tmp$1 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_50orbr$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_50orbr$;
              this.$name_50orbr$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withMutable: function (p) {
            this.mutable = p;
            return this;
          },
          mutable: {
            get: function () {
              return this.$mutable_10xwdi$;
            },
            set: function (iP) {
              this.internal_mutable(iP, true);
            }
          },
          internal_mutable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.mutable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$mutable_10xwdi$;
              this.$mutable_10xwdi$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_mutable, this.mutable, kmf_previousVal, this, oldPath));
              }
            }
          },
          withRequired: function (p) {
            this.required = p;
            return this;
          },
          required: {
            get: function () {
              return this.$required_ieso6j$;
            },
            set: function (iP) {
              this.internal_required(iP, true);
            }
          },
          internal_required: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.required)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$required_ieso6j$;
              this.$required_ieso6j$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_required, this.required, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefault: function (p) {
            this.default = p;
            return this;
          },
          default: {
            get: function () {
              return this.$default_15az1x$;
            },
            set: function (iP) {
              this.internal_default(iP, true);
            }
          },
          internal_default: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.default)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$default_15az1x$;
              this.$default_15az1x$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_default, this.default, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDescription: function (p) {
            this.description = p;
            return this;
          },
          description: {
            get: function () {
              return this.$description_ib3auo$;
            },
            set: function (iP) {
              this.internal_description(iP, true);
            }
          },
          internal_description: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.description)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$description_ib3auo$;
              this.$description_ib3auo$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_description, this.description, kmf_previousVal, this, oldPath));
              }
            }
          },
          withMultiple_values: function (p) {
            this.multiple_values = p;
            return this;
          },
          multiple_values: {
            get: function () {
              return this.$multiple_values_ox9e5h$;
            },
            set: function (iP) {
              this.internal_multiple_values(iP, true);
            }
          },
          internal_multiple_values: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.multiple_values)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$multiple_values_ox9e5h$;
              this.$multiple_values_ox9e5h$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_multiple_values, this.multiple_values, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_4qr0cy$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_4qr0cy$;
              this.$generated_KMF_ID_4qr0cy$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          type: {
            get: function () {
              return this.$type_50t346$;
            },
            set: function (typeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_type(typeP, true, true);
            }
          },
          internal_type: function (typeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$type_50t346$, typeP)) {
              var kmf_previousVal = this.$type_50t346$;
              if (typeP != null) {
                (typeP != null ? typeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_type);
              }
               else {
                if (this.$type_50t346$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$type_50t346$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_type);
                }
              }
              this.$type_50t346$ = typeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_type, typeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withType: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_mutable) {
                this.internal_mutable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_required) {
                this.internal_required(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_default) {
                this.internal_default(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_description) {
                this.internal_description(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_multiple_values) {
                this.internal_multiple_values(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_type) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_type(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_type(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_type(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_type) {
                var objFound = this.type;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_type, _.occi.util.Constants.ecore_EDataType)) {
                this.internal_visit(visitor, this.type, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_type);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_type);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.default, _.occi.util.Constants.Att_default, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.mutable, _.occi.util.Constants.Att_mutable, this);
            visitor.visit(this.multiple_values, _.occi.util.Constants.Att_multiple_values, this);
            visitor.visit(this.description, _.occi.util.Constants.Att_description, this);
            visitor.visit(this.required, _.occi.util.Constants.Att_required, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Attribute;
          }
        }),
        ConfigurationImpl: Kotlin.createClass(function () {
          return [_.occi.Configuration, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_vv1cvg$ = null;
          this.$internal_containmentRefName_y3rjek$ = null;
          this.$internal_unsetCmd_74g7j5$ = null;
          this.$internal_readOnlyElem_fg9kwv$ = false;
          this.$internal_recursive_readOnlyElem_a1lxam$ = false;
          this.$internal_inboundReferences_wwp0q7$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_pqnmfh$ = false;
          this.$internal_is_deleted_t2al04$ = false;
          this.$is_root_l3fvvf$ = false;
          this.$internal_modelElementListeners_o5f6sc$ = null;
          this.$internal_modelTreeListeners_w6ilpk$ = null;
          this.$path_cache_5nzkrq$ = null;
          this.$key_cache_m4x25s$ = null;
          this.$generated_KMF_ID_4u0knc$ = '' + Math.random() + (new Date()).getTime();
          this._use = new _.java.util.concurrent.ConcurrentHashMap();
          this._resources = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllResourcesCurrentlyProcessing = false;
        }, /** @lends _.occi.impl.ConfigurationImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_vv1cvg$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_vv1cvg$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_y3rjek$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_y3rjek$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_74g7j5$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_74g7j5$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_fg9kwv$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_fg9kwv$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_a1lxam$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_a1lxam$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_wwp0q7$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_wwp0q7$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_pqnmfh$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_pqnmfh$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_t2al04$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_t2al04$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_l3fvvf$;
            },
            set: function (tmp$0) {
              this.$is_root_l3fvvf$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_o5f6sc$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_o5f6sc$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_w6ilpk$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_w6ilpk$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_5nzkrq$;
            },
            set: function (tmp$0) {
              this.$path_cache_5nzkrq$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_m4x25s$;
            },
            set: function (tmp$0) {
              this.$key_cache_m4x25s$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            this.removeAllUse();
            {
              var tmp$0 = this.resources.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$1;
              ((tmp$1 = this.internal_unsetCmd) != null ? tmp$1 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_4u0knc$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_4u0knc$;
              this.$generated_KMF_ID_4u0knc$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          use: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._use.values());
            },
            set: function (useP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (useP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_use(useP, true, true);
            }
          },
          internal_use: function (useP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._use.values(), useP)) {
              var kmf_previousVal = this._use;
              this._use.clear();
              {
                var tmp$0 = useP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._use.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_use);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_use, useP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddUse: function (useP) {
            var _key_ = useP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._use.containsKey_za3rmp$(_key_)) {
              this._use.put_wn2jw4$(_key_, useP);
              useP.addInboundReference(this, _.occi.util.Constants.Ref_use);
            }
          },
          addUse: function (useP) {
            this.internal_addUse(useP, true, true);
            return this;
          },
          addAllUse: function (useP) {
            this.internal_addAllUse(useP, true, true);
            return this;
          },
          internal_addUse: function (useP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddUse(useP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_use, useP, null, this, this.path()));
            }
          },
          internal_addAllUse: function (useP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = useP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddUse(el);
                }
              }
            }
             else {
              {
                var tmp$1 = useP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddUse(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_use, useP, null, this, this.path()));
            }
          },
          removeUse: function (useP) {
            this.internal_removeUse(useP, true, true);
            return this;
          },
          removeAllUse: function () {
            this.internal_removeAllUse(true, true);
            return this;
          },
          internal_removeUse: function (useP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._use.size() !== 0 && this._use.containsKey_za3rmp$(useP.internalGetKey())) {
              var previousPathToBeRemoved = useP.path();
              this._use.remove_za3rmp$(useP.internalGetKey());
              useP.removeInboundReference(this, _.occi.util.Constants.Ref_use);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_use, useP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllUse: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.use;
            this._use.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_use, temp_els, null, this, this.path()));
            }
          },
          resources: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._resources.values());
            },
            set: function (resourcesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (resourcesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_resources(resourcesP, true, true);
            }
          },
          internal_resources: function (resourcesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._resources.values(), resourcesP)) {
              var kmf_previousVal = this._resources;
              this._resources.clear();
              {
                var tmp$0 = resourcesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._resources.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_resources);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_resources, el), _.occi.util.Constants.Ref_resources);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_resources, resourcesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddResources: function (resourcesP) {
            var _key_ = resourcesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._resources.containsKey_za3rmp$(_key_)) {
              this._resources.put_wn2jw4$(_key_, resourcesP);
              resourcesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_resources, resourcesP), _.occi.util.Constants.Ref_resources);
              resourcesP.addInboundReference(this, _.occi.util.Constants.Ref_resources);
            }
          },
          addResources: function (resourcesP) {
            this.internal_addResources(resourcesP, true, true);
            return this;
          },
          addAllResources: function (resourcesP) {
            this.internal_addAllResources(resourcesP, true, true);
            return this;
          },
          internal_addResources: function (resourcesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddResources(resourcesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_resources, resourcesP, null, this, this.path()));
            }
          },
          internal_addAllResources: function (resourcesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = resourcesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddResources(el);
                }
              }
            }
             else {
              {
                var tmp$1 = resourcesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddResources(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_resources, resourcesP, null, this, this.path()));
            }
          },
          removeResources: function (resourcesP) {
            this.internal_removeResources(resourcesP, true, true);
            return this;
          },
          removeAllResources: function () {
            this.internal_removeAllResources(true, true);
            return this;
          },
          internal_removeResources: function (resourcesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._resources.size() !== 0 && this._resources.containsKey_za3rmp$(resourcesP.internalGetKey())) {
              var previousPathToBeRemoved = resourcesP.path();
              this._resources.remove_za3rmp$(resourcesP.internalGetKey());
              resourcesP.removeInboundReference(this, _.occi.util.Constants.Ref_resources);
              resourcesP.setEContainer(null, null, null);
              if (!this.removeAllResourcesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_resources, resourcesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllResources: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllResourcesCurrentlyProcessing = true;
            }
            var temp_els = this.resources;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._resources.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_resources, temp_els, null, this, this.path()));
              this.removeAllResourcesCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_use) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addUse(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllUse(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeUse(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllUse();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._use.size() !== 0 && this._use.containsKey_za3rmp$(value)) {
                      var obj = this._use.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._use.remove_za3rmp$(value);
                      this._use.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_resources) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addResources(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllResources(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeResources(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllResources();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._resources.size() !== 0 && this._resources.containsKey_za3rmp$(value)) {
                      var obj_0 = this._resources.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._resources.remove_za3rmp$(value);
                      this._resources.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findUseByID: function (key) {
            return this._use.get_za3rmp$(key);
          },
          findResourcesByID: function (key) {
            return this._resources.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_use) {
                return this.findUseByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_resources) {
                return this.findResourcesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_resources, _.occi.util.Constants.occi_Resource)) {
                {
                  var tmp$0 = this._resources.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._resources.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_resources);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_resources);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_use, _.occi.util.Constants.occi_Extension)) {
                {
                  var tmp$1 = this._use.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._use.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_use);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_use);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Configuration;
          }
        }),
        ResourceImpl: Kotlin.createClass(function () {
          return [_.occi.Resource, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_c5yh4$ = null;
          this.$internal_containmentRefName_f15tmg$ = null;
          this.$internal_unsetCmd_w30xzn$ = null;
          this.$internal_readOnlyElem_9qke5p$ = false;
          this.$internal_recursive_readOnlyElem_tvj9eu$ = false;
          this.$internal_inboundReferences_y8v8w5$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_1vp1bb$ = false;
          this.$internal_is_deleted_34wqcg$ = false;
          this.$is_root_uw4ci7$ = false;
          this.$internal_modelElementListeners_6x9wkw$ = null;
          this.$internal_modelTreeListeners_gyerbg$ = null;
          this.$path_cache_88tuj2$ = null;
          this.$key_cache_gd7p50$ = null;
          this.$id_sjru2p$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_ofg3x0$ = '' + Math.random() + (new Date()).getTime();
          this._mixins = new _.java.util.concurrent.ConcurrentHashMap();
          this.$kind_hwm3ui$ = null;
          this._attributes = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllAttributesCurrentlyProcessing = false;
          this._links = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllLinksCurrentlyProcessing = false;
        }, /** @lends _.occi.impl.ResourceImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_c5yh4$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_c5yh4$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_f15tmg$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_f15tmg$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_w30xzn$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_w30xzn$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_9qke5p$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_9qke5p$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_tvj9eu$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_tvj9eu$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_y8v8w5$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_y8v8w5$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_1vp1bb$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_1vp1bb$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_34wqcg$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_34wqcg$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_uw4ci7$;
            },
            set: function (tmp$0) {
              this.$is_root_uw4ci7$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_6x9wkw$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_6x9wkw$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_gyerbg$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_gyerbg$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_88tuj2$;
            },
            set: function (tmp$0) {
              this.$path_cache_88tuj2$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_gd7p50$;
            },
            set: function (tmp$0) {
              this.$key_cache_gd7p50$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            if (this.kind != null) {
              var tmp$0;
              ((tmp$0 = this.kind) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_kind);
              this.kind = null;
            }
            this.removeAllMixins();
            {
              var tmp$1 = this.attributes.iterator();
              while (tmp$1.hasNext()) {
                var el = tmp$1.next();
                el.delete();
              }
            }
            {
              var tmp$2 = this.links.iterator();
              while (tmp$2.hasNext()) {
                var el_0 = tmp$2.next();
                el_0.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$3;
              ((tmp$3 = this.internal_unsetCmd) != null ? tmp$3 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withId: function (p) {
            this.id = p;
            return this;
          },
          id: {
            get: function () {
              return this.$id_sjru2p$;
            },
            set: function (iP) {
              this.internal_id(iP, true);
            }
          },
          internal_id: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.id)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$id_sjru2p$;
              this.$id_sjru2p$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_id, this.id, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_ofg3x0$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_ofg3x0$;
              this.$generated_KMF_ID_ofg3x0$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          mixins: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._mixins.values());
            },
            set: function (mixinsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (mixinsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_mixins(mixinsP, true, true);
            }
          },
          internal_mixins: function (mixinsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._mixins.values(), mixinsP)) {
              var kmf_previousVal = this._mixins;
              this._mixins.clear();
              {
                var tmp$0 = mixinsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._mixins.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_mixins);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddMixins: function (mixinsP) {
            var _key_ = mixinsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._mixins.containsKey_za3rmp$(_key_)) {
              this._mixins.put_wn2jw4$(_key_, mixinsP);
              mixinsP.addInboundReference(this, _.occi.util.Constants.Ref_mixins);
            }
          },
          addMixins: function (mixinsP) {
            this.internal_addMixins(mixinsP, true, true);
            return this;
          },
          addAllMixins: function (mixinsP) {
            this.internal_addAllMixins(mixinsP, true, true);
            return this;
          },
          internal_addMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddMixins(mixinsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, null, this, this.path()));
            }
          },
          internal_addAllMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = mixinsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddMixins(el);
                }
              }
            }
             else {
              {
                var tmp$1 = mixinsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddMixins(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, null, this, this.path()));
            }
          },
          removeMixins: function (mixinsP) {
            this.internal_removeMixins(mixinsP, true, true);
            return this;
          },
          removeAllMixins: function () {
            this.internal_removeAllMixins(true, true);
            return this;
          },
          internal_removeMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._mixins.size() !== 0 && this._mixins.containsKey_za3rmp$(mixinsP.internalGetKey())) {
              var previousPathToBeRemoved = mixinsP.path();
              this._mixins.remove_za3rmp$(mixinsP.internalGetKey());
              mixinsP.removeInboundReference(this, _.occi.util.Constants.Ref_mixins);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllMixins: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.mixins;
            this._mixins.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, temp_els, null, this, this.path()));
            }
          },
          kind: {
            get: function () {
              return this.$kind_hwm3ui$;
            },
            set: function (kindP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_kind(kindP, true, true);
            }
          },
          internal_kind: function (kindP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$kind_hwm3ui$, kindP)) {
              var kmf_previousVal = this.$kind_hwm3ui$;
              if (kindP != null) {
                (kindP != null ? kindP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_kind);
              }
               else {
                if (this.$kind_hwm3ui$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$kind_hwm3ui$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_kind);
                }
              }
              this.$kind_hwm3ui$ = kindP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_kind, kindP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withKind: function (ref) {
            return this;
          },
          attributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._attributes.values());
            },
            set: function (attributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (attributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_attributes(attributesP, true, true);
            }
          },
          internal_attributes: function (attributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._attributes.values(), attributesP)) {
              var kmf_previousVal = this._attributes;
              this._attributes.clear();
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._attributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, el), _.occi.util.Constants.Ref_attributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddAttributes: function (attributesP) {
            var _key_ = attributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._attributes.containsKey_za3rmp$(_key_)) {
              this._attributes.put_wn2jw4$(_key_, attributesP);
              attributesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, attributesP), _.occi.util.Constants.Ref_attributes);
              attributesP.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
            }
          },
          addAttributes: function (attributesP) {
            this.internal_addAttributes(attributesP, true, true);
            return this;
          },
          addAllAttributes: function (attributesP) {
            this.internal_addAllAttributes(attributesP, true, true);
            return this;
          },
          internal_addAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddAttributes(attributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          internal_addAllAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = attributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          removeAttributes: function (attributesP) {
            this.internal_removeAttributes(attributesP, true, true);
            return this;
          },
          removeAllAttributes: function () {
            this.internal_removeAllAttributes(true, true);
            return this;
          },
          internal_removeAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(attributesP.internalGetKey())) {
              var previousPathToBeRemoved = attributesP.path();
              this._attributes.remove_za3rmp$(attributesP.internalGetKey());
              attributesP.removeInboundReference(this, _.occi.util.Constants.Ref_attributes);
              attributesP.setEContainer(null, null, null);
              if (!this.removeAllAttributesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllAttributesCurrentlyProcessing = true;
            }
            var temp_els = this.attributes;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._attributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, temp_els, null, this, this.path()));
              this.removeAllAttributesCurrentlyProcessing = false;
            }
          },
          links: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._links.values());
            },
            set: function (linksP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (linksP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_links(linksP, true, true);
            }
          },
          internal_links: function (linksP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._links.values(), linksP)) {
              var kmf_previousVal = this._links;
              this.internal_removeAllLinks(true, false);
              {
                var tmp$0 = linksP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._links.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_links);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_links, el), _.occi.util.Constants.Ref_links);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_source, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_links, linksP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddLinks: function (linksP) {
            var _key_ = linksP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._links.containsKey_za3rmp$(_key_)) {
              this._links.put_wn2jw4$(_key_, linksP);
              linksP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_links, linksP), _.occi.util.Constants.Ref_links);
              linksP.addInboundReference(this, _.occi.util.Constants.Ref_links);
            }
          },
          addLinks: function (linksP) {
            this.internal_addLinks(linksP, true, true);
            return this;
          },
          addAllLinks: function (linksP) {
            this.internal_addAllLinks(linksP, true, true);
            return this;
          },
          internal_addLinks: function (linksP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddLinks(linksP);
            if (setOpposite) {
              linksP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_source, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_links, linksP, null, this, this.path()));
            }
          },
          internal_addAllLinks: function (linksP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = linksP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddLinks(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_source, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = linksP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddLinks(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_links, linksP, null, this, this.path()));
            }
          },
          removeLinks: function (linksP) {
            this.internal_removeLinks(linksP, true, true);
            return this;
          },
          removeAllLinks: function () {
            this.internal_removeAllLinks(true, true);
            return this;
          },
          internal_removeLinks: function (linksP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._links.size() !== 0 && this._links.containsKey_za3rmp$(linksP.internalGetKey())) {
              var previousPathToBeRemoved = linksP.path();
              this._links.remove_za3rmp$(linksP.internalGetKey());
              linksP.removeInboundReference(this, _.occi.util.Constants.Ref_links);
              linksP.setEContainer(null, null, null);
              if (!this.removeAllLinksCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_links, linksP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                linksP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_source, null, false, fireEvents);
              }
            }
          },
          internal_removeAllLinks: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllLinksCurrentlyProcessing = true;
            }
            var temp_els = this.links;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_links);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_source, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_links);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._links.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_links, temp_els, null, this, this.path()));
              this.removeAllLinksCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_id) {
                this.internal_id(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_kind) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_kind(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_kind(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_kind(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_mixins) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllMixins();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._mixins.size() !== 0 && this._mixins.containsKey_za3rmp$(value)) {
                      var obj = this._mixins.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._mixins.remove_za3rmp$(value);
                      this._mixins.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_attributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(value)) {
                      var obj_0 = this._attributes.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._attributes.remove_za3rmp$(value);
                      this._attributes.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_links) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addLinks(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllLinks(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeLinks(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllLinks(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._links.size() !== 0 && this._links.containsKey_za3rmp$(value)) {
                      var obj_1 = this._links.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._links.remove_za3rmp$(value);
                      this._links.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findMixinsByID: function (key) {
            return this._mixins.get_za3rmp$(key);
          },
          findAttributesByID: function (key) {
            return this._attributes.get_za3rmp$(key);
          },
          findLinksByID: function (key) {
            return this._links.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_kind) {
                var objFound = this.kind;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_mixins) {
                return this.findMixinsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_attributes) {
                return this.findAttributesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_links) {
                return this.findLinksByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_attributes, _.occi.util.Constants.occi_AttributeState)) {
                {
                  var tmp$0 = this._attributes.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._attributes.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_attributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_attributes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_links, _.occi.util.Constants.occi_Link)) {
                {
                  var tmp$1 = this._links.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._links.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_links);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_links);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_kind, _.occi.util.Constants.occi_Kind)) {
                this.internal_visit(visitor, this.kind, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_kind);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_kind);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_mixins, _.occi.util.Constants.occi_Mixin)) {
                {
                  var tmp$2 = this._mixins.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._mixins.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_mixins);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_mixins);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.id, _.occi.util.Constants.Att_id, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Resource;
          }
        }),
        KindImpl: Kotlin.createClass(function () {
          return [_.occi.Kind, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_bl01j2$ = null;
          this.$internal_containmentRefName_xorgwe$ = null;
          this.$internal_unsetCmd_hidurx$ = null;
          this.$internal_readOnlyElem_u4lokz$ = false;
          this.$internal_recursive_readOnlyElem_5i31gg$ = false;
          this.$internal_inboundReferences_umow3l$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_maxp7l$ = false;
          this.$internal_is_deleted_8s99nq$ = false;
          this.$is_root_zi2sl3$ = false;
          this.$internal_modelElementListeners_uzjwxi$ = null;
          this.$internal_modelTreeListeners_vrij7e$ = null;
          this.$path_cache_xv04fs$ = null;
          this.$key_cache_2w9xj6$ = null;
          this.$term_iqm0k$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$scheme_3iwzp7$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$title_g4uczs$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_zeylju$ = '' + Math.random() + (new Date()).getTime();
          this.$parent_4yz25y$ = null;
          this._entities = new _.java.util.concurrent.ConcurrentHashMap();
          this._attributes = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllAttributesCurrentlyProcessing = false;
          this._actions = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllActionsCurrentlyProcessing = false;
        }, /** @lends _.occi.impl.KindImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_bl01j2$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_bl01j2$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_xorgwe$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_xorgwe$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_hidurx$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_hidurx$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_u4lokz$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_u4lokz$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_5i31gg$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_5i31gg$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_umow3l$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_umow3l$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_maxp7l$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_maxp7l$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_8s99nq$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_8s99nq$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_zi2sl3$;
            },
            set: function (tmp$0) {
              this.$is_root_zi2sl3$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_uzjwxi$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_uzjwxi$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_vrij7e$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_vrij7e$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_xv04fs$;
            },
            set: function (tmp$0) {
              this.$path_cache_xv04fs$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_2w9xj6$;
            },
            set: function (tmp$0) {
              this.$key_cache_2w9xj6$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.attributes.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.parent != null) {
              var tmp$1;
              ((tmp$1 = this.parent) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_parent);
              this.parent = null;
            }
            {
              var tmp$2 = this.actions.iterator();
              while (tmp$2.hasNext()) {
                var el_0 = tmp$2.next();
                el_0.delete();
              }
            }
            this.removeAllEntities();
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$3;
              ((tmp$3 = this.internal_unsetCmd) != null ? tmp$3 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withTerm: function (p) {
            this.term = p;
            return this;
          },
          term: {
            get: function () {
              return this.$term_iqm0k$;
            },
            set: function (iP) {
              this.internal_term(iP, true);
            }
          },
          internal_term: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.term)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$term_iqm0k$;
              this.$term_iqm0k$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_term, this.term, kmf_previousVal, this, oldPath));
              }
            }
          },
          withScheme: function (p) {
            this.scheme = p;
            return this;
          },
          scheme: {
            get: function () {
              return this.$scheme_3iwzp7$;
            },
            set: function (iP) {
              this.internal_scheme(iP, true);
            }
          },
          internal_scheme: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.scheme)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$scheme_3iwzp7$;
              this.$scheme_3iwzp7$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_scheme, this.scheme, kmf_previousVal, this, oldPath));
              }
            }
          },
          withTitle: function (p) {
            this.title = p;
            return this;
          },
          title: {
            get: function () {
              return this.$title_g4uczs$;
            },
            set: function (iP) {
              this.internal_title(iP, true);
            }
          },
          internal_title: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.title)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$title_g4uczs$;
              this.$title_g4uczs$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_title, this.title, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_zeylju$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_zeylju$;
              this.$generated_KMF_ID_zeylju$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          parent: {
            get: function () {
              return this.$parent_4yz25y$;
            },
            set: function (parentP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_parent(parentP, true, true);
            }
          },
          internal_parent: function (parentP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$parent_4yz25y$, parentP)) {
              var kmf_previousVal = this.$parent_4yz25y$;
              if (parentP != null) {
                (parentP != null ? parentP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_parent);
              }
               else {
                if (this.$parent_4yz25y$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$parent_4yz25y$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_parent);
                }
              }
              this.$parent_4yz25y$ = parentP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_parent, parentP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withParent: function (ref) {
            return this;
          },
          entities: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._entities.values());
            },
            set: function (entitiesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (entitiesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_entities(entitiesP, true, true);
            }
          },
          internal_entities: function (entitiesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._entities.values(), entitiesP)) {
              var kmf_previousVal = this._entities;
              this._entities.clear();
              {
                var tmp$0 = entitiesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._entities.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_entities);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEntities: function (entitiesP) {
            var _key_ = entitiesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._entities.containsKey_za3rmp$(_key_)) {
              this._entities.put_wn2jw4$(_key_, entitiesP);
              entitiesP.addInboundReference(this, _.occi.util.Constants.Ref_entities);
            }
          },
          addEntities: function (entitiesP) {
            this.internal_addEntities(entitiesP, true, true);
            return this;
          },
          addAllEntities: function (entitiesP) {
            this.internal_addAllEntities(entitiesP, true, true);
            return this;
          },
          internal_addEntities: function (entitiesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEntities(entitiesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, null, this, this.path()));
            }
          },
          internal_addAllEntities: function (entitiesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = entitiesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEntities(el);
                }
              }
            }
             else {
              {
                var tmp$1 = entitiesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEntities(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, null, this, this.path()));
            }
          },
          removeEntities: function (entitiesP) {
            this.internal_removeEntities(entitiesP, true, true);
            return this;
          },
          removeAllEntities: function () {
            this.internal_removeAllEntities(true, true);
            return this;
          },
          internal_removeEntities: function (entitiesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._entities.size() !== 0 && this._entities.containsKey_za3rmp$(entitiesP.internalGetKey())) {
              var previousPathToBeRemoved = entitiesP.path();
              this._entities.remove_za3rmp$(entitiesP.internalGetKey());
              entitiesP.removeInboundReference(this, _.occi.util.Constants.Ref_entities);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, entitiesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEntities: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.entities;
            this._entities.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_entities, temp_els, null, this, this.path()));
            }
          },
          attributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._attributes.values());
            },
            set: function (attributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (attributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_attributes(attributesP, true, true);
            }
          },
          internal_attributes: function (attributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._attributes.values(), attributesP)) {
              var kmf_previousVal = this._attributes;
              this._attributes.clear();
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._attributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, el), _.occi.util.Constants.Ref_attributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddAttributes: function (attributesP) {
            var _key_ = attributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._attributes.containsKey_za3rmp$(_key_)) {
              this._attributes.put_wn2jw4$(_key_, attributesP);
              attributesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, attributesP), _.occi.util.Constants.Ref_attributes);
              attributesP.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
            }
          },
          addAttributes: function (attributesP) {
            this.internal_addAttributes(attributesP, true, true);
            return this;
          },
          addAllAttributes: function (attributesP) {
            this.internal_addAllAttributes(attributesP, true, true);
            return this;
          },
          internal_addAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddAttributes(attributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          internal_addAllAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = attributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          removeAttributes: function (attributesP) {
            this.internal_removeAttributes(attributesP, true, true);
            return this;
          },
          removeAllAttributes: function () {
            this.internal_removeAllAttributes(true, true);
            return this;
          },
          internal_removeAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(attributesP.internalGetKey())) {
              var previousPathToBeRemoved = attributesP.path();
              this._attributes.remove_za3rmp$(attributesP.internalGetKey());
              attributesP.removeInboundReference(this, _.occi.util.Constants.Ref_attributes);
              attributesP.setEContainer(null, null, null);
              if (!this.removeAllAttributesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllAttributesCurrentlyProcessing = true;
            }
            var temp_els = this.attributes;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._attributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, temp_els, null, this, this.path()));
              this.removeAllAttributesCurrentlyProcessing = false;
            }
          },
          actions: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._actions.values());
            },
            set: function (actionsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (actionsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_actions(actionsP, true, true);
            }
          },
          internal_actions: function (actionsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._actions.values(), actionsP)) {
              var kmf_previousVal = this._actions;
              this._actions.clear();
              {
                var tmp$0 = actionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._actions.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_actions);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_actions, el), _.occi.util.Constants.Ref_actions);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddActions: function (actionsP) {
            var _key_ = actionsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._actions.containsKey_za3rmp$(_key_)) {
              this._actions.put_wn2jw4$(_key_, actionsP);
              actionsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_actions, actionsP), _.occi.util.Constants.Ref_actions);
              actionsP.addInboundReference(this, _.occi.util.Constants.Ref_actions);
            }
          },
          addActions: function (actionsP) {
            this.internal_addActions(actionsP, true, true);
            return this;
          },
          addAllActions: function (actionsP) {
            this.internal_addAllActions(actionsP, true, true);
            return this;
          },
          internal_addActions: function (actionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddActions(actionsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, null, this, this.path()));
            }
          },
          internal_addAllActions: function (actionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = actionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddActions(el);
                }
              }
            }
             else {
              {
                var tmp$1 = actionsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddActions(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, null, this, this.path()));
            }
          },
          removeActions: function (actionsP) {
            this.internal_removeActions(actionsP, true, true);
            return this;
          },
          removeAllActions: function () {
            this.internal_removeAllActions(true, true);
            return this;
          },
          internal_removeActions: function (actionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._actions.size() !== 0 && this._actions.containsKey_za3rmp$(actionsP.internalGetKey())) {
              var previousPathToBeRemoved = actionsP.path();
              this._actions.remove_za3rmp$(actionsP.internalGetKey());
              actionsP.removeInboundReference(this, _.occi.util.Constants.Ref_actions);
              actionsP.setEContainer(null, null, null);
              if (!this.removeAllActionsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, actionsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllActions: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllActionsCurrentlyProcessing = true;
            }
            var temp_els = this.actions;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._actions.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_actions, temp_els, null, this, this.path()));
              this.removeAllActionsCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_term) {
                this.internal_term(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_scheme) {
                this.internal_scheme(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_title) {
                this.internal_title(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_attributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(value)) {
                      var obj = this._attributes.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._attributes.remove_za3rmp$(value);
                      this._attributes.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_parent) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_parent(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_parent(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_parent(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_actions) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addActions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllActions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeActions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllActions();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._actions.size() !== 0 && this._actions.containsKey_za3rmp$(value)) {
                      var obj_0 = this._actions.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._actions.remove_za3rmp$(value);
                      this._actions.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_entities) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEntities(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEntities(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEntities(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEntities();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._entities.size() !== 0 && this._entities.containsKey_za3rmp$(value)) {
                      var obj_1 = this._entities.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._entities.remove_za3rmp$(value);
                      this._entities.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findAttributesByID: function (key) {
            return this._attributes.get_za3rmp$(key);
          },
          findActionsByID: function (key) {
            return this._actions.get_za3rmp$(key);
          },
          findEntitiesByID: function (key) {
            return this._entities.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_attributes) {
                return this.findAttributesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_parent) {
                var objFound = this.parent;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_actions) {
                return this.findActionsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_entities) {
                return this.findEntitiesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_attributes, _.occi.util.Constants.occi_Attribute)) {
                {
                  var tmp$0 = this._attributes.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._attributes.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_attributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_attributes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_actions, _.occi.util.Constants.occi_Action)) {
                {
                  var tmp$1 = this._actions.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._actions.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_actions);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_actions);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_parent, _.occi.util.Constants.occi_Kind)) {
                this.internal_visit(visitor, this.parent, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_parent);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_parent);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_entities, _.occi.util.Constants.occi_Entity)) {
                {
                  var tmp$2 = this._entities.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._entities.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_entities);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_entities);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.scheme, _.occi.util.Constants.Att_scheme, this);
            visitor.visit(this.term, _.occi.util.Constants.Att_term, this);
            visitor.visit(this.title, _.occi.util.Constants.Att_title, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Kind;
          }
        }),
        ExtensionImpl: Kotlin.createClass(function () {
          return [_.occi.Extension, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_b34nd7$ = null;
          this.$internal_containmentRefName_dnrvln$ = null;
          this.$internal_unsetCmd_8k24kq$ = null;
          this.$internal_readOnlyElem_kk63va$ = false;
          this.$internal_recursive_readOnlyElem_eqbe6v$ = false;
          this.$internal_inboundReferences_4i4g4o$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_d76dau$ = false;
          this.$internal_is_deleted_dvvf8j$ = false;
          this.$is_root_kpv3xq$ = false;
          this.$internal_modelElementListeners_jpw08j$ = null;
          this.$internal_modelTreeListeners_fl0tan$ = null;
          this.$path_cache_7d5ghd$ = null;
          this.$key_cache_1xnwzd$ = null;
          this.$name_t1tyqc$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$scheme_55v5ke$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_6o33yn$ = '' + Math.random() + (new Date()).getTime();
          this._mixins = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllMixinsCurrentlyProcessing = false;
          this._types = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllTypesCurrentlyProcessing = false;
          this._import = new _.java.util.concurrent.ConcurrentHashMap();
          this._kinds = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllKindsCurrentlyProcessing = false;
        }, /** @lends _.occi.impl.ExtensionImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_b34nd7$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_b34nd7$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_dnrvln$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_dnrvln$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_8k24kq$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_8k24kq$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_kk63va$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_kk63va$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_eqbe6v$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_eqbe6v$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_4i4g4o$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_4i4g4o$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_d76dau$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_d76dau$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_dvvf8j$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_dvvf8j$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_kpv3xq$;
            },
            set: function (tmp$0) {
              this.$is_root_kpv3xq$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_jpw08j$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_jpw08j$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_fl0tan$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_fl0tan$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_7d5ghd$;
            },
            set: function (tmp$0) {
              this.$path_cache_7d5ghd$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_1xnwzd$;
            },
            set: function (tmp$0) {
              this.$key_cache_1xnwzd$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            this.removeAllImport();
            {
              var tmp$0 = this.kinds.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            {
              var tmp$1 = this.mixins.iterator();
              while (tmp$1.hasNext()) {
                var el_0 = tmp$1.next();
                el_0.delete();
              }
            }
            {
              var tmp$2 = this.types.iterator();
              while (tmp$2.hasNext()) {
                var el_1 = tmp$2.next();
                el_1.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$3;
              ((tmp$3 = this.internal_unsetCmd) != null ? tmp$3 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_t1tyqc$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_t1tyqc$;
              this.$name_t1tyqc$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withScheme: function (p) {
            this.scheme = p;
            return this;
          },
          scheme: {
            get: function () {
              return this.$scheme_55v5ke$;
            },
            set: function (iP) {
              this.internal_scheme(iP, true);
            }
          },
          internal_scheme: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.scheme)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$scheme_55v5ke$;
              this.$scheme_55v5ke$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_scheme, this.scheme, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_6o33yn$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_6o33yn$;
              this.$generated_KMF_ID_6o33yn$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          mixins: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._mixins.values());
            },
            set: function (mixinsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (mixinsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_mixins(mixinsP, true, true);
            }
          },
          internal_mixins: function (mixinsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._mixins.values(), mixinsP)) {
              var kmf_previousVal = this._mixins;
              this._mixins.clear();
              {
                var tmp$0 = mixinsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._mixins.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_mixins);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_mixins, el), _.occi.util.Constants.Ref_mixins);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_mixins, mixinsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddMixins: function (mixinsP) {
            var _key_ = mixinsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._mixins.containsKey_za3rmp$(_key_)) {
              this._mixins.put_wn2jw4$(_key_, mixinsP);
              mixinsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_mixins, mixinsP), _.occi.util.Constants.Ref_mixins);
              mixinsP.addInboundReference(this, _.occi.util.Constants.Ref_mixins);
            }
          },
          addMixins: function (mixinsP) {
            this.internal_addMixins(mixinsP, true, true);
            return this;
          },
          addAllMixins: function (mixinsP) {
            this.internal_addAllMixins(mixinsP, true, true);
            return this;
          },
          internal_addMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddMixins(mixinsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_mixins, mixinsP, null, this, this.path()));
            }
          },
          internal_addAllMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = mixinsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddMixins(el);
                }
              }
            }
             else {
              {
                var tmp$1 = mixinsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddMixins(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_mixins, mixinsP, null, this, this.path()));
            }
          },
          removeMixins: function (mixinsP) {
            this.internal_removeMixins(mixinsP, true, true);
            return this;
          },
          removeAllMixins: function () {
            this.internal_removeAllMixins(true, true);
            return this;
          },
          internal_removeMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._mixins.size() !== 0 && this._mixins.containsKey_za3rmp$(mixinsP.internalGetKey())) {
              var previousPathToBeRemoved = mixinsP.path();
              this._mixins.remove_za3rmp$(mixinsP.internalGetKey());
              mixinsP.removeInboundReference(this, _.occi.util.Constants.Ref_mixins);
              mixinsP.setEContainer(null, null, null);
              if (!this.removeAllMixinsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_mixins, mixinsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllMixins: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllMixinsCurrentlyProcessing = true;
            }
            var temp_els = this.mixins;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._mixins.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_mixins, temp_els, null, this, this.path()));
              this.removeAllMixinsCurrentlyProcessing = false;
            }
          },
          types: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._types.values());
            },
            set: function (typesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (typesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_types(typesP, true, true);
            }
          },
          internal_types: function (typesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._types.values(), typesP)) {
              var kmf_previousVal = this._types;
              this._types.clear();
              {
                var tmp$0 = typesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._types.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_types);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_types, el), _.occi.util.Constants.Ref_types);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_types, typesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddTypes: function (typesP) {
            var _key_ = typesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._types.containsKey_za3rmp$(_key_)) {
              this._types.put_wn2jw4$(_key_, typesP);
              typesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_types, typesP), _.occi.util.Constants.Ref_types);
              typesP.addInboundReference(this, _.occi.util.Constants.Ref_types);
            }
          },
          addTypes: function (typesP) {
            this.internal_addTypes(typesP, true, true);
            return this;
          },
          addAllTypes: function (typesP) {
            this.internal_addAllTypes(typesP, true, true);
            return this;
          },
          internal_addTypes: function (typesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddTypes(typesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_types, typesP, null, this, this.path()));
            }
          },
          internal_addAllTypes: function (typesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = typesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddTypes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = typesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddTypes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_types, typesP, null, this, this.path()));
            }
          },
          removeTypes: function (typesP) {
            this.internal_removeTypes(typesP, true, true);
            return this;
          },
          removeAllTypes: function () {
            this.internal_removeAllTypes(true, true);
            return this;
          },
          internal_removeTypes: function (typesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._types.size() !== 0 && this._types.containsKey_za3rmp$(typesP.internalGetKey())) {
              var previousPathToBeRemoved = typesP.path();
              this._types.remove_za3rmp$(typesP.internalGetKey());
              typesP.removeInboundReference(this, _.occi.util.Constants.Ref_types);
              typesP.setEContainer(null, null, null);
              if (!this.removeAllTypesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_types, typesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllTypes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllTypesCurrentlyProcessing = true;
            }
            var temp_els = this.types;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._types.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_types, temp_els, null, this, this.path()));
              this.removeAllTypesCurrentlyProcessing = false;
            }
          },
          import: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._import.values());
            },
            set: function (importP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (importP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_import(importP, true, true);
            }
          },
          internal_import: function (importP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._import.values(), importP)) {
              var kmf_previousVal = this._import;
              this._import.clear();
              {
                var tmp$0 = importP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._import.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_import);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_import, importP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddImport: function (importP) {
            var _key_ = importP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._import.containsKey_za3rmp$(_key_)) {
              this._import.put_wn2jw4$(_key_, importP);
              importP.addInboundReference(this, _.occi.util.Constants.Ref_import);
            }
          },
          addImport: function (importP) {
            this.internal_addImport(importP, true, true);
            return this;
          },
          addAllImport: function (importP) {
            this.internal_addAllImport(importP, true, true);
            return this;
          },
          internal_addImport: function (importP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddImport(importP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_import, importP, null, this, this.path()));
            }
          },
          internal_addAllImport: function (importP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = importP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddImport(el);
                }
              }
            }
             else {
              {
                var tmp$1 = importP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddImport(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_import, importP, null, this, this.path()));
            }
          },
          removeImport: function (importP) {
            this.internal_removeImport(importP, true, true);
            return this;
          },
          removeAllImport: function () {
            this.internal_removeAllImport(true, true);
            return this;
          },
          internal_removeImport: function (importP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._import.size() !== 0 && this._import.containsKey_za3rmp$(importP.internalGetKey())) {
              var previousPathToBeRemoved = importP.path();
              this._import.remove_za3rmp$(importP.internalGetKey());
              importP.removeInboundReference(this, _.occi.util.Constants.Ref_import);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_import, importP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllImport: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.import;
            this._import.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_import, temp_els, null, this, this.path()));
            }
          },
          kinds: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._kinds.values());
            },
            set: function (kindsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (kindsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_kinds(kindsP, true, true);
            }
          },
          internal_kinds: function (kindsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._kinds.values(), kindsP)) {
              var kmf_previousVal = this._kinds;
              this._kinds.clear();
              {
                var tmp$0 = kindsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._kinds.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_kinds);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_kinds, el), _.occi.util.Constants.Ref_kinds);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_kinds, kindsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddKinds: function (kindsP) {
            var _key_ = kindsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._kinds.containsKey_za3rmp$(_key_)) {
              this._kinds.put_wn2jw4$(_key_, kindsP);
              kindsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_kinds, kindsP), _.occi.util.Constants.Ref_kinds);
              kindsP.addInboundReference(this, _.occi.util.Constants.Ref_kinds);
            }
          },
          addKinds: function (kindsP) {
            this.internal_addKinds(kindsP, true, true);
            return this;
          },
          addAllKinds: function (kindsP) {
            this.internal_addAllKinds(kindsP, true, true);
            return this;
          },
          internal_addKinds: function (kindsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddKinds(kindsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_kinds, kindsP, null, this, this.path()));
            }
          },
          internal_addAllKinds: function (kindsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = kindsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddKinds(el);
                }
              }
            }
             else {
              {
                var tmp$1 = kindsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddKinds(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_kinds, kindsP, null, this, this.path()));
            }
          },
          removeKinds: function (kindsP) {
            this.internal_removeKinds(kindsP, true, true);
            return this;
          },
          removeAllKinds: function () {
            this.internal_removeAllKinds(true, true);
            return this;
          },
          internal_removeKinds: function (kindsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._kinds.size() !== 0 && this._kinds.containsKey_za3rmp$(kindsP.internalGetKey())) {
              var previousPathToBeRemoved = kindsP.path();
              this._kinds.remove_za3rmp$(kindsP.internalGetKey());
              kindsP.removeInboundReference(this, _.occi.util.Constants.Ref_kinds);
              kindsP.setEContainer(null, null, null);
              if (!this.removeAllKindsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_kinds, kindsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllKinds: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllKindsCurrentlyProcessing = true;
            }
            var temp_els = this.kinds;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._kinds.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_kinds, temp_els, null, this, this.path()));
              this.removeAllKindsCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_scheme) {
                this.internal_scheme(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_import) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addImport(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllImport(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeImport(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllImport();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._import.size() !== 0 && this._import.containsKey_za3rmp$(value)) {
                      var obj = this._import.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._import.remove_za3rmp$(value);
                      this._import.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_kinds) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addKinds(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllKinds(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeKinds(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllKinds();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._kinds.size() !== 0 && this._kinds.containsKey_za3rmp$(value)) {
                      var obj_0 = this._kinds.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._kinds.remove_za3rmp$(value);
                      this._kinds.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_mixins) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllMixins();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._mixins.size() !== 0 && this._mixins.containsKey_za3rmp$(value)) {
                      var obj_1 = this._mixins.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._mixins.remove_za3rmp$(value);
                      this._mixins.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_types) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllTypes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._types.size() !== 0 && this._types.containsKey_za3rmp$(value)) {
                      var obj_2 = this._types.get_za3rmp$(value);
                      var objNewKey_2 = (obj_2 != null ? obj_2 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_2 == null) {
                        throw new Error('Key newed to null ' + obj_2);
                      }
                      this._types.remove_za3rmp$(value);
                      this._types.put_wn2jw4$(objNewKey_2, obj_2);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findImportByID: function (key) {
            return this._import.get_za3rmp$(key);
          },
          findKindsByID: function (key) {
            return this._kinds.get_za3rmp$(key);
          },
          findMixinsByID: function (key) {
            return this._mixins.get_za3rmp$(key);
          },
          findTypesByID: function (key) {
            return this._types.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_import) {
                return this.findImportByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_kinds) {
                return this.findKindsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_mixins) {
                return this.findMixinsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_types) {
                return this.findTypesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_kinds, _.occi.util.Constants.occi_Kind)) {
                {
                  var tmp$0 = this._kinds.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._kinds.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_kinds);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_kinds);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_mixins, _.occi.util.Constants.occi_Mixin)) {
                {
                  var tmp$1 = this._mixins.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._mixins.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_mixins);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_mixins);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_types, _.occi.util.Constants.ecore_EDataType)) {
                {
                  var tmp$2 = this._types.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._types.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_types);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_types);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_import, _.occi.util.Constants.occi_Extension)) {
                {
                  var tmp$3 = this._import.keySet().iterator();
                  while (tmp$3.hasNext()) {
                    var KMFLoopEntryKey_2 = tmp$3.next();
                    this.internal_visit(visitor, this._import.get_za3rmp$(KMFLoopEntryKey_2), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_import);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_import);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.scheme, _.occi.util.Constants.Att_scheme, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Extension;
          }
        }),
        AttributeStateImpl: Kotlin.createClass(function () {
          return [_.occi.AttributeState, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_4q7san$ = null;
          this.$internal_containmentRefName_loq4jz$ = null;
          this.$internal_unsetCmd_1p7mh8$ = null;
          this.$internal_readOnlyElem_mtbrd8$ = false;
          this.$internal_recursive_readOnlyElem_x0r7j5$ = false;
          this.$internal_inboundReferences_12738e$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_la4sps$ = false;
          this.$internal_is_deleted_1xh0fb$ = false;
          this.$is_root_2x92q0$ = false;
          this.$internal_modelElementListeners_fq5jmx$ = null;
          this.$internal_modelTreeListeners_jrh6uz$ = null;
          this.$path_cache_rhv2uf$ = null;
          this.$key_cache_bqzptv$ = null;
          this.$name_kcc0zu$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$value_8j9age$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_ea7o6z$ = '' + Math.random() + (new Date()).getTime();
        }, /** @lends _.occi.impl.AttributeStateImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_4q7san$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_4q7san$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_loq4jz$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_loq4jz$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_1p7mh8$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_1p7mh8$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_mtbrd8$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_mtbrd8$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_x0r7j5$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_x0r7j5$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_12738e$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_12738e$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_la4sps$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_la4sps$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_1xh0fb$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_1xh0fb$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_2x92q0$;
            },
            set: function (tmp$0) {
              this.$is_root_2x92q0$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_fq5jmx$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_fq5jmx$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_jrh6uz$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_jrh6uz$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_rhv2uf$;
            },
            set: function (tmp$0) {
              this.$path_cache_rhv2uf$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_bqzptv$;
            },
            set: function (tmp$0) {
              this.$key_cache_bqzptv$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$0;
              ((tmp$0 = this.internal_unsetCmd) != null ? tmp$0 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_kcc0zu$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_kcc0zu$;
              this.$name_kcc0zu$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withValue: function (p) {
            this.value = p;
            return this;
          },
          value: {
            get: function () {
              return this.$value_8j9age$;
            },
            set: function (iP) {
              this.internal_value(iP, true);
            }
          },
          internal_value: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.value)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$value_8j9age$;
              this.$value_8j9age$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_value, this.value, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_ea7o6z$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_ea7o6z$;
              this.$generated_KMF_ID_ea7o6z$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_value) {
                this.internal_value(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findByID: function (relationName, idP) {
            {
              {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.value, _.occi.util.Constants.Att_value, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_AttributeState;
          }
        }),
        LinkImpl: Kotlin.createClass(function () {
          return [_.occi.Link, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_k0cbfg$ = null;
          this.$internal_containmentRefName_q8iwtw$ = null;
          this.$internal_unsetCmd_eyfqqv$ = null;
          this.$internal_readOnlyElem_f8sx3$ = false;
          this.$internal_recursive_readOnlyElem_36i3y2$ = false;
          this.$internal_inboundReferences_lpe6xz$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_z9m685$ = false;
          this.$internal_is_deleted_mt33as$ = false;
          this.$is_root_6wo8kj$ = false;
          this.$internal_modelElementListeners_xk4gws$ = null;
          this.$internal_modelTreeListeners_ob9z4w$ = null;
          this.$path_cache_z4qe02$ = null;
          this.$key_cache_ivbkko$ = null;
          this.$id_on4ne3$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_ll2ips$ = '' + Math.random() + (new Date()).getTime();
          this._mixins = new _.java.util.concurrent.ConcurrentHashMap();
          this.$kind_s4kos2$ = null;
          this._attributes = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllAttributesCurrentlyProcessing = false;
          this.$source_yho1uz$ = null;
          this.$target_y8dotx$ = null;
        }, /** @lends _.occi.impl.LinkImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_k0cbfg$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_k0cbfg$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_q8iwtw$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_q8iwtw$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_eyfqqv$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_eyfqqv$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_f8sx3$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_f8sx3$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_36i3y2$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_36i3y2$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_lpe6xz$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_lpe6xz$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_z9m685$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_z9m685$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_mt33as$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_mt33as$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_6wo8kj$;
            },
            set: function (tmp$0) {
              this.$is_root_6wo8kj$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_xk4gws$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_xk4gws$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_ob9z4w$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_ob9z4w$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_z4qe02$;
            },
            set: function (tmp$0) {
              this.$path_cache_z4qe02$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_ivbkko$;
            },
            set: function (tmp$0) {
              this.$key_cache_ivbkko$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            if (this.kind != null) {
              var tmp$0;
              ((tmp$0 = this.kind) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_kind);
              this.kind = null;
            }
            this.removeAllMixins();
            {
              var tmp$1 = this.attributes.iterator();
              while (tmp$1.hasNext()) {
                var el = tmp$1.next();
                el.delete();
              }
            }
            if (this.source != null) {
              var tmp$2, tmp$3;
              ((tmp$2 = this.source) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_source);
              ((tmp$3 = this.source) != null ? tmp$3 : Kotlin.throwNPE()).delete();
              this.source = null;
            }
            if (this.target != null) {
              var tmp$4;
              ((tmp$4 = this.target) != null ? tmp$4 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_target);
              this.target = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$5;
              ((tmp$5 = this.internal_unsetCmd) != null ? tmp$5 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withId: function (p) {
            this.id = p;
            return this;
          },
          id: {
            get: function () {
              return this.$id_on4ne3$;
            },
            set: function (iP) {
              this.internal_id(iP, true);
            }
          },
          internal_id: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.id)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$id_on4ne3$;
              this.$id_on4ne3$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_id, this.id, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_ll2ips$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_ll2ips$;
              this.$generated_KMF_ID_ll2ips$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          mixins: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._mixins.values());
            },
            set: function (mixinsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (mixinsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_mixins(mixinsP, true, true);
            }
          },
          internal_mixins: function (mixinsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._mixins.values(), mixinsP)) {
              var kmf_previousVal = this._mixins;
              this._mixins.clear();
              {
                var tmp$0 = mixinsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._mixins.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_mixins);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddMixins: function (mixinsP) {
            var _key_ = mixinsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._mixins.containsKey_za3rmp$(_key_)) {
              this._mixins.put_wn2jw4$(_key_, mixinsP);
              mixinsP.addInboundReference(this, _.occi.util.Constants.Ref_mixins);
            }
          },
          addMixins: function (mixinsP) {
            this.internal_addMixins(mixinsP, true, true);
            return this;
          },
          addAllMixins: function (mixinsP) {
            this.internal_addAllMixins(mixinsP, true, true);
            return this;
          },
          internal_addMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddMixins(mixinsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, null, this, this.path()));
            }
          },
          internal_addAllMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = mixinsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddMixins(el);
                }
              }
            }
             else {
              {
                var tmp$1 = mixinsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddMixins(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, null, this, this.path()));
            }
          },
          removeMixins: function (mixinsP) {
            this.internal_removeMixins(mixinsP, true, true);
            return this;
          },
          removeAllMixins: function () {
            this.internal_removeAllMixins(true, true);
            return this;
          },
          internal_removeMixins: function (mixinsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._mixins.size() !== 0 && this._mixins.containsKey_za3rmp$(mixinsP.internalGetKey())) {
              var previousPathToBeRemoved = mixinsP.path();
              this._mixins.remove_za3rmp$(mixinsP.internalGetKey());
              mixinsP.removeInboundReference(this, _.occi.util.Constants.Ref_mixins);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, mixinsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllMixins: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.mixins;
            this._mixins.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_mixins, temp_els, null, this, this.path()));
            }
          },
          kind: {
            get: function () {
              return this.$kind_s4kos2$;
            },
            set: function (kindP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_kind(kindP, true, true);
            }
          },
          internal_kind: function (kindP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$kind_s4kos2$, kindP)) {
              var kmf_previousVal = this.$kind_s4kos2$;
              if (kindP != null) {
                (kindP != null ? kindP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_kind);
              }
               else {
                if (this.$kind_s4kos2$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$kind_s4kos2$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_kind);
                }
              }
              this.$kind_s4kos2$ = kindP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_kind, kindP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withKind: function (ref) {
            return this;
          },
          attributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._attributes.values());
            },
            set: function (attributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (attributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_attributes(attributesP, true, true);
            }
          },
          internal_attributes: function (attributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._attributes.values(), attributesP)) {
              var kmf_previousVal = this._attributes;
              this._attributes.clear();
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._attributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, el), _.occi.util.Constants.Ref_attributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddAttributes: function (attributesP) {
            var _key_ = attributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._attributes.containsKey_za3rmp$(_key_)) {
              this._attributes.put_wn2jw4$(_key_, attributesP);
              attributesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_attributes, attributesP), _.occi.util.Constants.Ref_attributes);
              attributesP.addInboundReference(this, _.occi.util.Constants.Ref_attributes);
            }
          },
          addAttributes: function (attributesP) {
            this.internal_addAttributes(attributesP, true, true);
            return this;
          },
          addAllAttributes: function (attributesP) {
            this.internal_addAllAttributes(attributesP, true, true);
            return this;
          },
          internal_addAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddAttributes(attributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          internal_addAllAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = attributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = attributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, null, this, this.path()));
            }
          },
          removeAttributes: function (attributesP) {
            this.internal_removeAttributes(attributesP, true, true);
            return this;
          },
          removeAllAttributes: function () {
            this.internal_removeAllAttributes(true, true);
            return this;
          },
          internal_removeAttributes: function (attributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(attributesP.internalGetKey())) {
              var previousPathToBeRemoved = attributesP.path();
              this._attributes.remove_za3rmp$(attributesP.internalGetKey());
              attributesP.removeInboundReference(this, _.occi.util.Constants.Ref_attributes);
              attributesP.setEContainer(null, null, null);
              if (!this.removeAllAttributesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, attributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllAttributesCurrentlyProcessing = true;
            }
            var temp_els = this.attributes;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._attributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_attributes, temp_els, null, this, this.path()));
              this.removeAllAttributesCurrentlyProcessing = false;
            }
          },
          source: {
            get: function () {
              return this.$source_yho1uz$;
            },
            set: function (sourceP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_source(sourceP, true, true);
            }
          },
          internal_source: function (sourceP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$source_yho1uz$, sourceP)) {
              if (setOpposite) {
                if (this.$source_yho1uz$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$source_yho1uz$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_links, this, false, fireEvents);
                }
                if (sourceP != null) {
                  sourceP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_links, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$source_yho1uz$;
              if (sourceP != null) {
                (sourceP != null ? sourceP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_source);
              }
               else {
                if (this.$source_yho1uz$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$source_yho1uz$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_source);
                }
              }
              this.$source_yho1uz$ = sourceP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_source, sourceP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withSource: function (ref) {
            return this;
          },
          target: {
            get: function () {
              return this.$target_y8dotx$;
            },
            set: function (targetP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_target(targetP, true, true);
            }
          },
          internal_target: function (targetP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$target_y8dotx$, targetP)) {
              var kmf_previousVal = this.$target_y8dotx$;
              if (targetP != null) {
                (targetP != null ? targetP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_target);
              }
               else {
                if (this.$target_y8dotx$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$target_y8dotx$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_target);
                }
              }
              this.$target_y8dotx$ = targetP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_target, targetP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withTarget: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_id) {
                this.internal_id(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_kind) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_kind(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_kind(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_kind(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_mixins) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeMixins(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllMixins();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._mixins.size() !== 0 && this._mixins.containsKey_za3rmp$(value)) {
                      var obj = this._mixins.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._mixins.remove_za3rmp$(value);
                      this._mixins.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_attributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._attributes.size() !== 0 && this._attributes.containsKey_za3rmp$(value)) {
                      var obj_0 = this._attributes.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._attributes.remove_za3rmp$(value);
                      this._attributes.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_source) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_source(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_source(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_source(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_target) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_target(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_target(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_target(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findMixinsByID: function (key) {
            return this._mixins.get_za3rmp$(key);
          },
          findAttributesByID: function (key) {
            return this._attributes.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_kind) {
                var objFound = this.kind;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_mixins) {
                return this.findMixinsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_attributes) {
                return this.findAttributesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_source) {
                var objFound_0 = this.source;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_target) {
                var objFound_1 = this.target;
                if (objFound_1 != null && Kotlin.equals(objFound_1.internalGetKey(), idP)) {
                  return objFound_1;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_attributes, _.occi.util.Constants.occi_AttributeState)) {
                {
                  var tmp$0 = this._attributes.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._attributes.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_attributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_attributes);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_kind, _.occi.util.Constants.occi_Kind)) {
                this.internal_visit(visitor, this.kind, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_kind);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_kind);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_mixins, _.occi.util.Constants.occi_Mixin)) {
                {
                  var tmp$1 = this._mixins.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._mixins.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_mixins);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_mixins);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_source, _.occi.util.Constants.occi_Resource)) {
                this.internal_visit(visitor, this.source, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_source);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_source);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_target, _.occi.util.Constants.occi_Resource)) {
                this.internal_visit(visitor, this.target, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_target);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_target);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.id, _.occi.util.Constants.Att_id, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.occi_Link;
          }
        })
      }),
      util: Kotlin.definePackage(function () {
        this.Constants = Kotlin.createObject(null, function () {
          this.UNKNOWN_MUTATION_TYPE_EXCEPTION = 'Unknown mutation type: ';
          this.READ_ONLY_EXCEPTION = 'This model is ReadOnly. Elements are not modifiable.';
          this.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION = 'The list in parameter of the setter cannot be null. Use removeAll to empty a collection.';
          this.ELEMENT_HAS_NO_KEY_IN_COLLECTION = 'Cannot set the collection, because at least one element of it has no key!';
          this.EMPTY_KEY = 'Key empty : please set the attribute key before adding the object.';
          this.KMFQL_CONTAINED = 'contained';
          this.STRING_DEFAULTVAL = '';
          this.INT_DEFAULTVAL = 0;
          this.BOOLEAN_DEFAULTVAL = false;
          this.CHAR_DEFAULTVAL = 'a';
          this.SHORT_DEFAULTVAL = 0;
          this.LONG_DEFAULTVAL = 0.0;
          this.DOUBLE_DEFAULTVAL = 0.0;
          this.FLOAT_DEFAULTVAL = 0;
          this.BYTE_DEFAULTVAL = 0;
          this.ecore_EReference = 'ecore.EReference';
          this.ecore_EByteObject = 'ecore.EByteObject';
          this.Ref_eGenericSuperTypes = 'eGenericSuperTypes';
          this.ecore_EResourceSet = 'ecore.EResourceSet';
          this.Ref_applies = 'applies';
          this.Ref_eModelElement = 'eModelElement';
          this.Ref_eGenericType = 'eGenericType';
          this.occi_Attribute = 'occi.Attribute';
          this.Ref_depends = 'depends';
          this.ecore_EFactory = 'ecore.EFactory';
          this.Ref_eLowerBound = 'eLowerBound';
          this.ecore_EInt = 'ecore.EInt';
          this.ecore_EBooleanObject = 'ecore.EBooleanObject';
          this.occi_Mixin = 'occi.Mixin';
          this.ecore_EFloat = 'ecore.EFloat';
          this.Att_id = 'id';
          this.Att_serializable = 'serializable';
          this.occi_Extension = 'occi.Extension';
          this.Ref_eType = 'eType';
          this.Att_scheme = 'scheme';
          this.occi_Configuration = 'occi.Configuration';
          this.Ref_eOperation = 'eOperation';
          this.ecore_EStructuralFeature = 'ecore.EStructuralFeature';
          this.Att_source = 'source';
          this.ecore_EEnum = 'ecore.EEnum';
          this.Att_transient = 'transient';
          this.Ref_eAllReferences = 'eAllReferences';
          this.ecore_EFeatureMap = 'ecore.EFeatureMap';
          this.Ref_eParameters = 'eParameters';
          this.ecore_EDouble = 'ecore.EDouble';
          this.occi_Boolean = 'occi.Boolean';
          this.ecore_EResource = 'ecore.EResource';
          this.Ref_eLiterals = 'eLiterals';
          this.Att_nsURI = 'nsURI';
          this.Ref_eRawType = 'eRawType';
          this.Ref_attributes = 'attributes';
          this.Att_nsPrefix = 'nsPrefix';
          this.ecore_EDoubleObject = 'ecore.EDoubleObject';
          this.Ref_references = 'references';
          this.Att_literal = 'literal';
          this.ecore_EOperation = 'ecore.EOperation';
          this.ecore_EFloatObject = 'ecore.EFloatObject';
          this.Ref_kinds = 'kinds';
          this.Att_upperBound = 'upperBound';
          this.Att_unsettable = 'unsettable';
          this.Att_mutable = 'mutable';
          this.ecore_EGenericType = 'ecore.EGenericType';
          this.Att_volatile = 'volatile';
          this.ecore_EShortObject = 'ecore.EShortObject';
          this.Att_unique = 'unique';
          this.occi_Kind = 'occi.Kind';
          this.ecore_ETreeIterator = 'ecore.ETreeIterator';
          this.ecore_EString = 'ecore.EString';
          this.ecore_ELongObject = 'ecore.ELongObject';
          this.Ref_eOperations = 'eOperations';
          this.Ref_links = 'links';
          this.ecore_EObject = 'ecore.EObject';
          this.Att_name = 'name';
          this.Att_key = 'key';
          this.Att_ordered = 'ordered';
          this.ecore_EBoolean = 'ecore.EBoolean';
          this.occi_AttributeState = 'occi.AttributeState';
          this.Ref_source = 'source';
          this.Ref_use = 'use';
          this.ecore_EParameter = 'ecore.EParameter';
          this.Att_instanceClass = 'instanceClass';
          this.Ref_eUpperBound = 'eUpperBound';
          this.ecore_EAnnotation = 'ecore.EAnnotation';
          this.Att_resolveProxies = 'resolveProxies';
          this.Ref_eKeys = 'eKeys';
          this.Att_interface = 'interface';
          this.Ref_resources = 'resources';
          this.Att_required = 'required';
          this.Att_container = 'container';
          this.ecore_ENamedElement = 'ecore.ENamedElement';
          this.Ref_eAllSuperTypes = 'eAllSuperTypes';
          this.ecore_EShort = 'ecore.EShort';
          this.occi_Category = 'occi.Category';
          this.Ref_eEnum = 'eEnum';
          this.Att_title = 'title';
          this.ecore_EClass = 'ecore.EClass';
          this.Att_multiple_values = 'multiple_values';
          this.Ref_entities = 'entities';
          this.ecore_EPackage = 'ecore.EPackage';
          this.Ref_eStructuralFeatures = 'eStructuralFeatures';
          this.Att_changeable = 'changeable';
          this.Ref_eBounds = 'eBounds';
          this.ecore_EByteArray = 'ecore.EByteArray';
          this.ecore_EClassifier = 'ecore.EClassifier';
          this.Att_defaultValueLiteral = 'defaultValueLiteral';
          this.ecore_EDate = 'ecore.EDate';
          this.Att_default = 'default';
          this.ecore_EIntegerObject = 'ecore.EIntegerObject';
          this.ecore_EEnumLiteral = 'ecore.EEnumLiteral';
          this.Ref_eSuperPackage = 'eSuperPackage';
          this.Att_many = 'many';
          this.Ref_eReferences = 'eReferences';
          this.ecore_EChar = 'ecore.EChar';
          this.occi_Resource = 'occi.Resource';
          this.Att_term = 'term';
          this.Att_description = 'description';
          this.Att_containment = 'containment';
          this.Ref_details = 'details';
          this.ecore_EStringToStringMapEntry = 'ecore.EStringToStringMapEntry';
          this.Ref_kind = 'kind';
          this.Att_abstract = 'abstract';
          this.Att_instanceTypeName = 'instanceTypeName';
          this.ecore_EJavaObject = 'ecore.EJavaObject';
          this.ecore_ECharacterObject = 'ecore.ECharacterObject';
          this.Ref_types = 'types';
          this.ecore_EMap = 'ecore.EMap';
          this.ecore_EAttribute = 'ecore.EAttribute';
          this.occi_String = 'occi.String';
          this.Ref_contents = 'contents';
          this.Ref_eGenericExceptions = 'eGenericExceptions';
          this.ecore_EDiagnosticChain = 'ecore.EDiagnosticChain';
          this.ecore_ETypeParameter = 'ecore.ETypeParameter';
          this.Ref_eClassifiers = 'eClassifiers';
          this.ecore_EInvocationTargetException = 'ecore.EInvocationTargetException';
          this.Ref_parent = 'parent';
          this.ecore_ELong = 'ecore.ELong';
          this.Ref_eAllGenericSuperTypes = 'eAllGenericSuperTypes';
          this.Ref_eOpposite = 'eOpposite';
          this.ecore_EEList = 'ecore.EEList';
          this.Ref_eClassifier = 'eClassifier';
          this.Att_value = 'value';
          this.ecore_EBigDecimal = 'ecore.EBigDecimal';
          this.Att_generated_KMF_ID = 'generated_KMF_ID';
          this.ecore_ETypedElement = 'ecore.ETypedElement';
          this.Ref_eAnnotations = 'eAnnotations';
          this.Ref_eSuperTypes = 'eSuperTypes';
          this.Ref_eAllAttributes = 'eAllAttributes';
          this.ecore_EBigInteger = 'ecore.EBigInteger';
          this.Ref_eTypeArguments = 'eTypeArguments';
          this.Ref_eTypeParameter = 'eTypeParameter';
          this.ecore_EByte = 'ecore.EByte';
          this.Ref_ePackage = 'ePackage';
          this.ecore_EModelElement = 'ecore.EModelElement';
          this.Ref_eAttributeType = 'eAttributeType';
          this.Ref_eIDAttribute = 'eIDAttribute';
          this.Ref_eAllContainments = 'eAllContainments';
          this.Ref_eAllOperations = 'eAllOperations';
          this.Ref_eReferenceType = 'eReferenceType';
          this.Ref_eSubpackages = 'eSubpackages';
          this.Ref_eExceptions = 'eExceptions';
          this.ecore_EJavaClass = 'ecore.EJavaClass';
          this.occi_Action = 'occi.Action';
          this.occi_URI = 'occi.URI';
          this.ecore_EDataType = 'ecore.EDataType';
          this.occi_Number = 'occi.Number';
          this.Att_defaultValue = 'defaultValue';
          this.Att_instance = 'instance';
          this.occi_Link = 'occi.Link';
          this.Ref_eTypeParameters = 'eTypeParameters';
          this.Att_lowerBound = 'lowerBound';
          this.Ref_target = 'target';
          this.Ref_eAttributes = 'eAttributes';
          this.Ref_type = 'type';
          this.occi_Entity = 'occi.Entity';
          this.Ref_mixins = 'mixins';
          this.Ref_eContainingClass = 'eContainingClass';
          this.Att_derived = 'derived';
          this.ecore_EEnumerator = 'ecore.EEnumerator';
          this.Ref_eFactoryInstance = 'eFactoryInstance';
          this.Att_iD = 'iD';
          this.Ref_eAllStructuralFeatures = 'eAllStructuralFeatures';
          this.Att_instanceClassName = 'instanceClassName';
          this.ecore_EFeatureMapEntry = 'ecore.EFeatureMapEntry';
          this.Ref_actions = 'actions';
          this.Ref_import = 'import';
        });
      }, /** @lends _.occi.util */ {
      }),
      factory: Kotlin.definePackage(null, /** @lends _.occi.factory */ {
        OcciFactory: Kotlin.createTrait(function () {
          return [_.org.kevoree.modeling.api.KMFFactory];
        }),
        DefaultOcciFactory: Kotlin.createClass(function () {
          return [_.occi.factory.OcciFactory];
        }, null, /** @lends _.occi.factory.DefaultOcciFactory.prototype */ {
          getVersion: function () {
            return '5.2.6-SNAPSHOT';
          },
          lookup: function (path) {
            return null;
          },
          createEAttribute: function () {
            var tempElem = new _.ecore.impl.EAttributeImpl();
            return tempElem;
          },
          createEAnnotation: function () {
            var tempElem = new _.ecore.impl.EAnnotationImpl();
            return tempElem;
          },
          createEClass: function () {
            var tempElem = new _.ecore.impl.EClassImpl();
            return tempElem;
          },
          createEDataType: function () {
            var tempElem = new _.ecore.impl.EDataTypeImpl();
            return tempElem;
          },
          createEEnum: function () {
            var tempElem = new _.ecore.impl.EEnumImpl();
            return tempElem;
          },
          createEEnumLiteral: function () {
            var tempElem = new _.ecore.impl.EEnumLiteralImpl();
            return tempElem;
          },
          createEFactory: function () {
            var tempElem = new _.ecore.impl.EFactoryImpl();
            return tempElem;
          },
          createEObject: function () {
            var tempElem = new _.ecore.impl.EObjectImpl();
            return tempElem;
          },
          createEOperation: function () {
            var tempElem = new _.ecore.impl.EOperationImpl();
            return tempElem;
          },
          createEPackage: function () {
            var tempElem = new _.ecore.impl.EPackageImpl();
            return tempElem;
          },
          createEParameter: function () {
            var tempElem = new _.ecore.impl.EParameterImpl();
            return tempElem;
          },
          createEReference: function () {
            var tempElem = new _.ecore.impl.EReferenceImpl();
            return tempElem;
          },
          createEStringToStringMapEntry: function () {
            var tempElem = new _.ecore.impl.EStringToStringMapEntryImpl();
            return tempElem;
          },
          createEGenericType: function () {
            var tempElem = new _.ecore.impl.EGenericTypeImpl();
            return tempElem;
          },
          createETypeParameter: function () {
            var tempElem = new _.ecore.impl.ETypeParameterImpl();
            return tempElem;
          },
          createAttribute: function () {
            var tempElem = new _.occi.impl.AttributeImpl();
            return tempElem;
          },
          createKind: function () {
            var tempElem = new _.occi.impl.KindImpl();
            return tempElem;
          },
          createAction: function () {
            var tempElem = new _.occi.impl.ActionImpl();
            return tempElem;
          },
          createMixin: function () {
            var tempElem = new _.occi.impl.MixinImpl();
            return tempElem;
          },
          createAttributeState: function () {
            var tempElem = new _.occi.impl.AttributeStateImpl();
            return tempElem;
          },
          createResource: function () {
            var tempElem = new _.occi.impl.ResourceImpl();
            return tempElem;
          },
          createLink: function () {
            var tempElem = new _.occi.impl.LinkImpl();
            return tempElem;
          },
          createExtension: function () {
            var tempElem = new _.occi.impl.ExtensionImpl();
            return tempElem;
          },
          createConfiguration: function () {
            var tempElem = new _.occi.impl.ConfigurationImpl();
            return tempElem;
          },
          create: function (metaClassName) {
            {
              if (metaClassName === _.occi.util.Constants.ecore_EAttribute) {
                return this.createEAttribute();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EAnnotation) {
                return this.createEAnnotation();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EClass) {
                return this.createEClass();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EDataType) {
                return this.createEDataType();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EEnum) {
                return this.createEEnum();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EEnumLiteral) {
                return this.createEEnumLiteral();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EFactory) {
                return this.createEFactory();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EObject) {
                return this.createEObject();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EOperation) {
                return this.createEOperation();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EPackage) {
                return this.createEPackage();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EParameter) {
                return this.createEParameter();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EReference) {
                return this.createEReference();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EStringToStringMapEntry) {
                return this.createEStringToStringMapEntry();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_EGenericType) {
                return this.createEGenericType();
              }
               else if (metaClassName === _.occi.util.Constants.ecore_ETypeParameter) {
                return this.createETypeParameter();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Attribute) {
                return this.createAttribute();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Kind) {
                return this.createKind();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Action) {
                return this.createAction();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Mixin) {
                return this.createMixin();
              }
               else if (metaClassName === _.occi.util.Constants.occi_AttributeState) {
                return this.createAttributeState();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Resource) {
                return this.createResource();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Link) {
                return this.createLink();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Extension) {
                return this.createExtension();
              }
               else if (metaClassName === _.occi.util.Constants.occi_Configuration) {
                return this.createConfiguration();
              }
               else {
                return null;
              }
            }
          },
          select: function (query) {
            return new Kotlin.ArrayList();
          },
          root: function (elem) {
            elem.is_root = true;
            elem.path_cache = '/';
          },
          createJSONSerializer: function () {
            return new _.org.kevoree.modeling.api.json.JSONModelSerializer();
          },
          createJSONLoader: function () {
            return new _.org.kevoree.modeling.api.json.JSONModelLoader(this);
          },
          createXMISerializer: function () {
            return new _.org.kevoree.modeling.api.xmi.XMIModelSerializer();
          },
          createXMILoader: function () {
            return new _.org.kevoree.modeling.api.xmi.XMIModelLoader(this);
          },
          createModelCompare: function () {
            return new _.org.kevoree.modeling.api.compare.ModelCompare(this);
          },
          createModelCloner: function () {
            return new _.org.kevoree.modeling.api.ModelCloner(this);
          },
          createModelPruner: function () {
            return new _.org.kevoree.modeling.api.ModelPruner(this);
          }
        })
      })
    }),
    ecore: Kotlin.definePackage(null, /** @lends _.ecore */ {
      EAttribute: Kotlin.createTrait(function () {
        return [_.ecore.EStructuralFeature, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EAttribute.prototype */ {
        iD: {
          get: function () {
            return this.$iD_krcw3c$;
          },
          set: function (tmp$0) {
            this.$iD_krcw3c$ = tmp$0;
          }
        },
        eAttributeType: {
          get: function () {
            return this.$eAttributeType_q3h36q$;
          },
          set: function (tmp$0) {
            this.$eAttributeType_q3h36q$ = tmp$0;
          }
        }
      }),
      EAnnotation: Kotlin.createTrait(function () {
        return [_.ecore.EModelElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EAnnotation.prototype */ {
        source: {
          get: function () {
            return this.$source_ecouxr$;
          },
          set: function (tmp$0) {
            this.$source_ecouxr$ = tmp$0;
          }
        },
        details: {
          get: function () {
            return this.$details_6wth6m$;
          },
          set: function (tmp$0) {
            this.$details_6wth6m$ = tmp$0;
          }
        },
        eModelElement: {
          get: function () {
            return this.$eModelElement_95pfv8$;
          },
          set: function (tmp$0) {
            this.$eModelElement_95pfv8$ = tmp$0;
          }
        },
        contents: {
          get: function () {
            return this.$contents_phq9gi$;
          },
          set: function (tmp$0) {
            this.$contents_phq9gi$ = tmp$0;
          }
        },
        references: {
          get: function () {
            return this.$references_pwu4ng$;
          },
          set: function (tmp$0) {
            this.$references_pwu4ng$ = tmp$0;
          }
        }
      }),
      EClass: Kotlin.createTrait(function () {
        return [_.ecore.EClassifier, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EClass.prototype */ {
        abstract: {
          get: function () {
            return this.$abstract_auf7rn$;
          },
          set: function (tmp$0) {
            this.$abstract_auf7rn$ = tmp$0;
          }
        },
        interface: {
          get: function () {
            return this.$interface_obtyso$;
          },
          set: function (tmp$0) {
            this.$interface_obtyso$ = tmp$0;
          }
        },
        eSuperTypes: {
          get: function () {
            return this.$eSuperTypes_z18acy$;
          },
          set: function (tmp$0) {
            this.$eSuperTypes_z18acy$ = tmp$0;
          }
        },
        eOperations: {
          get: function () {
            return this.$eOperations_7chpb4$;
          },
          set: function (tmp$0) {
            this.$eOperations_7chpb4$ = tmp$0;
          }
        },
        eAllAttributes: {
          get: function () {
            return this.$eAllAttributes_u48bj0$;
          },
          set: function (tmp$0) {
            this.$eAllAttributes_u48bj0$ = tmp$0;
          }
        },
        eAllReferences: {
          get: function () {
            return this.$eAllReferences_dx6f57$;
          },
          set: function (tmp$0) {
            this.$eAllReferences_dx6f57$ = tmp$0;
          }
        },
        eReferences: {
          get: function () {
            return this.$eReferences_fhkwu4$;
          },
          set: function (tmp$0) {
            this.$eReferences_fhkwu4$ = tmp$0;
          }
        },
        eAttributes: {
          get: function () {
            return this.$eAttributes_pgzjp$;
          },
          set: function (tmp$0) {
            this.$eAttributes_pgzjp$ = tmp$0;
          }
        },
        eAllContainments: {
          get: function () {
            return this.$eAllContainments_iz8kni$;
          },
          set: function (tmp$0) {
            this.$eAllContainments_iz8kni$ = tmp$0;
          }
        },
        eAllOperations: {
          get: function () {
            return this.$eAllOperations_y9v0op$;
          },
          set: function (tmp$0) {
            this.$eAllOperations_y9v0op$ = tmp$0;
          }
        },
        eAllStructuralFeatures: {
          get: function () {
            return this.$eAllStructuralFeatures_rcg4ft$;
          },
          set: function (tmp$0) {
            this.$eAllStructuralFeatures_rcg4ft$ = tmp$0;
          }
        },
        eAllSuperTypes: {
          get: function () {
            return this.$eAllSuperTypes_5mgydn$;
          },
          set: function (tmp$0) {
            this.$eAllSuperTypes_5mgydn$ = tmp$0;
          }
        },
        eIDAttribute: {
          get: function () {
            return this.$eIDAttribute_dkzqgd$;
          },
          set: function (tmp$0) {
            this.$eIDAttribute_dkzqgd$ = tmp$0;
          }
        },
        eStructuralFeatures: {
          get: function () {
            return this.$eStructuralFeatures_kl4fse$;
          },
          set: function (tmp$0) {
            this.$eStructuralFeatures_kl4fse$ = tmp$0;
          }
        },
        eGenericSuperTypes: {
          get: function () {
            return this.$eGenericSuperTypes_fkijwf$;
          },
          set: function (tmp$0) {
            this.$eGenericSuperTypes_fkijwf$ = tmp$0;
          }
        },
        eAllGenericSuperTypes: {
          get: function () {
            return this.$eAllGenericSuperTypes_7y88oo$;
          },
          set: function (tmp$0) {
            this.$eAllGenericSuperTypes_7y88oo$ = tmp$0;
          }
        }
      }),
      EClassifier: Kotlin.createTrait(function () {
        return [_.ecore.ENamedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EClassifier.prototype */ {
        instanceClassName: {
          get: function () {
            return this.$instanceClassName_imuo3o$;
          },
          set: function (tmp$0) {
            this.$instanceClassName_imuo3o$ = tmp$0;
          }
        },
        instanceClass: {
          get: function () {
            return this.$instanceClass_ebsuvl$;
          },
          set: function (tmp$0) {
            this.$instanceClass_ebsuvl$ = tmp$0;
          }
        },
        defaultValue: {
          get: function () {
            return this.$defaultValue_is8zi$;
          },
          set: function (tmp$0) {
            this.$defaultValue_is8zi$ = tmp$0;
          }
        },
        instanceTypeName: {
          get: function () {
            return this.$instanceTypeName_7790no$;
          },
          set: function (tmp$0) {
            this.$instanceTypeName_7790no$ = tmp$0;
          }
        },
        ePackage: {
          get: function () {
            return this.$ePackage_8k96ur$;
          },
          set: function (tmp$0) {
            this.$ePackage_8k96ur$ = tmp$0;
          }
        },
        eTypeParameters: {
          get: function () {
            return this.$eTypeParameters_drwjt$;
          },
          set: function (tmp$0) {
            this.$eTypeParameters_drwjt$ = tmp$0;
          }
        }
      }),
      EDataType: Kotlin.createTrait(function () {
        return [_.ecore.EClassifier, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EDataType.prototype */ {
        serializable: {
          get: function () {
            return this.$serializable_evfmz2$;
          },
          set: function (tmp$0) {
            this.$serializable_evfmz2$ = tmp$0;
          }
        }
      }),
      EEnum: Kotlin.createTrait(function () {
        return [_.ecore.EDataType, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EEnum.prototype */ {
        eLiterals: {
          get: function () {
            return this.$eLiterals_bxs1mx$;
          },
          set: function (tmp$0) {
            this.$eLiterals_bxs1mx$ = tmp$0;
          }
        }
      }),
      EEnumLiteral: Kotlin.createTrait(function () {
        return [_.ecore.ENamedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EEnumLiteral.prototype */ {
        value: {
          get: function () {
            return this.$value_8yr6c6$;
          },
          set: function (tmp$0) {
            this.$value_8yr6c6$ = tmp$0;
          }
        },
        instance: {
          get: function () {
            return this.$instance_q3jhm8$;
          },
          set: function (tmp$0) {
            this.$instance_q3jhm8$ = tmp$0;
          }
        },
        literal: {
          get: function () {
            return this.$literal_k7k9n8$;
          },
          set: function (tmp$0) {
            this.$literal_k7k9n8$ = tmp$0;
          }
        },
        eEnum: {
          get: function () {
            return this.$eEnum_8owu3v$;
          },
          set: function (tmp$0) {
            this.$eEnum_8owu3v$ = tmp$0;
          }
        }
      }),
      EFactory: Kotlin.createTrait(function () {
        return [_.ecore.EModelElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EFactory.prototype */ {
        ePackage: {
          get: function () {
            return this.$ePackage_dacohs$;
          },
          set: function (tmp$0) {
            this.$ePackage_dacohs$ = tmp$0;
          }
        }
      }),
      EModelElement: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EModelElement.prototype */ {
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_mwxtcq$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_mwxtcq$ = tmp$0;
          }
        },
        eAnnotations: {
          get: function () {
            return this.$eAnnotations_d7csgx$;
          },
          set: function (tmp$0) {
            this.$eAnnotations_d7csgx$ = tmp$0;
          }
        }
      }),
      ENamedElement: Kotlin.createTrait(function () {
        return [_.ecore.EModelElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.ENamedElement.prototype */ {
        name: {
          get: function () {
            return this.$name_a291c5$;
          },
          set: function (tmp$0) {
            this.$name_a291c5$ = tmp$0;
          }
        }
      }),
      EObject: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EObject.prototype */ {
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_e74y86$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_e74y86$ = tmp$0;
          }
        }
      }),
      EOperation: Kotlin.createTrait(function () {
        return [_.ecore.ETypedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EOperation.prototype */ {
        eContainingClass: {
          get: function () {
            return this.$eContainingClass_bmq37r$;
          },
          set: function (tmp$0) {
            this.$eContainingClass_bmq37r$ = tmp$0;
          }
        },
        eTypeParameters: {
          get: function () {
            return this.$eTypeParameters_1m7zzb$;
          },
          set: function (tmp$0) {
            this.$eTypeParameters_1m7zzb$ = tmp$0;
          }
        },
        eParameters: {
          get: function () {
            return this.$eParameters_z32bg3$;
          },
          set: function (tmp$0) {
            this.$eParameters_z32bg3$ = tmp$0;
          }
        },
        eExceptions: {
          get: function () {
            return this.$eExceptions_6mgm93$;
          },
          set: function (tmp$0) {
            this.$eExceptions_6mgm93$ = tmp$0;
          }
        },
        eGenericExceptions: {
          get: function () {
            return this.$eGenericExceptions_7ry288$;
          },
          set: function (tmp$0) {
            this.$eGenericExceptions_7ry288$ = tmp$0;
          }
        }
      }),
      EPackage: Kotlin.createTrait(function () {
        return [_.ecore.ENamedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EPackage.prototype */ {
        nsURI: {
          get: function () {
            return this.$nsURI_sjx2qs$;
          },
          set: function (tmp$0) {
            this.$nsURI_sjx2qs$ = tmp$0;
          }
        },
        nsPrefix: {
          get: function () {
            return this.$nsPrefix_ydlvx6$;
          },
          set: function (tmp$0) {
            this.$nsPrefix_ydlvx6$ = tmp$0;
          }
        },
        eFactoryInstance: {
          get: function () {
            return this.$eFactoryInstance_rilj99$;
          },
          set: function (tmp$0) {
            this.$eFactoryInstance_rilj99$ = tmp$0;
          }
        },
        eClassifiers: {
          get: function () {
            return this.$eClassifiers_iurte8$;
          },
          set: function (tmp$0) {
            this.$eClassifiers_iurte8$ = tmp$0;
          }
        },
        eSubpackages: {
          get: function () {
            return this.$eSubpackages_gh6cdn$;
          },
          set: function (tmp$0) {
            this.$eSubpackages_gh6cdn$ = tmp$0;
          }
        },
        eSuperPackage: {
          get: function () {
            return this.$eSuperPackage_62x3il$;
          },
          set: function (tmp$0) {
            this.$eSuperPackage_62x3il$ = tmp$0;
          }
        }
      }),
      EParameter: Kotlin.createTrait(function () {
        return [_.ecore.ETypedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EParameter.prototype */ {
        eOperation: {
          get: function () {
            return this.$eOperation_xg1qle$;
          },
          set: function (tmp$0) {
            this.$eOperation_xg1qle$ = tmp$0;
          }
        }
      }),
      EReference: Kotlin.createTrait(function () {
        return [_.ecore.EStructuralFeature, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EReference.prototype */ {
        containment: {
          get: function () {
            return this.$containment_co3iwk$;
          },
          set: function (tmp$0) {
            this.$containment_co3iwk$ = tmp$0;
          }
        },
        container: {
          get: function () {
            return this.$container_r1erp9$;
          },
          set: function (tmp$0) {
            this.$container_r1erp9$ = tmp$0;
          }
        },
        resolveProxies: {
          get: function () {
            return this.$resolveProxies_k2fmny$;
          },
          set: function (tmp$0) {
            this.$resolveProxies_k2fmny$ = tmp$0;
          }
        },
        eOpposite: {
          get: function () {
            return this.$eOpposite_cyga3y$;
          },
          set: function (tmp$0) {
            this.$eOpposite_cyga3y$ = tmp$0;
          }
        },
        eReferenceType: {
          get: function () {
            return this.$eReferenceType_vjyn5u$;
          },
          set: function (tmp$0) {
            this.$eReferenceType_vjyn5u$ = tmp$0;
          }
        },
        eKeys: {
          get: function () {
            return this.$eKeys_x32yx1$;
          },
          set: function (tmp$0) {
            this.$eKeys_x32yx1$ = tmp$0;
          }
        }
      }),
      EStructuralFeature: Kotlin.createTrait(function () {
        return [_.ecore.ETypedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EStructuralFeature.prototype */ {
        changeable: {
          get: function () {
            return this.$changeable_t06iey$;
          },
          set: function (tmp$0) {
            this.$changeable_t06iey$ = tmp$0;
          }
        },
        volatile: {
          get: function () {
            return this.$volatile_ew224s$;
          },
          set: function (tmp$0) {
            this.$volatile_ew224s$ = tmp$0;
          }
        },
        transient: {
          get: function () {
            return this.$transient_qcv07u$;
          },
          set: function (tmp$0) {
            this.$transient_qcv07u$ = tmp$0;
          }
        },
        defaultValueLiteral: {
          get: function () {
            return this.$defaultValueLiteral_qrld5d$;
          },
          set: function (tmp$0) {
            this.$defaultValueLiteral_qrld5d$ = tmp$0;
          }
        },
        defaultValue: {
          get: function () {
            return this.$defaultValue_dzk9r4$;
          },
          set: function (tmp$0) {
            this.$defaultValue_dzk9r4$ = tmp$0;
          }
        },
        unsettable: {
          get: function () {
            return this.$unsettable_sub7d7$;
          },
          set: function (tmp$0) {
            this.$unsettable_sub7d7$ = tmp$0;
          }
        },
        derived: {
          get: function () {
            return this.$derived_9frqfn$;
          },
          set: function (tmp$0) {
            this.$derived_9frqfn$ = tmp$0;
          }
        },
        eContainingClass: {
          get: function () {
            return this.$eContainingClass_gp1d79$;
          },
          set: function (tmp$0) {
            this.$eContainingClass_gp1d79$ = tmp$0;
          }
        }
      }),
      ETypedElement: Kotlin.createTrait(function () {
        return [_.ecore.ENamedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.ETypedElement.prototype */ {
        ordered: {
          get: function () {
            return this.$ordered_16u1f0$;
          },
          set: function (tmp$0) {
            this.$ordered_16u1f0$ = tmp$0;
          }
        },
        unique: {
          get: function () {
            return this.$unique_7eiu9e$;
          },
          set: function (tmp$0) {
            this.$unique_7eiu9e$ = tmp$0;
          }
        },
        lowerBound: {
          get: function () {
            return this.$lowerBound_9ie4wu$;
          },
          set: function (tmp$0) {
            this.$lowerBound_9ie4wu$ = tmp$0;
          }
        },
        upperBound: {
          get: function () {
            return this.$upperBound_wqdbh9$;
          },
          set: function (tmp$0) {
            this.$upperBound_wqdbh9$ = tmp$0;
          }
        },
        many: {
          get: function () {
            return this.$many_3m96yo$;
          },
          set: function (tmp$0) {
            this.$many_3m96yo$ = tmp$0;
          }
        },
        required: {
          get: function () {
            return this.$required_9yxbnk$;
          },
          set: function (tmp$0) {
            this.$required_9yxbnk$ = tmp$0;
          }
        },
        eType: {
          get: function () {
            return this.$eType_trooji$;
          },
          set: function (tmp$0) {
            this.$eType_trooji$ = tmp$0;
          }
        },
        eGenericType: {
          get: function () {
            return this.$eGenericType_blj2kz$;
          },
          set: function (tmp$0) {
            this.$eGenericType_blj2kz$ = tmp$0;
          }
        }
      }),
      EStringToStringMapEntry: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EStringToStringMapEntry.prototype */ {
        key: {
          get: function () {
            return this.$key_x27kkf$;
          },
          set: function (tmp$0) {
            this.$key_x27kkf$ = tmp$0;
          }
        },
        value: {
          get: function () {
            return this.$value_lcqhv5$;
          },
          set: function (tmp$0) {
            this.$value_lcqhv5$ = tmp$0;
          }
        },
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_a3k4zq$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_a3k4zq$ = tmp$0;
          }
        }
      }),
      EGenericType: Kotlin.createTrait(function () {
        return [_.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.EGenericType.prototype */ {
        generated_KMF_ID: {
          get: function () {
            return this.$generated_KMF_ID_kc236q$;
          },
          set: function (tmp$0) {
            this.$generated_KMF_ID_kc236q$ = tmp$0;
          }
        },
        eUpperBound: {
          get: function () {
            return this.$eUpperBound_2xl6sp$;
          },
          set: function (tmp$0) {
            this.$eUpperBound_2xl6sp$ = tmp$0;
          }
        },
        eTypeArguments: {
          get: function () {
            return this.$eTypeArguments_5wg9ld$;
          },
          set: function (tmp$0) {
            this.$eTypeArguments_5wg9ld$ = tmp$0;
          }
        },
        eRawType: {
          get: function () {
            return this.$eRawType_m5xlvv$;
          },
          set: function (tmp$0) {
            this.$eRawType_m5xlvv$ = tmp$0;
          }
        },
        eLowerBound: {
          get: function () {
            return this.$eLowerBound_kadzrq$;
          },
          set: function (tmp$0) {
            this.$eLowerBound_kadzrq$ = tmp$0;
          }
        },
        eTypeParameter: {
          get: function () {
            return this.$eTypeParameter_ay1932$;
          },
          set: function (tmp$0) {
            this.$eTypeParameter_ay1932$ = tmp$0;
          }
        },
        eClassifier: {
          get: function () {
            return this.$eClassifier_q8n6xa$;
          },
          set: function (tmp$0) {
            this.$eClassifier_q8n6xa$ = tmp$0;
          }
        }
      }),
      ETypeParameter: Kotlin.createTrait(function () {
        return [_.ecore.ENamedElement, _.org.kevoree.modeling.api.KMFContainer];
      }, /** @lends _.ecore.ETypeParameter.prototype */ {
        eBounds: {
          get: function () {
            return this.$eBounds_ij7a0w$;
          },
          set: function (tmp$0) {
            this.$eBounds_ij7a0w$ = tmp$0;
          }
        }
      }),
      impl: Kotlin.definePackage(null, /** @lends _.ecore.impl */ {
        EObjectImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EObject, _.ecore.EObject, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_ci4bn4$ = null;
          this.$internal_containmentRefName_4pzqm8$ = null;
          this.$internal_unsetCmd_3bgk7v$ = null;
          this.$internal_readOnlyElem_96l2u3$ = false;
          this.$internal_recursive_readOnlyElem_951w7m$ = false;
          this.$internal_inboundReferences_dje9rn$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_o1kppr$ = false;
          this.$internal_is_deleted_9pdjrs$ = false;
          this.$is_root_cu8olz$ = false;
          this.$internal_modelElementListeners_82yj2w$ = null;
          this.$internal_modelTreeListeners_6n8ob8$ = null;
          this.$path_cache_qmp992$ = null;
          this.$key_cache_9js1g$ = null;
          this.$generated_KMF_ID_6aamwk$ = '' + Math.random() + (new Date()).getTime();
        }, /** @lends _.ecore.impl.EObjectImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_ci4bn4$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_ci4bn4$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_4pzqm8$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_4pzqm8$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_3bgk7v$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_3bgk7v$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_96l2u3$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_96l2u3$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_951w7m$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_951w7m$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_dje9rn$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_dje9rn$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_o1kppr$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_o1kppr$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_9pdjrs$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_9pdjrs$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_cu8olz$;
            },
            set: function (tmp$0) {
              this.$is_root_cu8olz$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_82yj2w$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_82yj2w$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_6n8ob8$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_6n8ob8$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_qmp992$;
            },
            set: function (tmp$0) {
              this.$path_cache_qmp992$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_9js1g$;
            },
            set: function (tmp$0) {
              this.$key_cache_9js1g$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$0;
              ((tmp$0 = this.internal_unsetCmd) != null ? tmp$0 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_6aamwk$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_6aamwk$;
              this.$generated_KMF_ID_6aamwk$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findByID: function (relationName, idP) {
            {
              {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EObject;
          }
        }),
        EReferenceImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EReference, _.ecore.EReference, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_xisnty$ = null;
          this.$internal_containmentRefName_n7h23u$ = null;
          this.$internal_unsetCmd_iqncs1$ = null;
          this.$internal_readOnlyElem_cm25hr$ = false;
          this.$internal_recursive_readOnlyElem_byq30c$ = false;
          this.$internal_inboundReferences_euvyw3$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_ra4k3f$ = false;
          this.$internal_is_deleted_ypkm9u$ = false;
          this.$is_root_ofbob7$ = false;
          this.$internal_modelElementListeners_3l9i0e$ = null;
          this.$internal_modelTreeListeners_la84eu$ = null;
          this.$path_cache_3p7mhg$ = null;
          this.$key_cache_d191um$ = null;
          this.$generated_KMF_ID_h4hlme$ = '' + Math.random() + (new Date()).getTime();
          this.$name_k6p9u7$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$ordered_tz1ml3$ = true;
          this.$unique_azb42d$ = true;
          this.$lowerBound_33karj$ = _.occi.util.Constants.INT_DEFAULTVAL;
          this.$upperBound_k4evsw$ = 1;
          this.$many_k6omw3$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$required_wovmql$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$changeable_ctzixa$ = true;
          this.$volatile_dm7sbk$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$transient_d47fy2$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$defaultValueLiteral_pduvc5$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$defaultValue_seqvqs$ = null;
          this.$unsettable_q0lv49$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$derived_fq42zd$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$containment_2ex166$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$container_xpgdj1$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$resolveProxies_h031xg$ = true;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$eGenericType_gkhtw0$ = null;
          this.$eType_dnf7ph$ = null;
          this.$eContainingClass_trrbvt$ = null;
          this.$eOpposite_2o7dd4$ = null;
          this._eKeys = new _.java.util.concurrent.ConcurrentHashMap();
          this.$eReferenceType_ymb7wc$ = null;
        }, /** @lends _.ecore.impl.EReferenceImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_xisnty$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_xisnty$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_n7h23u$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_n7h23u$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_iqncs1$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_iqncs1$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_cm25hr$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_cm25hr$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_byq30c$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_byq30c$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_euvyw3$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_euvyw3$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_ra4k3f$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_ra4k3f$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_ypkm9u$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_ypkm9u$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_ofbob7$;
            },
            set: function (tmp$0) {
              this.$is_root_ofbob7$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_3l9i0e$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_3l9i0e$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_la84eu$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_la84eu$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_3p7mhg$;
            },
            set: function (tmp$0) {
              this.$path_cache_3p7mhg$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_d191um$;
            },
            set: function (tmp$0) {
              this.$key_cache_d191um$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.eType != null) {
              var tmp$1;
              ((tmp$1 = this.eType) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
              this.eType = null;
            }
            if (this.eGenericType != null) {
              var tmp$2;
              ((tmp$2 = this.eGenericType) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              this.eGenericType = null;
            }
            if (this.eContainingClass != null) {
              var tmp$3, tmp$4;
              ((tmp$3 = this.eContainingClass) != null ? tmp$3 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
              ((tmp$4 = this.eContainingClass) != null ? tmp$4 : Kotlin.throwNPE()).delete();
              this.eContainingClass = null;
            }
            if (this.eOpposite != null) {
              var tmp$5;
              ((tmp$5 = this.eOpposite) != null ? tmp$5 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eOpposite);
              this.eOpposite = null;
            }
            if (this.eReferenceType != null) {
              var tmp$6;
              ((tmp$6 = this.eReferenceType) != null ? tmp$6 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eReferenceType);
              this.eReferenceType = null;
            }
            this.removeAllEKeys();
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$7;
              ((tmp$7 = this.internal_unsetCmd) != null ? tmp$7 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_h4hlme$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_h4hlme$;
              this.$generated_KMF_ID_h4hlme$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_k6p9u7$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_k6p9u7$;
              this.$name_k6p9u7$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withOrdered: function (p) {
            this.ordered = p;
            return this;
          },
          ordered: {
            get: function () {
              return this.$ordered_tz1ml3$;
            },
            set: function (iP) {
              this.internal_ordered(iP, true);
            }
          },
          internal_ordered: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.ordered)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$ordered_tz1ml3$;
              this.$ordered_tz1ml3$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_ordered, this.ordered, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUnique: function (p) {
            this.unique = p;
            return this;
          },
          unique: {
            get: function () {
              return this.$unique_azb42d$;
            },
            set: function (iP) {
              this.internal_unique(iP, true);
            }
          },
          internal_unique: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.unique)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$unique_azb42d$;
              this.$unique_azb42d$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_unique, this.unique, kmf_previousVal, this, oldPath));
              }
            }
          },
          withLowerBound: function (p) {
            this.lowerBound = p;
            return this;
          },
          lowerBound: {
            get: function () {
              return this.$lowerBound_33karj$;
            },
            set: function (iP) {
              this.internal_lowerBound(iP, true);
            }
          },
          internal_lowerBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.lowerBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$lowerBound_33karj$;
              this.$lowerBound_33karj$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_lowerBound, this.lowerBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUpperBound: function (p) {
            this.upperBound = p;
            return this;
          },
          upperBound: {
            get: function () {
              return this.$upperBound_k4evsw$;
            },
            set: function (iP) {
              this.internal_upperBound(iP, true);
            }
          },
          internal_upperBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.upperBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$upperBound_k4evsw$;
              this.$upperBound_k4evsw$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_upperBound, this.upperBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withMany: function (p) {
            this.many = p;
            return this;
          },
          many: {
            get: function () {
              return this.$many_k6omw3$;
            },
            set: function (iP) {
              this.internal_many(iP, true);
            }
          },
          internal_many: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.many)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$many_k6omw3$;
              this.$many_k6omw3$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_many, this.many, kmf_previousVal, this, oldPath));
              }
            }
          },
          withRequired: function (p) {
            this.required = p;
            return this;
          },
          required: {
            get: function () {
              return this.$required_wovmql$;
            },
            set: function (iP) {
              this.internal_required(iP, true);
            }
          },
          internal_required: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.required)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$required_wovmql$;
              this.$required_wovmql$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_required, this.required, kmf_previousVal, this, oldPath));
              }
            }
          },
          withChangeable: function (p) {
            this.changeable = p;
            return this;
          },
          changeable: {
            get: function () {
              return this.$changeable_ctzixa$;
            },
            set: function (iP) {
              this.internal_changeable(iP, true);
            }
          },
          internal_changeable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.changeable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$changeable_ctzixa$;
              this.$changeable_ctzixa$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_changeable, this.changeable, kmf_previousVal, this, oldPath));
              }
            }
          },
          withVolatile: function (p) {
            this.volatile = p;
            return this;
          },
          volatile: {
            get: function () {
              return this.$volatile_dm7sbk$;
            },
            set: function (iP) {
              this.internal_volatile(iP, true);
            }
          },
          internal_volatile: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.volatile)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$volatile_dm7sbk$;
              this.$volatile_dm7sbk$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_volatile, this.volatile, kmf_previousVal, this, oldPath));
              }
            }
          },
          withTransient: function (p) {
            this.transient = p;
            return this;
          },
          transient: {
            get: function () {
              return this.$transient_d47fy2$;
            },
            set: function (iP) {
              this.internal_transient(iP, true);
            }
          },
          internal_transient: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.transient)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$transient_d47fy2$;
              this.$transient_d47fy2$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_transient, this.transient, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValueLiteral: function (p) {
            this.defaultValueLiteral = p;
            return this;
          },
          defaultValueLiteral: {
            get: function () {
              return this.$defaultValueLiteral_pduvc5$;
            },
            set: function (iP) {
              this.internal_defaultValueLiteral(iP, true);
            }
          },
          internal_defaultValueLiteral: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValueLiteral)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValueLiteral_pduvc5$;
              this.$defaultValueLiteral_pduvc5$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValueLiteral, this.defaultValueLiteral, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValue: function (p) {
            this.defaultValue = p;
            return this;
          },
          defaultValue: {
            get: function () {
              return this.$defaultValue_seqvqs$;
            },
            set: function (iP) {
              this.internal_defaultValue(iP, true);
            }
          },
          internal_defaultValue: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValue)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValue_seqvqs$;
              this.$defaultValue_seqvqs$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValue, this.defaultValue, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUnsettable: function (p) {
            this.unsettable = p;
            return this;
          },
          unsettable: {
            get: function () {
              return this.$unsettable_q0lv49$;
            },
            set: function (iP) {
              this.internal_unsettable(iP, true);
            }
          },
          internal_unsettable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.unsettable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$unsettable_q0lv49$;
              this.$unsettable_q0lv49$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_unsettable, this.unsettable, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDerived: function (p) {
            this.derived = p;
            return this;
          },
          derived: {
            get: function () {
              return this.$derived_fq42zd$;
            },
            set: function (iP) {
              this.internal_derived(iP, true);
            }
          },
          internal_derived: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.derived)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$derived_fq42zd$;
              this.$derived_fq42zd$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_derived, this.derived, kmf_previousVal, this, oldPath));
              }
            }
          },
          withContainment: function (p) {
            this.containment = p;
            return this;
          },
          containment: {
            get: function () {
              return this.$containment_2ex166$;
            },
            set: function (iP) {
              this.internal_containment(iP, true);
            }
          },
          internal_containment: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.containment)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$containment_2ex166$;
              this.$containment_2ex166$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_containment, this.containment, kmf_previousVal, this, oldPath));
              }
            }
          },
          withContainer: function (p) {
            this.container = p;
            return this;
          },
          container: {
            get: function () {
              return this.$container_xpgdj1$;
            },
            set: function (iP) {
              this.internal_container(iP, true);
            }
          },
          internal_container: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.container)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$container_xpgdj1$;
              this.$container_xpgdj1$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_container, this.container, kmf_previousVal, this, oldPath));
              }
            }
          },
          withResolveProxies: function (p) {
            this.resolveProxies = p;
            return this;
          },
          resolveProxies: {
            get: function () {
              return this.$resolveProxies_h031xg$;
            },
            set: function (iP) {
              this.internal_resolveProxies(iP, true);
            }
          },
          internal_resolveProxies: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.resolveProxies)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$resolveProxies_h031xg$;
              this.$resolveProxies_h031xg$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_resolveProxies, this.resolveProxies, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eGenericType: {
            get: function () {
              return this.$eGenericType_gkhtw0$;
            },
            set: function (eGenericTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eGenericType(eGenericTypeP, true, true);
            }
          },
          internal_eGenericType: function (eGenericTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eGenericType_gkhtw0$, eGenericTypeP)) {
              if (this.$eGenericType_gkhtw0$ != null) {
                var tmp$0;
                ((tmp$0 = this.$eGenericType_gkhtw0$) != null ? tmp$0 : Kotlin.throwNPE()).setEContainer(null, null, null);
              }
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eGenericType, null), _.occi.util.Constants.Ref_eGenericType);
              }
              var kmf_previousVal = this.$eGenericType_gkhtw0$;
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              }
               else {
                if (this.$eGenericType_gkhtw0$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eGenericType_gkhtw0$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
                }
              }
              this.$eGenericType_gkhtw0$ = eGenericTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericType, eGenericTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEGenericType: function (ref) {
            return this;
          },
          eType: {
            get: function () {
              return this.$eType_dnf7ph$;
            },
            set: function (eTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eType(eTypeP, true, true);
            }
          },
          internal_eType: function (eTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eType_dnf7ph$, eTypeP)) {
              var kmf_previousVal = this.$eType_dnf7ph$;
              if (eTypeP != null) {
                (eTypeP != null ? eTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eType);
              }
               else {
                if (this.$eType_dnf7ph$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eType_dnf7ph$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
                }
              }
              this.$eType_dnf7ph$ = eTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eType, eTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEType: function (ref) {
            return this;
          },
          eContainingClass: {
            get: function () {
              return this.$eContainingClass_trrbvt$;
            },
            set: function (eContainingClassP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eContainingClass(eContainingClassP, true, true);
            }
          },
          internal_eContainingClass: function (eContainingClassP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eContainingClass_trrbvt$, eContainingClassP)) {
              if (setOpposite) {
                if (this.$eContainingClass_trrbvt$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eContainingClass_trrbvt$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eStructuralFeatures, this, false, fireEvents);
                }
                if (eContainingClassP != null) {
                  eContainingClassP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eStructuralFeatures, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eContainingClass_trrbvt$;
              if (eContainingClassP != null) {
                (eContainingClassP != null ? eContainingClassP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
              }
               else {
                if (this.$eContainingClass_trrbvt$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eContainingClass_trrbvt$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
                }
              }
              this.$eContainingClass_trrbvt$ = eContainingClassP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eContainingClass, eContainingClassP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEContainingClass: function (ref) {
            return this;
          },
          eOpposite: {
            get: function () {
              return this.$eOpposite_2o7dd4$;
            },
            set: function (eOppositeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eOpposite(eOppositeP, true, true);
            }
          },
          internal_eOpposite: function (eOppositeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eOpposite_2o7dd4$, eOppositeP)) {
              var kmf_previousVal = this.$eOpposite_2o7dd4$;
              if (eOppositeP != null) {
                (eOppositeP != null ? eOppositeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eOpposite);
              }
               else {
                if (this.$eOpposite_2o7dd4$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eOpposite_2o7dd4$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eOpposite);
                }
              }
              this.$eOpposite_2o7dd4$ = eOppositeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eOpposite, eOppositeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEOpposite: function (ref) {
            return this;
          },
          eKeys: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eKeys.values());
            },
            set: function (eKeysP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eKeysP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eKeys(eKeysP, true, true);
            }
          },
          internal_eKeys: function (eKeysP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eKeys.values(), eKeysP)) {
              var kmf_previousVal = this._eKeys;
              this._eKeys.clear();
              {
                var tmp$0 = eKeysP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eKeys.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eKeys);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eKeys, eKeysP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEKeys: function (eKeysP) {
            var _key_ = eKeysP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eKeys.containsKey_za3rmp$(_key_)) {
              this._eKeys.put_wn2jw4$(_key_, eKeysP);
              eKeysP.addInboundReference(this, _.occi.util.Constants.Ref_eKeys);
            }
          },
          addEKeys: function (eKeysP) {
            this.internal_addEKeys(eKeysP, true, true);
            return this;
          },
          addAllEKeys: function (eKeysP) {
            this.internal_addAllEKeys(eKeysP, true, true);
            return this;
          },
          internal_addEKeys: function (eKeysP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEKeys(eKeysP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eKeys, eKeysP, null, this, this.path()));
            }
          },
          internal_addAllEKeys: function (eKeysP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eKeysP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEKeys(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eKeysP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEKeys(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eKeys, eKeysP, null, this, this.path()));
            }
          },
          removeEKeys: function (eKeysP) {
            this.internal_removeEKeys(eKeysP, true, true);
            return this;
          },
          removeAllEKeys: function () {
            this.internal_removeAllEKeys(true, true);
            return this;
          },
          internal_removeEKeys: function (eKeysP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eKeys.size() !== 0 && this._eKeys.containsKey_za3rmp$(eKeysP.internalGetKey())) {
              var previousPathToBeRemoved = eKeysP.path();
              this._eKeys.remove_za3rmp$(eKeysP.internalGetKey());
              eKeysP.removeInboundReference(this, _.occi.util.Constants.Ref_eKeys);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eKeys, eKeysP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEKeys: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eKeys;
            this._eKeys.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eKeys, temp_els, null, this, this.path()));
            }
          },
          eReferenceType: {
            get: function () {
              return this.$eReferenceType_ymb7wc$;
            },
            set: function (eReferenceTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eReferenceType(eReferenceTypeP, true, true);
            }
          },
          internal_eReferenceType: function (eReferenceTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eReferenceType_ymb7wc$, eReferenceTypeP)) {
              var kmf_previousVal = this.$eReferenceType_ymb7wc$;
              if (eReferenceTypeP != null) {
                (eReferenceTypeP != null ? eReferenceTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eReferenceType);
              }
               else {
                if (this.$eReferenceType_ymb7wc$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eReferenceType_ymb7wc$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eReferenceType);
                }
              }
              this.$eReferenceType_ymb7wc$ = eReferenceTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eReferenceType, eReferenceTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEReferenceType: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_ordered) {
                this.internal_ordered(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_unique) {
                this.internal_unique(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_lowerBound) {
                this.internal_lowerBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_upperBound) {
                this.internal_upperBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_many) {
                this.internal_many(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_required) {
                this.internal_required(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_changeable) {
                this.internal_changeable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_volatile) {
                this.internal_volatile(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_transient) {
                this.internal_transient(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValueLiteral) {
                this.internal_defaultValueLiteral(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValue) {
                this.internal_defaultValue(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_unsettable) {
                this.internal_unsettable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_derived) {
                this.internal_derived(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_containment) {
                this.internal_containment(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_container) {
                this.internal_container(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_resolveProxies) {
                this.internal_resolveProxies(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eGenericType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eGenericType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eContainingClass) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eContainingClass(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eContainingClass(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eContainingClass(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eOpposite) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eOpposite(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eOpposite(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eOpposite(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eReferenceType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eReferenceType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eReferenceType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eReferenceType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eKeys) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEKeys(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEKeys(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEKeys(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEKeys();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eKeys.size() !== 0 && this._eKeys.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eKeys.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eKeys.remove_za3rmp$(value);
                      this._eKeys.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findEKeysByID: function (key) {
            return this._eKeys.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eType) {
                var objFound = this.eType;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eGenericType) {
                var objFound_0 = this.eGenericType;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eContainingClass) {
                var objFound_1 = this.eContainingClass;
                if (objFound_1 != null && Kotlin.equals(objFound_1.internalGetKey(), idP)) {
                  return objFound_1;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eOpposite) {
                var objFound_2 = this.eOpposite;
                if (objFound_2 != null && Kotlin.equals(objFound_2.internalGetKey(), idP)) {
                  return objFound_2;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eReferenceType) {
                var objFound_3 = this.eReferenceType;
                if (objFound_3 != null && Kotlin.equals(objFound_3.internalGetKey(), idP)) {
                  return objFound_3;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eKeys) {
                return this.findEKeysByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eGenericType, _.occi.util.Constants.ecore_EGenericType)) {
                this.internal_visit(visitor, this.eGenericType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eGenericType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eGenericType);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eType, _.occi.util.Constants.ecore_EClassifier)) {
                this.internal_visit(visitor, this.eType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eContainingClass, _.occi.util.Constants.ecore_EClass)) {
                this.internal_visit(visitor, this.eContainingClass, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eContainingClass);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eContainingClass);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eOpposite, _.occi.util.Constants.ecore_EReference)) {
                this.internal_visit(visitor, this.eOpposite, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eOpposite);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eOpposite);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eReferenceType, _.occi.util.Constants.ecore_EClass)) {
                this.internal_visit(visitor, this.eReferenceType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eReferenceType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eReferenceType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eKeys, _.occi.util.Constants.ecore_EAttribute)) {
                {
                  var tmp$1 = this._eKeys.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eKeys.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eKeys);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eKeys);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.container, _.occi.util.Constants.Att_container, this);
            visitor.visit(this.ordered, _.occi.util.Constants.Att_ordered, this);
            visitor.visit(this.upperBound, _.occi.util.Constants.Att_upperBound, this);
            visitor.visit(this.defaultValue, _.occi.util.Constants.Att_defaultValue, this);
            visitor.visit(this.volatile, _.occi.util.Constants.Att_volatile, this);
            visitor.visit(this.many, _.occi.util.Constants.Att_many, this);
            visitor.visit(this.required, _.occi.util.Constants.Att_required, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
            visitor.visit(this.defaultValueLiteral, _.occi.util.Constants.Att_defaultValueLiteral, this);
            visitor.visit(this.containment, _.occi.util.Constants.Att_containment, this);
            visitor.visit(this.unsettable, _.occi.util.Constants.Att_unsettable, this);
            visitor.visit(this.transient, _.occi.util.Constants.Att_transient, this);
            visitor.visit(this.unique, _.occi.util.Constants.Att_unique, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.changeable, _.occi.util.Constants.Att_changeable, this);
            visitor.visit(this.resolveProxies, _.occi.util.Constants.Att_resolveProxies, this);
            visitor.visit(this.lowerBound, _.occi.util.Constants.Att_lowerBound, this);
            visitor.visit(this.derived, _.occi.util.Constants.Att_derived, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EReference;
          }
        }),
        EEnumLiteralImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EEnumLiteral, _.ecore.EEnumLiteral, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_m87jjx$ = null;
          this.$internal_containmentRefName_dw6zsj$ = null;
          this.$internal_unsetCmd_pqmsaa$ = null;
          this.$internal_readOnlyElem_v7lx4i$ = false;
          this.$internal_recursive_readOnlyElem_kyoty7$ = false;
          this.$internal_inboundReferences_4huo4g$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_fhnlr2$ = false;
          this.$internal_is_deleted_jfgrol$ = false;
          this.$is_root_sboh8q$ = false;
          this.$internal_modelElementListeners_d1nx2j$ = null;
          this.$internal_modelTreeListeners_ftfxhj$ = null;
          this.$path_cache_5a2und$ = null;
          this.$key_cache_ysk2f3$ = null;
          this.$generated_KMF_ID_k9t5bt$ = '' + Math.random() + (new Date()).getTime();
          this.$name_ybgrg4$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$value_1pnj80$ = _.occi.util.Constants.INT_DEFAULTVAL;
          this.$instance_ijuhre$ = null;
          this.$literal_badkzy$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$eEnum_1ft6zp$ = null;
        }, /** @lends _.ecore.impl.EEnumLiteralImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_m87jjx$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_m87jjx$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_dw6zsj$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_dw6zsj$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_pqmsaa$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_pqmsaa$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_v7lx4i$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_v7lx4i$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_kyoty7$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_kyoty7$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_4huo4g$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_4huo4g$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_fhnlr2$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_fhnlr2$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_jfgrol$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_jfgrol$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_sboh8q$;
            },
            set: function (tmp$0) {
              this.$is_root_sboh8q$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_d1nx2j$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_d1nx2j$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_ftfxhj$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_ftfxhj$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_5a2und$;
            },
            set: function (tmp$0) {
              this.$path_cache_5a2und$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_ysk2f3$;
            },
            set: function (tmp$0) {
              this.$key_cache_ysk2f3$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.eEnum != null) {
              var tmp$1, tmp$2;
              ((tmp$1 = this.eEnum) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eEnum);
              ((tmp$2 = this.eEnum) != null ? tmp$2 : Kotlin.throwNPE()).delete();
              this.eEnum = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$3;
              ((tmp$3 = this.internal_unsetCmd) != null ? tmp$3 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_k9t5bt$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_k9t5bt$;
              this.$generated_KMF_ID_k9t5bt$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_ybgrg4$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_ybgrg4$;
              this.$name_ybgrg4$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withValue: function (p) {
            this.value = p;
            return this;
          },
          value: {
            get: function () {
              return this.$value_1pnj80$;
            },
            set: function (iP) {
              this.internal_value(iP, true);
            }
          },
          internal_value: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.value) {
              var oldPath = this.path();
              var kmf_previousVal = this.$value_1pnj80$;
              this.$value_1pnj80$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_value, this.value, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstance: function (p) {
            this.instance = p;
            return this;
          },
          instance: {
            get: function () {
              return this.$instance_ijuhre$;
            },
            set: function (iP) {
              this.internal_instance(iP, true);
            }
          },
          internal_instance: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instance)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instance_ijuhre$;
              this.$instance_ijuhre$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instance, this.instance, kmf_previousVal, this, oldPath));
              }
            }
          },
          withLiteral: function (p) {
            this.literal = p;
            return this;
          },
          literal: {
            get: function () {
              return this.$literal_badkzy$;
            },
            set: function (iP) {
              this.internal_literal(iP, true);
            }
          },
          internal_literal: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.literal)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$literal_badkzy$;
              this.$literal_badkzy$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_literal, this.literal, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eEnum: {
            get: function () {
              return this.$eEnum_1ft6zp$;
            },
            set: function (eEnumP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eEnum(eEnumP, true, true);
            }
          },
          internal_eEnum: function (eEnumP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eEnum_1ft6zp$, eEnumP)) {
              if (setOpposite) {
                if (this.$eEnum_1ft6zp$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eEnum_1ft6zp$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eLiterals, this, false, fireEvents);
                }
                if (eEnumP != null) {
                  eEnumP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eLiterals, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eEnum_1ft6zp$;
              if (eEnumP != null) {
                (eEnumP != null ? eEnumP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eEnum);
              }
               else {
                if (this.$eEnum_1ft6zp$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eEnum_1ft6zp$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eEnum);
                }
              }
              this.$eEnum_1ft6zp$ = eEnumP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eEnum, eEnumP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEEnum: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_value) {
                this.internal_value(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instance) {
                this.internal_instance(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_literal) {
                this.internal_literal(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eEnum) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eEnum(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eEnum(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eEnum(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eEnum) {
                var objFound = this.eEnum;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eEnum, _.occi.util.Constants.ecore_EEnum)) {
                this.internal_visit(visitor, this.eEnum, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eEnum);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eEnum);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.instance, _.occi.util.Constants.Att_instance, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.value, _.occi.util.Constants.Att_value, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
            visitor.visit(this.literal, _.occi.util.Constants.Att_literal, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EEnumLiteral;
          }
        }),
        EEnumImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EDataType, _.occi.GeneratedAspect_EEnum, _.ecore.EEnum, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_noxclq$ = null;
          this.$internal_containmentRefName_dj8rjy$ = null;
          this.$internal_unsetCmd_dpuk9z$ = null;
          this.$internal_readOnlyElem_buxl9j$ = false;
          this.$internal_recursive_readOnlyElem_u1aj70$ = false;
          this.$internal_inboundReferences_w04b7v$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_pjjsk3$ = false;
          this.$internal_is_deleted_qho4h2$ = false;
          this.$is_root_o42vth$ = false;
          this.$internal_modelElementListeners_4iz5qu$ = null;
          this.$internal_modelTreeListeners_fghp8y$ = null;
          this.$path_cache_hspl1w$ = null;
          this.$key_cache_yclr1y$ = null;
          this.$generated_KMF_ID_dsb32m$ = '' + Math.random() + (new Date()).getTime();
          this.$name_bfp8y1$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$instanceClassName_c076oy$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$instanceClass_fhymbb$ = null;
          this.$defaultValue_huh40s$ = null;
          this.$instanceTypeName_58rp1i$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$serializable_s1kmxh$ = true;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$ePackage_q7ypkj$ = null;
          this._eLiterals = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllELiteralsCurrentlyProcessing = false;
          this._eTypeParameters = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllETypeParametersCurrentlyProcessing = false;
        }, /** @lends _.ecore.impl.EEnumImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_noxclq$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_noxclq$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_dj8rjy$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_dj8rjy$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_dpuk9z$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_dpuk9z$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_buxl9j$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_buxl9j$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_u1aj70$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_u1aj70$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_w04b7v$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_w04b7v$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_pjjsk3$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_pjjsk3$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_qho4h2$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_qho4h2$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_o42vth$;
            },
            set: function (tmp$0) {
              this.$is_root_o42vth$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_4iz5qu$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_4iz5qu$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_fghp8y$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_fghp8y$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_hspl1w$;
            },
            set: function (tmp$0) {
              this.$path_cache_hspl1w$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_yclr1y$;
            },
            set: function (tmp$0) {
              this.$key_cache_yclr1y$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.ePackage != null) {
              var tmp$1, tmp$2;
              ((tmp$1 = this.ePackage) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              ((tmp$2 = this.ePackage) != null ? tmp$2 : Kotlin.throwNPE()).delete();
              this.ePackage = null;
            }
            {
              var tmp$3 = this.eTypeParameters.iterator();
              while (tmp$3.hasNext()) {
                var el_0 = tmp$3.next();
                el_0.delete();
              }
            }
            {
              var tmp$4 = this.eLiterals.iterator();
              while (tmp$4.hasNext()) {
                var el_1 = tmp$4.next();
                el_1.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$5;
              ((tmp$5 = this.internal_unsetCmd) != null ? tmp$5 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_dsb32m$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_dsb32m$;
              this.$generated_KMF_ID_dsb32m$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_bfp8y1$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_bfp8y1$;
              this.$name_bfp8y1$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceClassName: function (p) {
            this.instanceClassName = p;
            return this;
          },
          instanceClassName: {
            get: function () {
              return this.$instanceClassName_c076oy$;
            },
            set: function (iP) {
              this.internal_instanceClassName(iP, true);
            }
          },
          internal_instanceClassName: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceClassName)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceClassName_c076oy$;
              this.$instanceClassName_c076oy$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceClassName, this.instanceClassName, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceClass: function (p) {
            this.instanceClass = p;
            return this;
          },
          instanceClass: {
            get: function () {
              return this.$instanceClass_fhymbb$;
            },
            set: function (iP) {
              this.internal_instanceClass(iP, true);
            }
          },
          internal_instanceClass: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceClass)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceClass_fhymbb$;
              this.$instanceClass_fhymbb$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceClass, this.instanceClass, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValue: function (p) {
            this.defaultValue = p;
            return this;
          },
          defaultValue: {
            get: function () {
              return this.$defaultValue_huh40s$;
            },
            set: function (iP) {
              this.internal_defaultValue(iP, true);
            }
          },
          internal_defaultValue: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValue)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValue_huh40s$;
              this.$defaultValue_huh40s$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValue, this.defaultValue, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceTypeName: function (p) {
            this.instanceTypeName = p;
            return this;
          },
          instanceTypeName: {
            get: function () {
              return this.$instanceTypeName_58rp1i$;
            },
            set: function (iP) {
              this.internal_instanceTypeName(iP, true);
            }
          },
          internal_instanceTypeName: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceTypeName)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceTypeName_58rp1i$;
              this.$instanceTypeName_58rp1i$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceTypeName, this.instanceTypeName, kmf_previousVal, this, oldPath));
              }
            }
          },
          withSerializable: function (p) {
            this.serializable = p;
            return this;
          },
          serializable: {
            get: function () {
              return this.$serializable_s1kmxh$;
            },
            set: function (iP) {
              this.internal_serializable(iP, true);
            }
          },
          internal_serializable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.serializable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$serializable_s1kmxh$;
              this.$serializable_s1kmxh$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_serializable, this.serializable, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          ePackage: {
            get: function () {
              return this.$ePackage_q7ypkj$;
            },
            set: function (ePackageP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_ePackage(ePackageP, true, true);
            }
          },
          internal_ePackage: function (ePackageP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$ePackage_q7ypkj$, ePackageP)) {
              if (setOpposite) {
                if (this.$ePackage_q7ypkj$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$ePackage_q7ypkj$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eClassifiers, this, false, fireEvents);
                }
                if (ePackageP != null) {
                  ePackageP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eClassifiers, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$ePackage_q7ypkj$;
              if (ePackageP != null) {
                (ePackageP != null ? ePackageP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              }
               else {
                if (this.$ePackage_q7ypkj$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$ePackage_q7ypkj$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
                }
              }
              this.$ePackage_q7ypkj$ = ePackageP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_ePackage, ePackageP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEPackage: function (ref) {
            return this;
          },
          eLiterals: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eLiterals.values());
            },
            set: function (eLiteralsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eLiteralsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eLiterals(eLiteralsP, true, true);
            }
          },
          internal_eLiterals: function (eLiteralsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eLiterals.values(), eLiteralsP)) {
              var kmf_previousVal = this._eLiterals;
              this.internal_removeAllELiterals(true, false);
              {
                var tmp$0 = eLiteralsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eLiterals.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eLiterals);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eLiterals, el), _.occi.util.Constants.Ref_eLiterals);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eEnum, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eLiterals, eLiteralsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddELiterals: function (eLiteralsP) {
            var _key_ = eLiteralsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eLiterals.containsKey_za3rmp$(_key_)) {
              this._eLiterals.put_wn2jw4$(_key_, eLiteralsP);
              eLiteralsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eLiterals, eLiteralsP), _.occi.util.Constants.Ref_eLiterals);
              eLiteralsP.addInboundReference(this, _.occi.util.Constants.Ref_eLiterals);
            }
          },
          addELiterals: function (eLiteralsP) {
            this.internal_addELiterals(eLiteralsP, true, true);
            return this;
          },
          addAllELiterals: function (eLiteralsP) {
            this.internal_addAllELiterals(eLiteralsP, true, true);
            return this;
          },
          internal_addELiterals: function (eLiteralsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddELiterals(eLiteralsP);
            if (setOpposite) {
              eLiteralsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eEnum, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eLiterals, eLiteralsP, null, this, this.path()));
            }
          },
          internal_addAllELiterals: function (eLiteralsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eLiteralsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddELiterals(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eEnum, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eLiteralsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddELiterals(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eLiterals, eLiteralsP, null, this, this.path()));
            }
          },
          removeELiterals: function (eLiteralsP) {
            this.internal_removeELiterals(eLiteralsP, true, true);
            return this;
          },
          removeAllELiterals: function () {
            this.internal_removeAllELiterals(true, true);
            return this;
          },
          internal_removeELiterals: function (eLiteralsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eLiterals.size() !== 0 && this._eLiterals.containsKey_za3rmp$(eLiteralsP.internalGetKey())) {
              var previousPathToBeRemoved = eLiteralsP.path();
              this._eLiterals.remove_za3rmp$(eLiteralsP.internalGetKey());
              eLiteralsP.removeInboundReference(this, _.occi.util.Constants.Ref_eLiterals);
              eLiteralsP.setEContainer(null, null, null);
              if (!this.removeAllELiteralsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eLiterals, eLiteralsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eLiteralsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eEnum, null, false, fireEvents);
              }
            }
          },
          internal_removeAllELiterals: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllELiteralsCurrentlyProcessing = true;
            }
            var temp_els = this.eLiterals;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eLiterals);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eEnum, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eLiterals);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eLiterals.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eLiterals, temp_els, null, this, this.path()));
              this.removeAllELiteralsCurrentlyProcessing = false;
            }
          },
          eTypeParameters: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eTypeParameters.values());
            },
            set: function (eTypeParametersP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eTypeParametersP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eTypeParameters(eTypeParametersP, true, true);
            }
          },
          internal_eTypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eTypeParameters.values(), eTypeParametersP)) {
              var kmf_previousVal = this._eTypeParameters;
              this._eTypeParameters.clear();
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eTypeParameters.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, el), _.occi.util.Constants.Ref_eTypeParameters);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddETypeParameters: function (eTypeParametersP) {
            var _key_ = eTypeParametersP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eTypeParameters.containsKey_za3rmp$(_key_)) {
              this._eTypeParameters.put_wn2jw4$(_key_, eTypeParametersP);
              eTypeParametersP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP), _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
            }
          },
          addETypeParameters: function (eTypeParametersP) {
            this.internal_addETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          addAllETypeParameters: function (eTypeParametersP) {
            this.internal_addAllETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          internal_addETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddETypeParameters(eTypeParametersP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          internal_addAllETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddETypeParameters(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eTypeParametersP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddETypeParameters(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          removeETypeParameters: function (eTypeParametersP) {
            this.internal_removeETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          removeAllETypeParameters: function () {
            this.internal_removeAllETypeParameters(true, true);
            return this;
          },
          internal_removeETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(eTypeParametersP.internalGetKey())) {
              var previousPathToBeRemoved = eTypeParametersP.path();
              this._eTypeParameters.remove_za3rmp$(eTypeParametersP.internalGetKey());
              eTypeParametersP.removeInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.setEContainer(null, null, null);
              if (!this.removeAllETypeParametersCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllETypeParameters: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllETypeParametersCurrentlyProcessing = true;
            }
            var temp_els = this.eTypeParameters;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eTypeParameters.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, temp_els, null, this, this.path()));
              this.removeAllETypeParametersCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceClassName) {
                this.internal_instanceClassName(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceClass) {
                this.internal_instanceClass(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValue) {
                this.internal_defaultValue(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceTypeName) {
                this.internal_instanceTypeName(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_serializable) {
                this.internal_serializable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_ePackage) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_ePackage(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eTypeParameters) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllETypeParameters();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eTypeParameters.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eTypeParameters.remove_za3rmp$(value);
                      this._eTypeParameters.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eLiterals) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addELiterals(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllELiterals(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeELiterals(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllELiterals(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eLiterals.size() !== 0 && this._eLiterals.containsKey_za3rmp$(value)) {
                      var obj_1 = this._eLiterals.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._eLiterals.remove_za3rmp$(value);
                      this._eLiterals.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findETypeParametersByID: function (key) {
            return this._eTypeParameters.get_za3rmp$(key);
          },
          findELiteralsByID: function (key) {
            return this._eLiterals.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_ePackage) {
                var objFound = this.ePackage;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eTypeParameters) {
                return this.findETypeParametersByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eLiterals) {
                return this.findELiteralsByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eTypeParameters, _.occi.util.Constants.ecore_ETypeParameter)) {
                {
                  var tmp$1 = this._eTypeParameters.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eTypeParameters.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eTypeParameters);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eTypeParameters);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eLiterals, _.occi.util.Constants.ecore_EEnumLiteral)) {
                {
                  var tmp$2 = this._eLiterals.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._eLiterals.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eLiterals);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eLiterals);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_ePackage, _.occi.util.Constants.ecore_EPackage)) {
                this.internal_visit(visitor, this.ePackage, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_ePackage);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_ePackage);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.instanceTypeName, _.occi.util.Constants.Att_instanceTypeName, this);
            visitor.visit(this.defaultValue, _.occi.util.Constants.Att_defaultValue, this);
            visitor.visit(this.instanceClassName, _.occi.util.Constants.Att_instanceClassName, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.instanceClass, _.occi.util.Constants.Att_instanceClass, this);
            visitor.visit(this.serializable, _.occi.util.Constants.Att_serializable, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EEnum;
          },
          getEEnumLiteral_1: function (nameP) {
            throw new Error('Not implemented yet !');
          }
        }),
        EAnnotationImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EAnnotation, _.ecore.EAnnotation, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_fkyctc$ = null;
          this.$internal_containmentRefName_xuu1gw$ = null;
          this.$internal_unsetCmd_8aexat$ = null;
          this.$internal_readOnlyElem_xtm2p7$ = false;
          this.$internal_recursive_readOnlyElem_crjwhq$ = false;
          this.$internal_inboundReferences_calftv$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_h4o1bz$ = false;
          this.$internal_is_deleted_cs7ky0$ = false;
          this.$is_root_u9rj6h$ = false;
          this.$internal_modelElementListeners_l4g148$ = null;
          this.$internal_modelTreeListeners_vxl3rw$ = null;
          this.$path_cache_q4wcpm$ = null;
          this.$key_cache_j6nqqs$ = null;
          this.$generated_KMF_ID_4snu9o$ = '' + Math.random() + (new Date()).getTime();
          this.$source_cj99ll$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this._references = new _.java.util.concurrent.ConcurrentHashMap();
          this._contents = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllContentsCurrentlyProcessing = false;
          this._details = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllDetailsCurrentlyProcessing = false;
          this.$eModelElement_8mev4q$ = null;
        }, /** @lends _.ecore.impl.EAnnotationImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_fkyctc$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_fkyctc$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_xuu1gw$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_xuu1gw$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_8aexat$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_8aexat$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_xtm2p7$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_xtm2p7$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_crjwhq$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_crjwhq$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_calftv$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_calftv$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_h4o1bz$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_h4o1bz$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_cs7ky0$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_cs7ky0$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_u9rj6h$;
            },
            set: function (tmp$0) {
              this.$is_root_u9rj6h$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_l4g148$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_l4g148$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_vxl3rw$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_vxl3rw$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_q4wcpm$;
            },
            set: function (tmp$0) {
              this.$path_cache_q4wcpm$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_j6nqqs$;
            },
            set: function (tmp$0) {
              this.$key_cache_j6nqqs$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            {
              var tmp$1 = this.details.iterator();
              while (tmp$1.hasNext()) {
                var el_0 = tmp$1.next();
                el_0.delete();
              }
            }
            if (this.eModelElement != null) {
              var tmp$2, tmp$3;
              ((tmp$2 = this.eModelElement) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eModelElement);
              ((tmp$3 = this.eModelElement) != null ? tmp$3 : Kotlin.throwNPE()).delete();
              this.eModelElement = null;
            }
            {
              var tmp$4 = this.contents.iterator();
              while (tmp$4.hasNext()) {
                var el_1 = tmp$4.next();
                el_1.delete();
              }
            }
            this.removeAllReferences();
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$5;
              ((tmp$5 = this.internal_unsetCmd) != null ? tmp$5 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_4snu9o$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_4snu9o$;
              this.$generated_KMF_ID_4snu9o$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withSource: function (p) {
            this.source = p;
            return this;
          },
          source: {
            get: function () {
              return this.$source_cj99ll$;
            },
            set: function (iP) {
              this.internal_source(iP, true);
            }
          },
          internal_source: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.source)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$source_cj99ll$;
              this.$source_cj99ll$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_source, this.source, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          references: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._references.values());
            },
            set: function (referencesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (referencesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_references(referencesP, true, true);
            }
          },
          internal_references: function (referencesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._references.values(), referencesP)) {
              var kmf_previousVal = this._references;
              this._references.clear();
              {
                var tmp$0 = referencesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._references.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_references);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_references, referencesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddReferences: function (referencesP) {
            var _key_ = referencesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._references.containsKey_za3rmp$(_key_)) {
              this._references.put_wn2jw4$(_key_, referencesP);
              referencesP.addInboundReference(this, _.occi.util.Constants.Ref_references);
            }
          },
          addReferences: function (referencesP) {
            this.internal_addReferences(referencesP, true, true);
            return this;
          },
          addAllReferences: function (referencesP) {
            this.internal_addAllReferences(referencesP, true, true);
            return this;
          },
          internal_addReferences: function (referencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddReferences(referencesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_references, referencesP, null, this, this.path()));
            }
          },
          internal_addAllReferences: function (referencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = referencesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddReferences(el);
                }
              }
            }
             else {
              {
                var tmp$1 = referencesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddReferences(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_references, referencesP, null, this, this.path()));
            }
          },
          removeReferences: function (referencesP) {
            this.internal_removeReferences(referencesP, true, true);
            return this;
          },
          removeAllReferences: function () {
            this.internal_removeAllReferences(true, true);
            return this;
          },
          internal_removeReferences: function (referencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._references.size() !== 0 && this._references.containsKey_za3rmp$(referencesP.internalGetKey())) {
              var previousPathToBeRemoved = referencesP.path();
              this._references.remove_za3rmp$(referencesP.internalGetKey());
              referencesP.removeInboundReference(this, _.occi.util.Constants.Ref_references);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_references, referencesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllReferences: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.references;
            this._references.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_references, temp_els, null, this, this.path()));
            }
          },
          contents: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._contents.values());
            },
            set: function (contentsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (contentsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_contents(contentsP, true, true);
            }
          },
          internal_contents: function (contentsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._contents.values(), contentsP)) {
              var kmf_previousVal = this._contents;
              this._contents.clear();
              {
                var tmp$0 = contentsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._contents.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_contents);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_contents, el), _.occi.util.Constants.Ref_contents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_contents, contentsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddContents: function (contentsP) {
            var _key_ = contentsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._contents.containsKey_za3rmp$(_key_)) {
              this._contents.put_wn2jw4$(_key_, contentsP);
              contentsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_contents, contentsP), _.occi.util.Constants.Ref_contents);
              contentsP.addInboundReference(this, _.occi.util.Constants.Ref_contents);
            }
          },
          addContents: function (contentsP) {
            this.internal_addContents(contentsP, true, true);
            return this;
          },
          addAllContents: function (contentsP) {
            this.internal_addAllContents(contentsP, true, true);
            return this;
          },
          internal_addContents: function (contentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddContents(contentsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_contents, contentsP, null, this, this.path()));
            }
          },
          internal_addAllContents: function (contentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = contentsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddContents(el);
                }
              }
            }
             else {
              {
                var tmp$1 = contentsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddContents(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_contents, contentsP, null, this, this.path()));
            }
          },
          removeContents: function (contentsP) {
            this.internal_removeContents(contentsP, true, true);
            return this;
          },
          removeAllContents: function () {
            this.internal_removeAllContents(true, true);
            return this;
          },
          internal_removeContents: function (contentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._contents.size() !== 0 && this._contents.containsKey_za3rmp$(contentsP.internalGetKey())) {
              var previousPathToBeRemoved = contentsP.path();
              this._contents.remove_za3rmp$(contentsP.internalGetKey());
              contentsP.removeInboundReference(this, _.occi.util.Constants.Ref_contents);
              contentsP.setEContainer(null, null, null);
              if (!this.removeAllContentsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_contents, contentsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllContents: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllContentsCurrentlyProcessing = true;
            }
            var temp_els = this.contents;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._contents.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_contents, temp_els, null, this, this.path()));
              this.removeAllContentsCurrentlyProcessing = false;
            }
          },
          details: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._details.values());
            },
            set: function (detailsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (detailsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_details(detailsP, true, true);
            }
          },
          internal_details: function (detailsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._details.values(), detailsP)) {
              var kmf_previousVal = this._details;
              this._details.clear();
              {
                var tmp$0 = detailsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._details.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_details);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_details, el), _.occi.util.Constants.Ref_details);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_details, detailsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddDetails: function (detailsP) {
            var _key_ = detailsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._details.containsKey_za3rmp$(_key_)) {
              this._details.put_wn2jw4$(_key_, detailsP);
              detailsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_details, detailsP), _.occi.util.Constants.Ref_details);
              detailsP.addInboundReference(this, _.occi.util.Constants.Ref_details);
            }
          },
          addDetails: function (detailsP) {
            this.internal_addDetails(detailsP, true, true);
            return this;
          },
          addAllDetails: function (detailsP) {
            this.internal_addAllDetails(detailsP, true, true);
            return this;
          },
          internal_addDetails: function (detailsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddDetails(detailsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_details, detailsP, null, this, this.path()));
            }
          },
          internal_addAllDetails: function (detailsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = detailsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddDetails(el);
                }
              }
            }
             else {
              {
                var tmp$1 = detailsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddDetails(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_details, detailsP, null, this, this.path()));
            }
          },
          removeDetails: function (detailsP) {
            this.internal_removeDetails(detailsP, true, true);
            return this;
          },
          removeAllDetails: function () {
            this.internal_removeAllDetails(true, true);
            return this;
          },
          internal_removeDetails: function (detailsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._details.size() !== 0 && this._details.containsKey_za3rmp$(detailsP.internalGetKey())) {
              var previousPathToBeRemoved = detailsP.path();
              this._details.remove_za3rmp$(detailsP.internalGetKey());
              detailsP.removeInboundReference(this, _.occi.util.Constants.Ref_details);
              detailsP.setEContainer(null, null, null);
              if (!this.removeAllDetailsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_details, detailsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllDetails: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllDetailsCurrentlyProcessing = true;
            }
            var temp_els = this.details;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._details.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_details, temp_els, null, this, this.path()));
              this.removeAllDetailsCurrentlyProcessing = false;
            }
          },
          eModelElement: {
            get: function () {
              return this.$eModelElement_8mev4q$;
            },
            set: function (eModelElementP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eModelElement(eModelElementP, true, true);
            }
          },
          internal_eModelElement: function (eModelElementP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eModelElement_8mev4q$, eModelElementP)) {
              if (setOpposite) {
                if (this.$eModelElement_8mev4q$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eModelElement_8mev4q$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, this, false, fireEvents);
                }
                if (eModelElementP != null) {
                  eModelElementP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eAnnotations, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eModelElement_8mev4q$;
              if (eModelElementP != null) {
                (eModelElementP != null ? eModelElementP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eModelElement);
              }
               else {
                if (this.$eModelElement_8mev4q$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eModelElement_8mev4q$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eModelElement);
                }
              }
              this.$eModelElement_8mev4q$ = eModelElementP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eModelElement, eModelElementP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEModelElement: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_source) {
                this.internal_source(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_details) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addDetails(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllDetails(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeDetails(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllDetails();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._details.size() !== 0 && this._details.containsKey_za3rmp$(value)) {
                      var obj_0 = this._details.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._details.remove_za3rmp$(value);
                      this._details.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eModelElement) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eModelElement(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eModelElement(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eModelElement(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_contents) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addContents(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllContents(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeContents(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllContents();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._contents.size() !== 0 && this._contents.containsKey_za3rmp$(value)) {
                      var obj_1 = this._contents.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._contents.remove_za3rmp$(value);
                      this._contents.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_references) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllReferences();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._references.size() !== 0 && this._references.containsKey_za3rmp$(value)) {
                      var obj_2 = this._references.get_za3rmp$(value);
                      var objNewKey_2 = (obj_2 != null ? obj_2 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_2 == null) {
                        throw new Error('Key newed to null ' + obj_2);
                      }
                      this._references.remove_za3rmp$(value);
                      this._references.put_wn2jw4$(objNewKey_2, obj_2);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findDetailsByID: function (key) {
            return this._details.get_za3rmp$(key);
          },
          findContentsByID: function (key) {
            return this._contents.get_za3rmp$(key);
          },
          findReferencesByID: function (key) {
            return this._references.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_details) {
                return this.findDetailsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eModelElement) {
                var objFound = this.eModelElement;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_contents) {
                return this.findContentsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_references) {
                return this.findReferencesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_details, _.occi.util.Constants.ecore_EStringToStringMapEntry)) {
                {
                  var tmp$1 = this._details.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._details.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_details);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_details);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_contents, _.occi.util.Constants.ecore_EObject)) {
                {
                  var tmp$2 = this._contents.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._contents.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_contents);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_contents);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eModelElement, _.occi.util.Constants.ecore_EModelElement)) {
                this.internal_visit(visitor, this.eModelElement, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eModelElement);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eModelElement);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_references, _.occi.util.Constants.ecore_EObject)) {
                {
                  var tmp$3 = this._references.keySet().iterator();
                  while (tmp$3.hasNext()) {
                    var KMFLoopEntryKey_2 = tmp$3.next();
                    this.internal_visit(visitor, this._references.get_za3rmp$(KMFLoopEntryKey_2), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_references);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_references);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.source, _.occi.util.Constants.Att_source, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EAnnotation;
          }
        }),
        EDataTypeImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EDataType, _.ecore.EDataType, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_ix9r4b$ = null;
          this.$internal_containmentRefName_r8d24l$ = null;
          this.$internal_unsetCmd_e0o5t6$ = null;
          this.$internal_readOnlyElem_mwhh7a$ = false;
          this.$internal_recursive_readOnlyElem_5wuox5$ = false;
          this.$internal_inboundReferences_cp2odk$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_9g6lwq$ = false;
          this.$internal_is_deleted_lq0izn$ = false;
          this.$is_root_pss61e$ = false;
          this.$internal_modelElementListeners_30i4c3$ = null;
          this.$internal_modelTreeListeners_pb44fl$ = null;
          this.$path_cache_3s84c1$ = null;
          this.$key_cache_nduutj$ = null;
          this.$generated_KMF_ID_rivtgx$ = '' + Math.random() + (new Date()).getTime();
          this.$name_t4y9uc$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$instanceClassName_cb0s85$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$instanceClass_bbctl2$ = null;
          this.$defaultValue_o9fszr$ = null;
          this.$instanceTypeName_8ht1ct$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$serializable_vmi14$ = true;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$ePackage_7gmgeu$ = null;
          this._eTypeParameters = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllETypeParametersCurrentlyProcessing = false;
        }, /** @lends _.ecore.impl.EDataTypeImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_ix9r4b$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_ix9r4b$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_r8d24l$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_r8d24l$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_e0o5t6$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_e0o5t6$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_mwhh7a$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_mwhh7a$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_5wuox5$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_5wuox5$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_cp2odk$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_cp2odk$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_9g6lwq$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_9g6lwq$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_lq0izn$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_lq0izn$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_pss61e$;
            },
            set: function (tmp$0) {
              this.$is_root_pss61e$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_30i4c3$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_30i4c3$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_pb44fl$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_pb44fl$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_3s84c1$;
            },
            set: function (tmp$0) {
              this.$path_cache_3s84c1$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_nduutj$;
            },
            set: function (tmp$0) {
              this.$key_cache_nduutj$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.ePackage != null) {
              var tmp$1, tmp$2;
              ((tmp$1 = this.ePackage) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              ((tmp$2 = this.ePackage) != null ? tmp$2 : Kotlin.throwNPE()).delete();
              this.ePackage = null;
            }
            {
              var tmp$3 = this.eTypeParameters.iterator();
              while (tmp$3.hasNext()) {
                var el_0 = tmp$3.next();
                el_0.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$4;
              ((tmp$4 = this.internal_unsetCmd) != null ? tmp$4 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_rivtgx$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_rivtgx$;
              this.$generated_KMF_ID_rivtgx$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_t4y9uc$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_t4y9uc$;
              this.$name_t4y9uc$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceClassName: function (p) {
            this.instanceClassName = p;
            return this;
          },
          instanceClassName: {
            get: function () {
              return this.$instanceClassName_cb0s85$;
            },
            set: function (iP) {
              this.internal_instanceClassName(iP, true);
            }
          },
          internal_instanceClassName: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceClassName)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceClassName_cb0s85$;
              this.$instanceClassName_cb0s85$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceClassName, this.instanceClassName, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceClass: function (p) {
            this.instanceClass = p;
            return this;
          },
          instanceClass: {
            get: function () {
              return this.$instanceClass_bbctl2$;
            },
            set: function (iP) {
              this.internal_instanceClass(iP, true);
            }
          },
          internal_instanceClass: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceClass)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceClass_bbctl2$;
              this.$instanceClass_bbctl2$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceClass, this.instanceClass, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValue: function (p) {
            this.defaultValue = p;
            return this;
          },
          defaultValue: {
            get: function () {
              return this.$defaultValue_o9fszr$;
            },
            set: function (iP) {
              this.internal_defaultValue(iP, true);
            }
          },
          internal_defaultValue: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValue)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValue_o9fszr$;
              this.$defaultValue_o9fszr$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValue, this.defaultValue, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceTypeName: function (p) {
            this.instanceTypeName = p;
            return this;
          },
          instanceTypeName: {
            get: function () {
              return this.$instanceTypeName_8ht1ct$;
            },
            set: function (iP) {
              this.internal_instanceTypeName(iP, true);
            }
          },
          internal_instanceTypeName: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceTypeName)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceTypeName_8ht1ct$;
              this.$instanceTypeName_8ht1ct$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceTypeName, this.instanceTypeName, kmf_previousVal, this, oldPath));
              }
            }
          },
          withSerializable: function (p) {
            this.serializable = p;
            return this;
          },
          serializable: {
            get: function () {
              return this.$serializable_vmi14$;
            },
            set: function (iP) {
              this.internal_serializable(iP, true);
            }
          },
          internal_serializable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.serializable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$serializable_vmi14$;
              this.$serializable_vmi14$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_serializable, this.serializable, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          ePackage: {
            get: function () {
              return this.$ePackage_7gmgeu$;
            },
            set: function (ePackageP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_ePackage(ePackageP, true, true);
            }
          },
          internal_ePackage: function (ePackageP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$ePackage_7gmgeu$, ePackageP)) {
              if (setOpposite) {
                if (this.$ePackage_7gmgeu$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$ePackage_7gmgeu$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eClassifiers, this, false, fireEvents);
                }
                if (ePackageP != null) {
                  ePackageP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eClassifiers, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$ePackage_7gmgeu$;
              if (ePackageP != null) {
                (ePackageP != null ? ePackageP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              }
               else {
                if (this.$ePackage_7gmgeu$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$ePackage_7gmgeu$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
                }
              }
              this.$ePackage_7gmgeu$ = ePackageP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_ePackage, ePackageP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEPackage: function (ref) {
            return this;
          },
          eTypeParameters: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eTypeParameters.values());
            },
            set: function (eTypeParametersP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eTypeParametersP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eTypeParameters(eTypeParametersP, true, true);
            }
          },
          internal_eTypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eTypeParameters.values(), eTypeParametersP)) {
              var kmf_previousVal = this._eTypeParameters;
              this._eTypeParameters.clear();
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eTypeParameters.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, el), _.occi.util.Constants.Ref_eTypeParameters);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddETypeParameters: function (eTypeParametersP) {
            var _key_ = eTypeParametersP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eTypeParameters.containsKey_za3rmp$(_key_)) {
              this._eTypeParameters.put_wn2jw4$(_key_, eTypeParametersP);
              eTypeParametersP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP), _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
            }
          },
          addETypeParameters: function (eTypeParametersP) {
            this.internal_addETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          addAllETypeParameters: function (eTypeParametersP) {
            this.internal_addAllETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          internal_addETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddETypeParameters(eTypeParametersP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          internal_addAllETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddETypeParameters(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eTypeParametersP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddETypeParameters(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          removeETypeParameters: function (eTypeParametersP) {
            this.internal_removeETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          removeAllETypeParameters: function () {
            this.internal_removeAllETypeParameters(true, true);
            return this;
          },
          internal_removeETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(eTypeParametersP.internalGetKey())) {
              var previousPathToBeRemoved = eTypeParametersP.path();
              this._eTypeParameters.remove_za3rmp$(eTypeParametersP.internalGetKey());
              eTypeParametersP.removeInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.setEContainer(null, null, null);
              if (!this.removeAllETypeParametersCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllETypeParameters: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllETypeParametersCurrentlyProcessing = true;
            }
            var temp_els = this.eTypeParameters;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eTypeParameters.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, temp_els, null, this, this.path()));
              this.removeAllETypeParametersCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceClassName) {
                this.internal_instanceClassName(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceClass) {
                this.internal_instanceClass(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValue) {
                this.internal_defaultValue(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceTypeName) {
                this.internal_instanceTypeName(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_serializable) {
                this.internal_serializable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_ePackage) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_ePackage(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eTypeParameters) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllETypeParameters();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eTypeParameters.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eTypeParameters.remove_za3rmp$(value);
                      this._eTypeParameters.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findETypeParametersByID: function (key) {
            return this._eTypeParameters.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_ePackage) {
                var objFound = this.ePackage;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eTypeParameters) {
                return this.findETypeParametersByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eTypeParameters, _.occi.util.Constants.ecore_ETypeParameter)) {
                {
                  var tmp$1 = this._eTypeParameters.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eTypeParameters.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eTypeParameters);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eTypeParameters);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_ePackage, _.occi.util.Constants.ecore_EPackage)) {
                this.internal_visit(visitor, this.ePackage, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_ePackage);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_ePackage);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.instanceTypeName, _.occi.util.Constants.Att_instanceTypeName, this);
            visitor.visit(this.defaultValue, _.occi.util.Constants.Att_defaultValue, this);
            visitor.visit(this.instanceClassName, _.occi.util.Constants.Att_instanceClassName, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.instanceClass, _.occi.util.Constants.Att_instanceClass, this);
            visitor.visit(this.serializable, _.occi.util.Constants.Att_serializable, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EDataType;
          }
        }),
        EParameterImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EParameter, _.ecore.EParameter, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_oui43s$ = null;
          this.$internal_containmentRefName_ny76pk$ = null;
          this.$internal_unsetCmd_w1penh$ = null;
          this.$internal_readOnlyElem_wjnq37$ = false;
          this.$internal_recursive_readOnlyElem_j2f09m$ = false;
          this.$internal_inboundReferences_l16rwb$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_wzwqe1$ = false;
          this.$internal_is_deleted_rn8vz4$ = false;
          this.$is_root_s8l61b$ = false;
          this.$internal_modelElementListeners_j3d2gg$ = null;
          this.$internal_modelTreeListeners_pvg4ek$ = null;
          this.$path_cache_6v761a$ = null;
          this.$key_cache_na9zes$ = null;
          this.$generated_KMF_ID_fhiclw$ = '' + Math.random() + (new Date()).getTime();
          this.$name_ctwnj$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$ordered_blueyh$ = true;
          this.$unique_g5m247$ = true;
          this.$lowerBound_7guhr7$ = _.occi.util.Constants.INT_DEFAULTVAL;
          this.$upperBound_uotobm$ = 1;
          this.$many_cujln$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$required_vkki2j$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$eOperation_44xluw$ = null;
          this.$eGenericType_e09b76$ = null;
          this.$eType_b6xb6v$ = null;
        }, /** @lends _.ecore.impl.EParameterImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_oui43s$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_oui43s$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_ny76pk$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_ny76pk$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_w1penh$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_w1penh$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_wjnq37$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_wjnq37$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_j2f09m$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_j2f09m$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_l16rwb$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_l16rwb$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_wzwqe1$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_wzwqe1$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_rn8vz4$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_rn8vz4$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_s8l61b$;
            },
            set: function (tmp$0) {
              this.$is_root_s8l61b$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_j3d2gg$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_j3d2gg$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_pvg4ek$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_pvg4ek$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_6v761a$;
            },
            set: function (tmp$0) {
              this.$path_cache_6v761a$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_na9zes$;
            },
            set: function (tmp$0) {
              this.$key_cache_na9zes$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.eType != null) {
              var tmp$1;
              ((tmp$1 = this.eType) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
              this.eType = null;
            }
            if (this.eGenericType != null) {
              var tmp$2;
              ((tmp$2 = this.eGenericType) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              this.eGenericType = null;
            }
            if (this.eOperation != null) {
              var tmp$3, tmp$4;
              ((tmp$3 = this.eOperation) != null ? tmp$3 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eOperation);
              ((tmp$4 = this.eOperation) != null ? tmp$4 : Kotlin.throwNPE()).delete();
              this.eOperation = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$5;
              ((tmp$5 = this.internal_unsetCmd) != null ? tmp$5 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_fhiclw$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_fhiclw$;
              this.$generated_KMF_ID_fhiclw$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_ctwnj$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_ctwnj$;
              this.$name_ctwnj$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withOrdered: function (p) {
            this.ordered = p;
            return this;
          },
          ordered: {
            get: function () {
              return this.$ordered_blueyh$;
            },
            set: function (iP) {
              this.internal_ordered(iP, true);
            }
          },
          internal_ordered: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.ordered)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$ordered_blueyh$;
              this.$ordered_blueyh$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_ordered, this.ordered, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUnique: function (p) {
            this.unique = p;
            return this;
          },
          unique: {
            get: function () {
              return this.$unique_g5m247$;
            },
            set: function (iP) {
              this.internal_unique(iP, true);
            }
          },
          internal_unique: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.unique)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$unique_g5m247$;
              this.$unique_g5m247$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_unique, this.unique, kmf_previousVal, this, oldPath));
              }
            }
          },
          withLowerBound: function (p) {
            this.lowerBound = p;
            return this;
          },
          lowerBound: {
            get: function () {
              return this.$lowerBound_7guhr7$;
            },
            set: function (iP) {
              this.internal_lowerBound(iP, true);
            }
          },
          internal_lowerBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.lowerBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$lowerBound_7guhr7$;
              this.$lowerBound_7guhr7$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_lowerBound, this.lowerBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUpperBound: function (p) {
            this.upperBound = p;
            return this;
          },
          upperBound: {
            get: function () {
              return this.$upperBound_uotobm$;
            },
            set: function (iP) {
              this.internal_upperBound(iP, true);
            }
          },
          internal_upperBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.upperBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$upperBound_uotobm$;
              this.$upperBound_uotobm$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_upperBound, this.upperBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withMany: function (p) {
            this.many = p;
            return this;
          },
          many: {
            get: function () {
              return this.$many_cujln$;
            },
            set: function (iP) {
              this.internal_many(iP, true);
            }
          },
          internal_many: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.many)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$many_cujln$;
              this.$many_cujln$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_many, this.many, kmf_previousVal, this, oldPath));
              }
            }
          },
          withRequired: function (p) {
            this.required = p;
            return this;
          },
          required: {
            get: function () {
              return this.$required_vkki2j$;
            },
            set: function (iP) {
              this.internal_required(iP, true);
            }
          },
          internal_required: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.required)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$required_vkki2j$;
              this.$required_vkki2j$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_required, this.required, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eOperation: {
            get: function () {
              return this.$eOperation_44xluw$;
            },
            set: function (eOperationP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eOperation(eOperationP, true, true);
            }
          },
          internal_eOperation: function (eOperationP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eOperation_44xluw$, eOperationP)) {
              if (setOpposite) {
                if (this.$eOperation_44xluw$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eOperation_44xluw$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eParameters, this, false, fireEvents);
                }
                if (eOperationP != null) {
                  eOperationP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eParameters, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eOperation_44xluw$;
              if (eOperationP != null) {
                (eOperationP != null ? eOperationP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eOperation);
              }
               else {
                if (this.$eOperation_44xluw$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eOperation_44xluw$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eOperation);
                }
              }
              this.$eOperation_44xluw$ = eOperationP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eOperation, eOperationP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEOperation: function (ref) {
            return this;
          },
          eGenericType: {
            get: function () {
              return this.$eGenericType_e09b76$;
            },
            set: function (eGenericTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eGenericType(eGenericTypeP, true, true);
            }
          },
          internal_eGenericType: function (eGenericTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eGenericType_e09b76$, eGenericTypeP)) {
              if (this.$eGenericType_e09b76$ != null) {
                var tmp$0;
                ((tmp$0 = this.$eGenericType_e09b76$) != null ? tmp$0 : Kotlin.throwNPE()).setEContainer(null, null, null);
              }
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eGenericType, null), _.occi.util.Constants.Ref_eGenericType);
              }
              var kmf_previousVal = this.$eGenericType_e09b76$;
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              }
               else {
                if (this.$eGenericType_e09b76$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eGenericType_e09b76$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
                }
              }
              this.$eGenericType_e09b76$ = eGenericTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericType, eGenericTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEGenericType: function (ref) {
            return this;
          },
          eType: {
            get: function () {
              return this.$eType_b6xb6v$;
            },
            set: function (eTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eType(eTypeP, true, true);
            }
          },
          internal_eType: function (eTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eType_b6xb6v$, eTypeP)) {
              var kmf_previousVal = this.$eType_b6xb6v$;
              if (eTypeP != null) {
                (eTypeP != null ? eTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eType);
              }
               else {
                if (this.$eType_b6xb6v$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eType_b6xb6v$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
                }
              }
              this.$eType_b6xb6v$ = eTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eType, eTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEType: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_ordered) {
                this.internal_ordered(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_unique) {
                this.internal_unique(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_lowerBound) {
                this.internal_lowerBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_upperBound) {
                this.internal_upperBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_many) {
                this.internal_many(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_required) {
                this.internal_required(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eGenericType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eGenericType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eOperation) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eOperation(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eOperation(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eOperation(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eType) {
                var objFound = this.eType;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eGenericType) {
                var objFound_0 = this.eGenericType;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eOperation) {
                var objFound_1 = this.eOperation;
                if (objFound_1 != null && Kotlin.equals(objFound_1.internalGetKey(), idP)) {
                  return objFound_1;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eGenericType, _.occi.util.Constants.ecore_EGenericType)) {
                this.internal_visit(visitor, this.eGenericType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eGenericType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eGenericType);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eType, _.occi.util.Constants.ecore_EClassifier)) {
                this.internal_visit(visitor, this.eType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eOperation, _.occi.util.Constants.ecore_EOperation)) {
                this.internal_visit(visitor, this.eOperation, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eOperation);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eOperation);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.ordered, _.occi.util.Constants.Att_ordered, this);
            visitor.visit(this.upperBound, _.occi.util.Constants.Att_upperBound, this);
            visitor.visit(this.unique, _.occi.util.Constants.Att_unique, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.lowerBound, _.occi.util.Constants.Att_lowerBound, this);
            visitor.visit(this.many, _.occi.util.Constants.Att_many, this);
            visitor.visit(this.required, _.occi.util.Constants.Att_required, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EParameter;
          }
        }),
        EClassImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EClass, _.ecore.EClass, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_sr2rjt$ = null;
          this.$internal_containmentRefName_gi3slz$ = null;
          this.$internal_unsetCmd_vw3vyc$ = null;
          this.$internal_readOnlyElem_kfyo90$ = false;
          this.$internal_recursive_readOnlyElem_6fs82x$ = false;
          this.$internal_inboundReferences_xh4vsa$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_s0hfoo$ = false;
          this.$internal_is_deleted_vjtjf5$ = false;
          this.$is_root_yw06ww$ = false;
          this.$internal_modelElementListeners_3euh0h$ = null;
          this.$internal_modelTreeListeners_ekuuwz$ = null;
          this.$path_cache_cfqswx$ = null;
          this.$key_cache_lm7gqd$ = null;
          this.$generated_KMF_ID_pzi119$ = '' + Math.random() + (new Date()).getTime();
          this.$name_z1nim6$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$instanceClassName_xlr9jd$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$instanceClass_vhshn0$ = null;
          this.$defaultValue_ds2pt3$ = null;
          this.$instanceTypeName_q0j8tr$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$abstract_aima6x$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$interface_e5x1ya$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this._eStructuralFeatures = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEStructuralFeaturesCurrentlyProcessing = false;
          this._eAllAttributes = new _.java.util.concurrent.ConcurrentHashMap();
          this._eAttributes = new _.java.util.concurrent.ConcurrentHashMap();
          this._eGenericSuperTypes = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEGenericSuperTypesCurrentlyProcessing = false;
          this._eTypeParameters = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllETypeParametersCurrentlyProcessing = false;
          this._eSuperTypes = new _.java.util.concurrent.ConcurrentHashMap();
          this._eAllContainments = new _.java.util.concurrent.ConcurrentHashMap();
          this._eAllOperations = new _.java.util.concurrent.ConcurrentHashMap();
          this._eAllStructuralFeatures = new _.java.util.concurrent.ConcurrentHashMap();
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this._eAllReferences = new _.java.util.concurrent.ConcurrentHashMap();
          this._eReferences = new _.java.util.concurrent.ConcurrentHashMap();
          this.$ePackage_542zmw$ = null;
          this.$eIDAttribute_e5a7jn$ = null;
          this._eAllSuperTypes = new _.java.util.concurrent.ConcurrentHashMap();
          this._eAllGenericSuperTypes = new _.java.util.concurrent.ConcurrentHashMap();
          this._eOperations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEOperationsCurrentlyProcessing = false;
        }, /** @lends _.ecore.impl.EClassImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_sr2rjt$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_sr2rjt$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_gi3slz$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_gi3slz$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_vw3vyc$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_vw3vyc$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_kfyo90$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_kfyo90$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_6fs82x$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_6fs82x$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_xh4vsa$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_xh4vsa$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_s0hfoo$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_s0hfoo$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_vjtjf5$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_vjtjf5$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_yw06ww$;
            },
            set: function (tmp$0) {
              this.$is_root_yw06ww$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_3euh0h$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_3euh0h$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_ekuuwz$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_ekuuwz$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_cfqswx$;
            },
            set: function (tmp$0) {
              this.$path_cache_cfqswx$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_lm7gqd$;
            },
            set: function (tmp$0) {
              this.$key_cache_lm7gqd$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.ePackage != null) {
              var tmp$1, tmp$2;
              ((tmp$1 = this.ePackage) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              ((tmp$2 = this.ePackage) != null ? tmp$2 : Kotlin.throwNPE()).delete();
              this.ePackage = null;
            }
            {
              var tmp$3 = this.eTypeParameters.iterator();
              while (tmp$3.hasNext()) {
                var el_0 = tmp$3.next();
                el_0.delete();
              }
            }
            this.removeAllESuperTypes();
            {
              var tmp$4 = this.eOperations.iterator();
              while (tmp$4.hasNext()) {
                var el_1 = tmp$4.next();
                el_1.delete();
              }
            }
            this.removeAllEAllAttributes();
            this.removeAllEAllReferences();
            this.removeAllEReferences();
            this.removeAllEAttributes();
            this.removeAllEAllContainments();
            this.removeAllEAllOperations();
            this.removeAllEAllStructuralFeatures();
            this.removeAllEAllSuperTypes();
            if (this.eIDAttribute != null) {
              var tmp$5;
              ((tmp$5 = this.eIDAttribute) != null ? tmp$5 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eIDAttribute);
              this.eIDAttribute = null;
            }
            {
              var tmp$6 = this.eStructuralFeatures.iterator();
              while (tmp$6.hasNext()) {
                var el_2 = tmp$6.next();
                el_2.delete();
              }
            }
            {
              var tmp$7 = this.eGenericSuperTypes.iterator();
              while (tmp$7.hasNext()) {
                var el_3 = tmp$7.next();
                el_3.delete();
              }
            }
            this.removeAllEAllGenericSuperTypes();
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$8;
              ((tmp$8 = this.internal_unsetCmd) != null ? tmp$8 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_pzi119$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_pzi119$;
              this.$generated_KMF_ID_pzi119$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_z1nim6$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_z1nim6$;
              this.$name_z1nim6$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceClassName: function (p) {
            this.instanceClassName = p;
            return this;
          },
          instanceClassName: {
            get: function () {
              return this.$instanceClassName_xlr9jd$;
            },
            set: function (iP) {
              this.internal_instanceClassName(iP, true);
            }
          },
          internal_instanceClassName: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceClassName)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceClassName_xlr9jd$;
              this.$instanceClassName_xlr9jd$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceClassName, this.instanceClassName, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceClass: function (p) {
            this.instanceClass = p;
            return this;
          },
          instanceClass: {
            get: function () {
              return this.$instanceClass_vhshn0$;
            },
            set: function (iP) {
              this.internal_instanceClass(iP, true);
            }
          },
          internal_instanceClass: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceClass)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceClass_vhshn0$;
              this.$instanceClass_vhshn0$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceClass, this.instanceClass, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValue: function (p) {
            this.defaultValue = p;
            return this;
          },
          defaultValue: {
            get: function () {
              return this.$defaultValue_ds2pt3$;
            },
            set: function (iP) {
              this.internal_defaultValue(iP, true);
            }
          },
          internal_defaultValue: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValue)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValue_ds2pt3$;
              this.$defaultValue_ds2pt3$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValue, this.defaultValue, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInstanceTypeName: function (p) {
            this.instanceTypeName = p;
            return this;
          },
          instanceTypeName: {
            get: function () {
              return this.$instanceTypeName_q0j8tr$;
            },
            set: function (iP) {
              this.internal_instanceTypeName(iP, true);
            }
          },
          internal_instanceTypeName: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.instanceTypeName)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$instanceTypeName_q0j8tr$;
              this.$instanceTypeName_q0j8tr$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_instanceTypeName, this.instanceTypeName, kmf_previousVal, this, oldPath));
              }
            }
          },
          withAbstract: function (p) {
            this.abstract = p;
            return this;
          },
          abstract: {
            get: function () {
              return this.$abstract_aima6x$;
            },
            set: function (iP) {
              this.internal_abstract(iP, true);
            }
          },
          internal_abstract: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.abstract)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$abstract_aima6x$;
              this.$abstract_aima6x$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_abstract, this.abstract, kmf_previousVal, this, oldPath));
              }
            }
          },
          withInterface: function (p) {
            this.interface = p;
            return this;
          },
          interface: {
            get: function () {
              return this.$interface_e5x1ya$;
            },
            set: function (iP) {
              this.internal_interface(iP, true);
            }
          },
          internal_interface: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.interface)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$interface_e5x1ya$;
              this.$interface_e5x1ya$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_interface, this.interface, kmf_previousVal, this, oldPath));
              }
            }
          },
          eStructuralFeatures: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eStructuralFeatures.values());
            },
            set: function (eStructuralFeaturesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eStructuralFeaturesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eStructuralFeatures(eStructuralFeaturesP, true, true);
            }
          },
          internal_eStructuralFeatures: function (eStructuralFeaturesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eStructuralFeatures.values(), eStructuralFeaturesP)) {
              var kmf_previousVal = this._eStructuralFeatures;
              this.internal_removeAllEStructuralFeatures(true, false);
              {
                var tmp$0 = eStructuralFeaturesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eStructuralFeatures.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eStructuralFeatures);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eStructuralFeatures, el), _.occi.util.Constants.Ref_eStructuralFeatures);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eStructuralFeatures, eStructuralFeaturesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEStructuralFeatures: function (eStructuralFeaturesP) {
            var _key_ = eStructuralFeaturesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eStructuralFeatures.containsKey_za3rmp$(_key_)) {
              this._eStructuralFeatures.put_wn2jw4$(_key_, eStructuralFeaturesP);
              eStructuralFeaturesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eStructuralFeatures, eStructuralFeaturesP), _.occi.util.Constants.Ref_eStructuralFeatures);
              eStructuralFeaturesP.addInboundReference(this, _.occi.util.Constants.Ref_eStructuralFeatures);
            }
          },
          addEStructuralFeatures: function (eStructuralFeaturesP) {
            this.internal_addEStructuralFeatures(eStructuralFeaturesP, true, true);
            return this;
          },
          addAllEStructuralFeatures: function (eStructuralFeaturesP) {
            this.internal_addAllEStructuralFeatures(eStructuralFeaturesP, true, true);
            return this;
          },
          internal_addEStructuralFeatures: function (eStructuralFeaturesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEStructuralFeatures(eStructuralFeaturesP);
            if (setOpposite) {
              eStructuralFeaturesP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eStructuralFeatures, eStructuralFeaturesP, null, this, this.path()));
            }
          },
          internal_addAllEStructuralFeatures: function (eStructuralFeaturesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eStructuralFeaturesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEStructuralFeatures(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eStructuralFeaturesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEStructuralFeatures(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eStructuralFeatures, eStructuralFeaturesP, null, this, this.path()));
            }
          },
          removeEStructuralFeatures: function (eStructuralFeaturesP) {
            this.internal_removeEStructuralFeatures(eStructuralFeaturesP, true, true);
            return this;
          },
          removeAllEStructuralFeatures: function () {
            this.internal_removeAllEStructuralFeatures(true, true);
            return this;
          },
          internal_removeEStructuralFeatures: function (eStructuralFeaturesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eStructuralFeatures.size() !== 0 && this._eStructuralFeatures.containsKey_za3rmp$(eStructuralFeaturesP.internalGetKey())) {
              var previousPathToBeRemoved = eStructuralFeaturesP.path();
              this._eStructuralFeatures.remove_za3rmp$(eStructuralFeaturesP.internalGetKey());
              eStructuralFeaturesP.removeInboundReference(this, _.occi.util.Constants.Ref_eStructuralFeatures);
              eStructuralFeaturesP.setEContainer(null, null, null);
              if (!this.removeAllEStructuralFeaturesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eStructuralFeatures, eStructuralFeaturesP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eStructuralFeaturesP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEStructuralFeatures: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEStructuralFeaturesCurrentlyProcessing = true;
            }
            var temp_els = this.eStructuralFeatures;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eStructuralFeatures);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eStructuralFeatures);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eStructuralFeatures.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eStructuralFeatures, temp_els, null, this, this.path()));
              this.removeAllEStructuralFeaturesCurrentlyProcessing = false;
            }
          },
          eAllAttributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllAttributes.values());
            },
            set: function (eAllAttributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllAttributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllAttributes(eAllAttributesP, true, true);
            }
          },
          internal_eAllAttributes: function (eAllAttributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllAttributes.values(), eAllAttributesP)) {
              var kmf_previousVal = this._eAllAttributes;
              this._eAllAttributes.clear();
              {
                var tmp$0 = eAllAttributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllAttributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllAttributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllAttributes, eAllAttributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllAttributes: function (eAllAttributesP) {
            var _key_ = eAllAttributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllAttributes.containsKey_za3rmp$(_key_)) {
              this._eAllAttributes.put_wn2jw4$(_key_, eAllAttributesP);
              eAllAttributesP.addInboundReference(this, _.occi.util.Constants.Ref_eAllAttributes);
            }
          },
          addEAllAttributes: function (eAllAttributesP) {
            this.internal_addEAllAttributes(eAllAttributesP, true, true);
            return this;
          },
          addAllEAllAttributes: function (eAllAttributesP) {
            this.internal_addAllEAllAttributes(eAllAttributesP, true, true);
            return this;
          },
          internal_addEAllAttributes: function (eAllAttributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllAttributes(eAllAttributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllAttributes, eAllAttributesP, null, this, this.path()));
            }
          },
          internal_addAllEAllAttributes: function (eAllAttributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllAttributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllAttributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllAttributes, eAllAttributesP, null, this, this.path()));
            }
          },
          removeEAllAttributes: function (eAllAttributesP) {
            this.internal_removeEAllAttributes(eAllAttributesP, true, true);
            return this;
          },
          removeAllEAllAttributes: function () {
            this.internal_removeAllEAllAttributes(true, true);
            return this;
          },
          internal_removeEAllAttributes: function (eAllAttributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllAttributes.size() !== 0 && this._eAllAttributes.containsKey_za3rmp$(eAllAttributesP.internalGetKey())) {
              var previousPathToBeRemoved = eAllAttributesP.path();
              this._eAllAttributes.remove_za3rmp$(eAllAttributesP.internalGetKey());
              eAllAttributesP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllAttributes);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllAttributes, eAllAttributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllAttributes;
            this._eAllAttributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllAttributes, temp_els, null, this, this.path()));
            }
          },
          eAttributes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAttributes.values());
            },
            set: function (eAttributesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAttributesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAttributes(eAttributesP, true, true);
            }
          },
          internal_eAttributes: function (eAttributesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAttributes.values(), eAttributesP)) {
              var kmf_previousVal = this._eAttributes;
              this._eAttributes.clear();
              {
                var tmp$0 = eAttributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAttributes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAttributes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAttributes, eAttributesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAttributes: function (eAttributesP) {
            var _key_ = eAttributesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAttributes.containsKey_za3rmp$(_key_)) {
              this._eAttributes.put_wn2jw4$(_key_, eAttributesP);
              eAttributesP.addInboundReference(this, _.occi.util.Constants.Ref_eAttributes);
            }
          },
          addEAttributes: function (eAttributesP) {
            this.internal_addEAttributes(eAttributesP, true, true);
            return this;
          },
          addAllEAttributes: function (eAttributesP) {
            this.internal_addAllEAttributes(eAttributesP, true, true);
            return this;
          },
          internal_addEAttributes: function (eAttributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAttributes(eAttributesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAttributes, eAttributesP, null, this, this.path()));
            }
          },
          internal_addAllEAttributes: function (eAttributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAttributesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAttributes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAttributesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAttributes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAttributes, eAttributesP, null, this, this.path()));
            }
          },
          removeEAttributes: function (eAttributesP) {
            this.internal_removeEAttributes(eAttributesP, true, true);
            return this;
          },
          removeAllEAttributes: function () {
            this.internal_removeAllEAttributes(true, true);
            return this;
          },
          internal_removeEAttributes: function (eAttributesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAttributes.size() !== 0 && this._eAttributes.containsKey_za3rmp$(eAttributesP.internalGetKey())) {
              var previousPathToBeRemoved = eAttributesP.path();
              this._eAttributes.remove_za3rmp$(eAttributesP.internalGetKey());
              eAttributesP.removeInboundReference(this, _.occi.util.Constants.Ref_eAttributes);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAttributes, eAttributesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAttributes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAttributes;
            this._eAttributes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAttributes, temp_els, null, this, this.path()));
            }
          },
          eGenericSuperTypes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eGenericSuperTypes.values());
            },
            set: function (eGenericSuperTypesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eGenericSuperTypesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eGenericSuperTypes(eGenericSuperTypesP, true, true);
            }
          },
          internal_eGenericSuperTypes: function (eGenericSuperTypesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eGenericSuperTypes.values(), eGenericSuperTypesP)) {
              var kmf_previousVal = this._eGenericSuperTypes;
              this._eGenericSuperTypes.clear();
              {
                var tmp$0 = eGenericSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eGenericSuperTypes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eGenericSuperTypes);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eGenericSuperTypes, el), _.occi.util.Constants.Ref_eGenericSuperTypes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericSuperTypes, eGenericSuperTypesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEGenericSuperTypes: function (eGenericSuperTypesP) {
            var _key_ = eGenericSuperTypesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eGenericSuperTypes.containsKey_za3rmp$(_key_)) {
              this._eGenericSuperTypes.put_wn2jw4$(_key_, eGenericSuperTypesP);
              eGenericSuperTypesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eGenericSuperTypes, eGenericSuperTypesP), _.occi.util.Constants.Ref_eGenericSuperTypes);
              eGenericSuperTypesP.addInboundReference(this, _.occi.util.Constants.Ref_eGenericSuperTypes);
            }
          },
          addEGenericSuperTypes: function (eGenericSuperTypesP) {
            this.internal_addEGenericSuperTypes(eGenericSuperTypesP, true, true);
            return this;
          },
          addAllEGenericSuperTypes: function (eGenericSuperTypesP) {
            this.internal_addAllEGenericSuperTypes(eGenericSuperTypesP, true, true);
            return this;
          },
          internal_addEGenericSuperTypes: function (eGenericSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEGenericSuperTypes(eGenericSuperTypesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericSuperTypes, eGenericSuperTypesP, null, this, this.path()));
            }
          },
          internal_addAllEGenericSuperTypes: function (eGenericSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eGenericSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEGenericSuperTypes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eGenericSuperTypesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEGenericSuperTypes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericSuperTypes, eGenericSuperTypesP, null, this, this.path()));
            }
          },
          removeEGenericSuperTypes: function (eGenericSuperTypesP) {
            this.internal_removeEGenericSuperTypes(eGenericSuperTypesP, true, true);
            return this;
          },
          removeAllEGenericSuperTypes: function () {
            this.internal_removeAllEGenericSuperTypes(true, true);
            return this;
          },
          internal_removeEGenericSuperTypes: function (eGenericSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eGenericSuperTypes.size() !== 0 && this._eGenericSuperTypes.containsKey_za3rmp$(eGenericSuperTypesP.internalGetKey())) {
              var previousPathToBeRemoved = eGenericSuperTypesP.path();
              this._eGenericSuperTypes.remove_za3rmp$(eGenericSuperTypesP.internalGetKey());
              eGenericSuperTypesP.removeInboundReference(this, _.occi.util.Constants.Ref_eGenericSuperTypes);
              eGenericSuperTypesP.setEContainer(null, null, null);
              if (!this.removeAllEGenericSuperTypesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericSuperTypes, eGenericSuperTypesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEGenericSuperTypes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEGenericSuperTypesCurrentlyProcessing = true;
            }
            var temp_els = this.eGenericSuperTypes;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eGenericSuperTypes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericSuperTypes, temp_els, null, this, this.path()));
              this.removeAllEGenericSuperTypesCurrentlyProcessing = false;
            }
          },
          eTypeParameters: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eTypeParameters.values());
            },
            set: function (eTypeParametersP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eTypeParametersP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eTypeParameters(eTypeParametersP, true, true);
            }
          },
          internal_eTypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eTypeParameters.values(), eTypeParametersP)) {
              var kmf_previousVal = this._eTypeParameters;
              this._eTypeParameters.clear();
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eTypeParameters.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, el), _.occi.util.Constants.Ref_eTypeParameters);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddETypeParameters: function (eTypeParametersP) {
            var _key_ = eTypeParametersP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eTypeParameters.containsKey_za3rmp$(_key_)) {
              this._eTypeParameters.put_wn2jw4$(_key_, eTypeParametersP);
              eTypeParametersP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP), _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
            }
          },
          addETypeParameters: function (eTypeParametersP) {
            this.internal_addETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          addAllETypeParameters: function (eTypeParametersP) {
            this.internal_addAllETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          internal_addETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddETypeParameters(eTypeParametersP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          internal_addAllETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddETypeParameters(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eTypeParametersP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddETypeParameters(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          removeETypeParameters: function (eTypeParametersP) {
            this.internal_removeETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          removeAllETypeParameters: function () {
            this.internal_removeAllETypeParameters(true, true);
            return this;
          },
          internal_removeETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(eTypeParametersP.internalGetKey())) {
              var previousPathToBeRemoved = eTypeParametersP.path();
              this._eTypeParameters.remove_za3rmp$(eTypeParametersP.internalGetKey());
              eTypeParametersP.removeInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.setEContainer(null, null, null);
              if (!this.removeAllETypeParametersCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllETypeParameters: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllETypeParametersCurrentlyProcessing = true;
            }
            var temp_els = this.eTypeParameters;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eTypeParameters.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, temp_els, null, this, this.path()));
              this.removeAllETypeParametersCurrentlyProcessing = false;
            }
          },
          eSuperTypes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eSuperTypes.values());
            },
            set: function (eSuperTypesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eSuperTypesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eSuperTypes(eSuperTypesP, true, true);
            }
          },
          internal_eSuperTypes: function (eSuperTypesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eSuperTypes.values(), eSuperTypesP)) {
              var kmf_previousVal = this._eSuperTypes;
              this._eSuperTypes.clear();
              {
                var tmp$0 = eSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eSuperTypes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eSuperTypes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eSuperTypes, eSuperTypesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddESuperTypes: function (eSuperTypesP) {
            var _key_ = eSuperTypesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eSuperTypes.containsKey_za3rmp$(_key_)) {
              this._eSuperTypes.put_wn2jw4$(_key_, eSuperTypesP);
              eSuperTypesP.addInboundReference(this, _.occi.util.Constants.Ref_eSuperTypes);
            }
          },
          addESuperTypes: function (eSuperTypesP) {
            this.internal_addESuperTypes(eSuperTypesP, true, true);
            return this;
          },
          addAllESuperTypes: function (eSuperTypesP) {
            this.internal_addAllESuperTypes(eSuperTypesP, true, true);
            return this;
          },
          internal_addESuperTypes: function (eSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddESuperTypes(eSuperTypesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eSuperTypes, eSuperTypesP, null, this, this.path()));
            }
          },
          internal_addAllESuperTypes: function (eSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddESuperTypes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eSuperTypesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddESuperTypes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eSuperTypes, eSuperTypesP, null, this, this.path()));
            }
          },
          removeESuperTypes: function (eSuperTypesP) {
            this.internal_removeESuperTypes(eSuperTypesP, true, true);
            return this;
          },
          removeAllESuperTypes: function () {
            this.internal_removeAllESuperTypes(true, true);
            return this;
          },
          internal_removeESuperTypes: function (eSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eSuperTypes.size() !== 0 && this._eSuperTypes.containsKey_za3rmp$(eSuperTypesP.internalGetKey())) {
              var previousPathToBeRemoved = eSuperTypesP.path();
              this._eSuperTypes.remove_za3rmp$(eSuperTypesP.internalGetKey());
              eSuperTypesP.removeInboundReference(this, _.occi.util.Constants.Ref_eSuperTypes);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eSuperTypes, eSuperTypesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllESuperTypes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eSuperTypes;
            this._eSuperTypes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eSuperTypes, temp_els, null, this, this.path()));
            }
          },
          eAllContainments: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllContainments.values());
            },
            set: function (eAllContainmentsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllContainmentsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllContainments(eAllContainmentsP, true, true);
            }
          },
          internal_eAllContainments: function (eAllContainmentsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllContainments.values(), eAllContainmentsP)) {
              var kmf_previousVal = this._eAllContainments;
              this._eAllContainments.clear();
              {
                var tmp$0 = eAllContainmentsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllContainments.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllContainments);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllContainments, eAllContainmentsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllContainments: function (eAllContainmentsP) {
            var _key_ = eAllContainmentsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllContainments.containsKey_za3rmp$(_key_)) {
              this._eAllContainments.put_wn2jw4$(_key_, eAllContainmentsP);
              eAllContainmentsP.addInboundReference(this, _.occi.util.Constants.Ref_eAllContainments);
            }
          },
          addEAllContainments: function (eAllContainmentsP) {
            this.internal_addEAllContainments(eAllContainmentsP, true, true);
            return this;
          },
          addAllEAllContainments: function (eAllContainmentsP) {
            this.internal_addAllEAllContainments(eAllContainmentsP, true, true);
            return this;
          },
          internal_addEAllContainments: function (eAllContainmentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllContainments(eAllContainmentsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllContainments, eAllContainmentsP, null, this, this.path()));
            }
          },
          internal_addAllEAllContainments: function (eAllContainmentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllContainmentsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllContainments(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllContainmentsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllContainments(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllContainments, eAllContainmentsP, null, this, this.path()));
            }
          },
          removeEAllContainments: function (eAllContainmentsP) {
            this.internal_removeEAllContainments(eAllContainmentsP, true, true);
            return this;
          },
          removeAllEAllContainments: function () {
            this.internal_removeAllEAllContainments(true, true);
            return this;
          },
          internal_removeEAllContainments: function (eAllContainmentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllContainments.size() !== 0 && this._eAllContainments.containsKey_za3rmp$(eAllContainmentsP.internalGetKey())) {
              var previousPathToBeRemoved = eAllContainmentsP.path();
              this._eAllContainments.remove_za3rmp$(eAllContainmentsP.internalGetKey());
              eAllContainmentsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllContainments);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllContainments, eAllContainmentsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllContainments: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllContainments;
            this._eAllContainments.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllContainments, temp_els, null, this, this.path()));
            }
          },
          eAllOperations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllOperations.values());
            },
            set: function (eAllOperationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllOperationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllOperations(eAllOperationsP, true, true);
            }
          },
          internal_eAllOperations: function (eAllOperationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllOperations.values(), eAllOperationsP)) {
              var kmf_previousVal = this._eAllOperations;
              this._eAllOperations.clear();
              {
                var tmp$0 = eAllOperationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllOperations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllOperations);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllOperations, eAllOperationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllOperations: function (eAllOperationsP) {
            var _key_ = eAllOperationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllOperations.containsKey_za3rmp$(_key_)) {
              this._eAllOperations.put_wn2jw4$(_key_, eAllOperationsP);
              eAllOperationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAllOperations);
            }
          },
          addEAllOperations: function (eAllOperationsP) {
            this.internal_addEAllOperations(eAllOperationsP, true, true);
            return this;
          },
          addAllEAllOperations: function (eAllOperationsP) {
            this.internal_addAllEAllOperations(eAllOperationsP, true, true);
            return this;
          },
          internal_addEAllOperations: function (eAllOperationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllOperations(eAllOperationsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllOperations, eAllOperationsP, null, this, this.path()));
            }
          },
          internal_addAllEAllOperations: function (eAllOperationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllOperationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllOperations(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllOperationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllOperations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllOperations, eAllOperationsP, null, this, this.path()));
            }
          },
          removeEAllOperations: function (eAllOperationsP) {
            this.internal_removeEAllOperations(eAllOperationsP, true, true);
            return this;
          },
          removeAllEAllOperations: function () {
            this.internal_removeAllEAllOperations(true, true);
            return this;
          },
          internal_removeEAllOperations: function (eAllOperationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllOperations.size() !== 0 && this._eAllOperations.containsKey_za3rmp$(eAllOperationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAllOperationsP.path();
              this._eAllOperations.remove_za3rmp$(eAllOperationsP.internalGetKey());
              eAllOperationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllOperations);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllOperations, eAllOperationsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllOperations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllOperations;
            this._eAllOperations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllOperations, temp_els, null, this, this.path()));
            }
          },
          eAllStructuralFeatures: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllStructuralFeatures.values());
            },
            set: function (eAllStructuralFeaturesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllStructuralFeaturesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllStructuralFeatures(eAllStructuralFeaturesP, true, true);
            }
          },
          internal_eAllStructuralFeatures: function (eAllStructuralFeaturesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllStructuralFeatures.values(), eAllStructuralFeaturesP)) {
              var kmf_previousVal = this._eAllStructuralFeatures;
              this._eAllStructuralFeatures.clear();
              {
                var tmp$0 = eAllStructuralFeaturesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllStructuralFeatures.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllStructuralFeatures);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllStructuralFeatures, eAllStructuralFeaturesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllStructuralFeatures: function (eAllStructuralFeaturesP) {
            var _key_ = eAllStructuralFeaturesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllStructuralFeatures.containsKey_za3rmp$(_key_)) {
              this._eAllStructuralFeatures.put_wn2jw4$(_key_, eAllStructuralFeaturesP);
              eAllStructuralFeaturesP.addInboundReference(this, _.occi.util.Constants.Ref_eAllStructuralFeatures);
            }
          },
          addEAllStructuralFeatures: function (eAllStructuralFeaturesP) {
            this.internal_addEAllStructuralFeatures(eAllStructuralFeaturesP, true, true);
            return this;
          },
          addAllEAllStructuralFeatures: function (eAllStructuralFeaturesP) {
            this.internal_addAllEAllStructuralFeatures(eAllStructuralFeaturesP, true, true);
            return this;
          },
          internal_addEAllStructuralFeatures: function (eAllStructuralFeaturesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllStructuralFeatures(eAllStructuralFeaturesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllStructuralFeatures, eAllStructuralFeaturesP, null, this, this.path()));
            }
          },
          internal_addAllEAllStructuralFeatures: function (eAllStructuralFeaturesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllStructuralFeaturesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllStructuralFeatures(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllStructuralFeaturesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllStructuralFeatures(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllStructuralFeatures, eAllStructuralFeaturesP, null, this, this.path()));
            }
          },
          removeEAllStructuralFeatures: function (eAllStructuralFeaturesP) {
            this.internal_removeEAllStructuralFeatures(eAllStructuralFeaturesP, true, true);
            return this;
          },
          removeAllEAllStructuralFeatures: function () {
            this.internal_removeAllEAllStructuralFeatures(true, true);
            return this;
          },
          internal_removeEAllStructuralFeatures: function (eAllStructuralFeaturesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllStructuralFeatures.size() !== 0 && this._eAllStructuralFeatures.containsKey_za3rmp$(eAllStructuralFeaturesP.internalGetKey())) {
              var previousPathToBeRemoved = eAllStructuralFeaturesP.path();
              this._eAllStructuralFeatures.remove_za3rmp$(eAllStructuralFeaturesP.internalGetKey());
              eAllStructuralFeaturesP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllStructuralFeatures);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllStructuralFeatures, eAllStructuralFeaturesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllStructuralFeatures: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllStructuralFeatures;
            this._eAllStructuralFeatures.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllStructuralFeatures, temp_els, null, this, this.path()));
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eAllReferences: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllReferences.values());
            },
            set: function (eAllReferencesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllReferencesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllReferences(eAllReferencesP, true, true);
            }
          },
          internal_eAllReferences: function (eAllReferencesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllReferences.values(), eAllReferencesP)) {
              var kmf_previousVal = this._eAllReferences;
              this._eAllReferences.clear();
              {
                var tmp$0 = eAllReferencesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllReferences.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllReferences);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllReferences, eAllReferencesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllReferences: function (eAllReferencesP) {
            var _key_ = eAllReferencesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllReferences.containsKey_za3rmp$(_key_)) {
              this._eAllReferences.put_wn2jw4$(_key_, eAllReferencesP);
              eAllReferencesP.addInboundReference(this, _.occi.util.Constants.Ref_eAllReferences);
            }
          },
          addEAllReferences: function (eAllReferencesP) {
            this.internal_addEAllReferences(eAllReferencesP, true, true);
            return this;
          },
          addAllEAllReferences: function (eAllReferencesP) {
            this.internal_addAllEAllReferences(eAllReferencesP, true, true);
            return this;
          },
          internal_addEAllReferences: function (eAllReferencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllReferences(eAllReferencesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllReferences, eAllReferencesP, null, this, this.path()));
            }
          },
          internal_addAllEAllReferences: function (eAllReferencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllReferencesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllReferences(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllReferencesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllReferences(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllReferences, eAllReferencesP, null, this, this.path()));
            }
          },
          removeEAllReferences: function (eAllReferencesP) {
            this.internal_removeEAllReferences(eAllReferencesP, true, true);
            return this;
          },
          removeAllEAllReferences: function () {
            this.internal_removeAllEAllReferences(true, true);
            return this;
          },
          internal_removeEAllReferences: function (eAllReferencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllReferences.size() !== 0 && this._eAllReferences.containsKey_za3rmp$(eAllReferencesP.internalGetKey())) {
              var previousPathToBeRemoved = eAllReferencesP.path();
              this._eAllReferences.remove_za3rmp$(eAllReferencesP.internalGetKey());
              eAllReferencesP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllReferences);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllReferences, eAllReferencesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllReferences: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllReferences;
            this._eAllReferences.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllReferences, temp_els, null, this, this.path()));
            }
          },
          eReferences: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eReferences.values());
            },
            set: function (eReferencesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eReferencesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eReferences(eReferencesP, true, true);
            }
          },
          internal_eReferences: function (eReferencesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eReferences.values(), eReferencesP)) {
              var kmf_previousVal = this._eReferences;
              this._eReferences.clear();
              {
                var tmp$0 = eReferencesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eReferences.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eReferences);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eReferences, eReferencesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEReferences: function (eReferencesP) {
            var _key_ = eReferencesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eReferences.containsKey_za3rmp$(_key_)) {
              this._eReferences.put_wn2jw4$(_key_, eReferencesP);
              eReferencesP.addInboundReference(this, _.occi.util.Constants.Ref_eReferences);
            }
          },
          addEReferences: function (eReferencesP) {
            this.internal_addEReferences(eReferencesP, true, true);
            return this;
          },
          addAllEReferences: function (eReferencesP) {
            this.internal_addAllEReferences(eReferencesP, true, true);
            return this;
          },
          internal_addEReferences: function (eReferencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEReferences(eReferencesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eReferences, eReferencesP, null, this, this.path()));
            }
          },
          internal_addAllEReferences: function (eReferencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eReferencesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEReferences(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eReferencesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEReferences(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eReferences, eReferencesP, null, this, this.path()));
            }
          },
          removeEReferences: function (eReferencesP) {
            this.internal_removeEReferences(eReferencesP, true, true);
            return this;
          },
          removeAllEReferences: function () {
            this.internal_removeAllEReferences(true, true);
            return this;
          },
          internal_removeEReferences: function (eReferencesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eReferences.size() !== 0 && this._eReferences.containsKey_za3rmp$(eReferencesP.internalGetKey())) {
              var previousPathToBeRemoved = eReferencesP.path();
              this._eReferences.remove_za3rmp$(eReferencesP.internalGetKey());
              eReferencesP.removeInboundReference(this, _.occi.util.Constants.Ref_eReferences);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eReferences, eReferencesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEReferences: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eReferences;
            this._eReferences.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eReferences, temp_els, null, this, this.path()));
            }
          },
          ePackage: {
            get: function () {
              return this.$ePackage_542zmw$;
            },
            set: function (ePackageP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_ePackage(ePackageP, true, true);
            }
          },
          internal_ePackage: function (ePackageP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$ePackage_542zmw$, ePackageP)) {
              if (setOpposite) {
                if (this.$ePackage_542zmw$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$ePackage_542zmw$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eClassifiers, this, false, fireEvents);
                }
                if (ePackageP != null) {
                  ePackageP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eClassifiers, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$ePackage_542zmw$;
              if (ePackageP != null) {
                (ePackageP != null ? ePackageP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              }
               else {
                if (this.$ePackage_542zmw$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$ePackage_542zmw$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
                }
              }
              this.$ePackage_542zmw$ = ePackageP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_ePackage, ePackageP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEPackage: function (ref) {
            return this;
          },
          eIDAttribute: {
            get: function () {
              return this.$eIDAttribute_e5a7jn$;
            },
            set: function (eIDAttributeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eIDAttribute(eIDAttributeP, true, true);
            }
          },
          internal_eIDAttribute: function (eIDAttributeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eIDAttribute_e5a7jn$, eIDAttributeP)) {
              var kmf_previousVal = this.$eIDAttribute_e5a7jn$;
              if (eIDAttributeP != null) {
                (eIDAttributeP != null ? eIDAttributeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eIDAttribute);
              }
               else {
                if (this.$eIDAttribute_e5a7jn$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eIDAttribute_e5a7jn$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eIDAttribute);
                }
              }
              this.$eIDAttribute_e5a7jn$ = eIDAttributeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eIDAttribute, eIDAttributeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEIDAttribute: function (ref) {
            return this;
          },
          eAllSuperTypes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllSuperTypes.values());
            },
            set: function (eAllSuperTypesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllSuperTypesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllSuperTypes(eAllSuperTypesP, true, true);
            }
          },
          internal_eAllSuperTypes: function (eAllSuperTypesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllSuperTypes.values(), eAllSuperTypesP)) {
              var kmf_previousVal = this._eAllSuperTypes;
              this._eAllSuperTypes.clear();
              {
                var tmp$0 = eAllSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllSuperTypes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllSuperTypes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllSuperTypes, eAllSuperTypesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllSuperTypes: function (eAllSuperTypesP) {
            var _key_ = eAllSuperTypesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllSuperTypes.containsKey_za3rmp$(_key_)) {
              this._eAllSuperTypes.put_wn2jw4$(_key_, eAllSuperTypesP);
              eAllSuperTypesP.addInboundReference(this, _.occi.util.Constants.Ref_eAllSuperTypes);
            }
          },
          addEAllSuperTypes: function (eAllSuperTypesP) {
            this.internal_addEAllSuperTypes(eAllSuperTypesP, true, true);
            return this;
          },
          addAllEAllSuperTypes: function (eAllSuperTypesP) {
            this.internal_addAllEAllSuperTypes(eAllSuperTypesP, true, true);
            return this;
          },
          internal_addEAllSuperTypes: function (eAllSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllSuperTypes(eAllSuperTypesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllSuperTypes, eAllSuperTypesP, null, this, this.path()));
            }
          },
          internal_addAllEAllSuperTypes: function (eAllSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllSuperTypes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllSuperTypesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllSuperTypes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllSuperTypes, eAllSuperTypesP, null, this, this.path()));
            }
          },
          removeEAllSuperTypes: function (eAllSuperTypesP) {
            this.internal_removeEAllSuperTypes(eAllSuperTypesP, true, true);
            return this;
          },
          removeAllEAllSuperTypes: function () {
            this.internal_removeAllEAllSuperTypes(true, true);
            return this;
          },
          internal_removeEAllSuperTypes: function (eAllSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllSuperTypes.size() !== 0 && this._eAllSuperTypes.containsKey_za3rmp$(eAllSuperTypesP.internalGetKey())) {
              var previousPathToBeRemoved = eAllSuperTypesP.path();
              this._eAllSuperTypes.remove_za3rmp$(eAllSuperTypesP.internalGetKey());
              eAllSuperTypesP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllSuperTypes);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllSuperTypes, eAllSuperTypesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllSuperTypes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllSuperTypes;
            this._eAllSuperTypes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllSuperTypes, temp_els, null, this, this.path()));
            }
          },
          eAllGenericSuperTypes: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAllGenericSuperTypes.values());
            },
            set: function (eAllGenericSuperTypesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAllGenericSuperTypesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAllGenericSuperTypes(eAllGenericSuperTypesP, true, true);
            }
          },
          internal_eAllGenericSuperTypes: function (eAllGenericSuperTypesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAllGenericSuperTypes.values(), eAllGenericSuperTypesP)) {
              var kmf_previousVal = this._eAllGenericSuperTypes;
              this._eAllGenericSuperTypes.clear();
              {
                var tmp$0 = eAllGenericSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAllGenericSuperTypes.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAllGenericSuperTypes);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllGenericSuperTypes, eAllGenericSuperTypesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAllGenericSuperTypes: function (eAllGenericSuperTypesP) {
            var _key_ = eAllGenericSuperTypesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAllGenericSuperTypes.containsKey_za3rmp$(_key_)) {
              this._eAllGenericSuperTypes.put_wn2jw4$(_key_, eAllGenericSuperTypesP);
              eAllGenericSuperTypesP.addInboundReference(this, _.occi.util.Constants.Ref_eAllGenericSuperTypes);
            }
          },
          addEAllGenericSuperTypes: function (eAllGenericSuperTypesP) {
            this.internal_addEAllGenericSuperTypes(eAllGenericSuperTypesP, true, true);
            return this;
          },
          addAllEAllGenericSuperTypes: function (eAllGenericSuperTypesP) {
            this.internal_addAllEAllGenericSuperTypes(eAllGenericSuperTypesP, true, true);
            return this;
          },
          internal_addEAllGenericSuperTypes: function (eAllGenericSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAllGenericSuperTypes(eAllGenericSuperTypesP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllGenericSuperTypes, eAllGenericSuperTypesP, null, this, this.path()));
            }
          },
          internal_addAllEAllGenericSuperTypes: function (eAllGenericSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAllGenericSuperTypesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAllGenericSuperTypes(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eAllGenericSuperTypesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAllGenericSuperTypes(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllGenericSuperTypes, eAllGenericSuperTypesP, null, this, this.path()));
            }
          },
          removeEAllGenericSuperTypes: function (eAllGenericSuperTypesP) {
            this.internal_removeEAllGenericSuperTypes(eAllGenericSuperTypesP, true, true);
            return this;
          },
          removeAllEAllGenericSuperTypes: function () {
            this.internal_removeAllEAllGenericSuperTypes(true, true);
            return this;
          },
          internal_removeEAllGenericSuperTypes: function (eAllGenericSuperTypesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAllGenericSuperTypes.size() !== 0 && this._eAllGenericSuperTypes.containsKey_za3rmp$(eAllGenericSuperTypesP.internalGetKey())) {
              var previousPathToBeRemoved = eAllGenericSuperTypesP.path();
              this._eAllGenericSuperTypes.remove_za3rmp$(eAllGenericSuperTypesP.internalGetKey());
              eAllGenericSuperTypesP.removeInboundReference(this, _.occi.util.Constants.Ref_eAllGenericSuperTypes);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllGenericSuperTypes, eAllGenericSuperTypesP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEAllGenericSuperTypes: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eAllGenericSuperTypes;
            this._eAllGenericSuperTypes.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAllGenericSuperTypes, temp_els, null, this, this.path()));
            }
          },
          eOperations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eOperations.values());
            },
            set: function (eOperationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eOperationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eOperations(eOperationsP, true, true);
            }
          },
          internal_eOperations: function (eOperationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eOperations.values(), eOperationsP)) {
              var kmf_previousVal = this._eOperations;
              this.internal_removeAllEOperations(true, false);
              {
                var tmp$0 = eOperationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eOperations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eOperations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eOperations, el), _.occi.util.Constants.Ref_eOperations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eOperations, eOperationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEOperations: function (eOperationsP) {
            var _key_ = eOperationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eOperations.containsKey_za3rmp$(_key_)) {
              this._eOperations.put_wn2jw4$(_key_, eOperationsP);
              eOperationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eOperations, eOperationsP), _.occi.util.Constants.Ref_eOperations);
              eOperationsP.addInboundReference(this, _.occi.util.Constants.Ref_eOperations);
            }
          },
          addEOperations: function (eOperationsP) {
            this.internal_addEOperations(eOperationsP, true, true);
            return this;
          },
          addAllEOperations: function (eOperationsP) {
            this.internal_addAllEOperations(eOperationsP, true, true);
            return this;
          },
          internal_addEOperations: function (eOperationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEOperations(eOperationsP);
            if (setOpposite) {
              eOperationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eOperations, eOperationsP, null, this, this.path()));
            }
          },
          internal_addAllEOperations: function (eOperationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eOperationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEOperations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eOperationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEOperations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eOperations, eOperationsP, null, this, this.path()));
            }
          },
          removeEOperations: function (eOperationsP) {
            this.internal_removeEOperations(eOperationsP, true, true);
            return this;
          },
          removeAllEOperations: function () {
            this.internal_removeAllEOperations(true, true);
            return this;
          },
          internal_removeEOperations: function (eOperationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eOperations.size() !== 0 && this._eOperations.containsKey_za3rmp$(eOperationsP.internalGetKey())) {
              var previousPathToBeRemoved = eOperationsP.path();
              this._eOperations.remove_za3rmp$(eOperationsP.internalGetKey());
              eOperationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eOperations);
              eOperationsP.setEContainer(null, null, null);
              if (!this.removeAllEOperationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eOperations, eOperationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eOperationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEOperations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEOperationsCurrentlyProcessing = true;
            }
            var temp_els = this.eOperations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eOperations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eContainingClass, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eOperations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eOperations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eOperations, temp_els, null, this, this.path()));
              this.removeAllEOperationsCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceClassName) {
                this.internal_instanceClassName(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceClass) {
                this.internal_instanceClass(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValue) {
                this.internal_defaultValue(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_instanceTypeName) {
                this.internal_instanceTypeName(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_abstract) {
                this.internal_abstract(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_interface) {
                this.internal_interface(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_ePackage) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_ePackage(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eTypeParameters) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllETypeParameters();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eTypeParameters.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eTypeParameters.remove_za3rmp$(value);
                      this._eTypeParameters.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eSuperTypes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addESuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllESuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeESuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllESuperTypes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eSuperTypes.size() !== 0 && this._eSuperTypes.containsKey_za3rmp$(value)) {
                      var obj_1 = this._eSuperTypes.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._eSuperTypes.remove_za3rmp$(value);
                      this._eSuperTypes.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eOperations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEOperations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEOperations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEOperations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEOperations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eOperations.size() !== 0 && this._eOperations.containsKey_za3rmp$(value)) {
                      var obj_2 = this._eOperations.get_za3rmp$(value);
                      var objNewKey_2 = (obj_2 != null ? obj_2 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_2 == null) {
                        throw new Error('Key newed to null ' + obj_2);
                      }
                      this._eOperations.remove_za3rmp$(value);
                      this._eOperations.put_wn2jw4$(objNewKey_2, obj_2);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllAttributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllAttributes.size() !== 0 && this._eAllAttributes.containsKey_za3rmp$(value)) {
                      var obj_3 = this._eAllAttributes.get_za3rmp$(value);
                      var objNewKey_3 = (obj_3 != null ? obj_3 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_3 == null) {
                        throw new Error('Key newed to null ' + obj_3);
                      }
                      this._eAllAttributes.remove_za3rmp$(value);
                      this._eAllAttributes.put_wn2jw4$(objNewKey_3, obj_3);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllReferences) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllReferences();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllReferences.size() !== 0 && this._eAllReferences.containsKey_za3rmp$(value)) {
                      var obj_4 = this._eAllReferences.get_za3rmp$(value);
                      var objNewKey_4 = (obj_4 != null ? obj_4 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_4 == null) {
                        throw new Error('Key newed to null ' + obj_4);
                      }
                      this._eAllReferences.remove_za3rmp$(value);
                      this._eAllReferences.put_wn2jw4$(objNewKey_4, obj_4);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eReferences) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEReferences(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEReferences();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eReferences.size() !== 0 && this._eReferences.containsKey_za3rmp$(value)) {
                      var obj_5 = this._eReferences.get_za3rmp$(value);
                      var objNewKey_5 = (obj_5 != null ? obj_5 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_5 == null) {
                        throw new Error('Key newed to null ' + obj_5);
                      }
                      this._eReferences.remove_za3rmp$(value);
                      this._eReferences.put_wn2jw4$(objNewKey_5, obj_5);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAttributes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAttributes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAttributes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAttributes.size() !== 0 && this._eAttributes.containsKey_za3rmp$(value)) {
                      var obj_6 = this._eAttributes.get_za3rmp$(value);
                      var objNewKey_6 = (obj_6 != null ? obj_6 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_6 == null) {
                        throw new Error('Key newed to null ' + obj_6);
                      }
                      this._eAttributes.remove_za3rmp$(value);
                      this._eAttributes.put_wn2jw4$(objNewKey_6, obj_6);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllContainments) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllContainments(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllContainments(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllContainments(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllContainments();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllContainments.size() !== 0 && this._eAllContainments.containsKey_za3rmp$(value)) {
                      var obj_7 = this._eAllContainments.get_za3rmp$(value);
                      var objNewKey_7 = (obj_7 != null ? obj_7 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_7 == null) {
                        throw new Error('Key newed to null ' + obj_7);
                      }
                      this._eAllContainments.remove_za3rmp$(value);
                      this._eAllContainments.put_wn2jw4$(objNewKey_7, obj_7);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllOperations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllOperations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllOperations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllOperations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllOperations();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllOperations.size() !== 0 && this._eAllOperations.containsKey_za3rmp$(value)) {
                      var obj_8 = this._eAllOperations.get_za3rmp$(value);
                      var objNewKey_8 = (obj_8 != null ? obj_8 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_8 == null) {
                        throw new Error('Key newed to null ' + obj_8);
                      }
                      this._eAllOperations.remove_za3rmp$(value);
                      this._eAllOperations.put_wn2jw4$(objNewKey_8, obj_8);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllStructuralFeatures) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllStructuralFeatures(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllStructuralFeatures(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllStructuralFeatures(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllStructuralFeatures();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllStructuralFeatures.size() !== 0 && this._eAllStructuralFeatures.containsKey_za3rmp$(value)) {
                      var obj_9 = this._eAllStructuralFeatures.get_za3rmp$(value);
                      var objNewKey_9 = (obj_9 != null ? obj_9 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_9 == null) {
                        throw new Error('Key newed to null ' + obj_9);
                      }
                      this._eAllStructuralFeatures.remove_za3rmp$(value);
                      this._eAllStructuralFeatures.put_wn2jw4$(objNewKey_9, obj_9);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllSuperTypes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllSuperTypes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllSuperTypes.size() !== 0 && this._eAllSuperTypes.containsKey_za3rmp$(value)) {
                      var obj_10 = this._eAllSuperTypes.get_za3rmp$(value);
                      var objNewKey_10 = (obj_10 != null ? obj_10 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_10 == null) {
                        throw new Error('Key newed to null ' + obj_10);
                      }
                      this._eAllSuperTypes.remove_za3rmp$(value);
                      this._eAllSuperTypes.put_wn2jw4$(objNewKey_10, obj_10);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eIDAttribute) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eIDAttribute(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eIDAttribute(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eIDAttribute(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eStructuralFeatures) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEStructuralFeatures(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEStructuralFeatures(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEStructuralFeatures(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEStructuralFeatures(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eStructuralFeatures.size() !== 0 && this._eStructuralFeatures.containsKey_za3rmp$(value)) {
                      var obj_11 = this._eStructuralFeatures.get_za3rmp$(value);
                      var objNewKey_11 = (obj_11 != null ? obj_11 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_11 == null) {
                        throw new Error('Key newed to null ' + obj_11);
                      }
                      this._eStructuralFeatures.remove_za3rmp$(value);
                      this._eStructuralFeatures.put_wn2jw4$(objNewKey_11, obj_11);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eGenericSuperTypes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEGenericSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEGenericSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEGenericSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEGenericSuperTypes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eGenericSuperTypes.size() !== 0 && this._eGenericSuperTypes.containsKey_za3rmp$(value)) {
                      var obj_12 = this._eGenericSuperTypes.get_za3rmp$(value);
                      var objNewKey_12 = (obj_12 != null ? obj_12 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_12 == null) {
                        throw new Error('Key newed to null ' + obj_12);
                      }
                      this._eGenericSuperTypes.remove_za3rmp$(value);
                      this._eGenericSuperTypes.put_wn2jw4$(objNewKey_12, obj_12);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAllGenericSuperTypes) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAllGenericSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAllGenericSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAllGenericSuperTypes(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEAllGenericSuperTypes();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAllGenericSuperTypes.size() !== 0 && this._eAllGenericSuperTypes.containsKey_za3rmp$(value)) {
                      var obj_13 = this._eAllGenericSuperTypes.get_za3rmp$(value);
                      var objNewKey_13 = (obj_13 != null ? obj_13 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_13 == null) {
                        throw new Error('Key newed to null ' + obj_13);
                      }
                      this._eAllGenericSuperTypes.remove_za3rmp$(value);
                      this._eAllGenericSuperTypes.put_wn2jw4$(objNewKey_13, obj_13);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findETypeParametersByID: function (key) {
            return this._eTypeParameters.get_za3rmp$(key);
          },
          findESuperTypesByID: function (key) {
            return this._eSuperTypes.get_za3rmp$(key);
          },
          findEOperationsByID: function (key) {
            return this._eOperations.get_za3rmp$(key);
          },
          findEAllAttributesByID: function (key) {
            return this._eAllAttributes.get_za3rmp$(key);
          },
          findEAllReferencesByID: function (key) {
            return this._eAllReferences.get_za3rmp$(key);
          },
          findEReferencesByID: function (key) {
            return this._eReferences.get_za3rmp$(key);
          },
          findEAttributesByID: function (key) {
            return this._eAttributes.get_za3rmp$(key);
          },
          findEAllContainmentsByID: function (key) {
            return this._eAllContainments.get_za3rmp$(key);
          },
          findEAllOperationsByID: function (key) {
            return this._eAllOperations.get_za3rmp$(key);
          },
          findEAllStructuralFeaturesByID: function (key) {
            return this._eAllStructuralFeatures.get_za3rmp$(key);
          },
          findEAllSuperTypesByID: function (key) {
            return this._eAllSuperTypes.get_za3rmp$(key);
          },
          findEStructuralFeaturesByID: function (key) {
            return this._eStructuralFeatures.get_za3rmp$(key);
          },
          findEGenericSuperTypesByID: function (key) {
            return this._eGenericSuperTypes.get_za3rmp$(key);
          },
          findEAllGenericSuperTypesByID: function (key) {
            return this._eAllGenericSuperTypes.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_ePackage) {
                var objFound = this.ePackage;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eTypeParameters) {
                return this.findETypeParametersByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eSuperTypes) {
                return this.findESuperTypesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eOperations) {
                return this.findEOperationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllAttributes) {
                return this.findEAllAttributesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllReferences) {
                return this.findEAllReferencesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eReferences) {
                return this.findEReferencesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAttributes) {
                return this.findEAttributesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllContainments) {
                return this.findEAllContainmentsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllOperations) {
                return this.findEAllOperationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllStructuralFeatures) {
                return this.findEAllStructuralFeaturesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllSuperTypes) {
                return this.findEAllSuperTypesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eIDAttribute) {
                var objFound_0 = this.eIDAttribute;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eStructuralFeatures) {
                return this.findEStructuralFeaturesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eGenericSuperTypes) {
                return this.findEGenericSuperTypesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eAllGenericSuperTypes) {
                return this.findEAllGenericSuperTypesByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eTypeParameters, _.occi.util.Constants.ecore_ETypeParameter)) {
                {
                  var tmp$1 = this._eTypeParameters.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eTypeParameters.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eTypeParameters);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eTypeParameters);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eOperations, _.occi.util.Constants.ecore_EOperation)) {
                {
                  var tmp$2 = this._eOperations.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._eOperations.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eOperations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eOperations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eStructuralFeatures, _.occi.util.Constants.ecore_EStructuralFeature)) {
                {
                  var tmp$3 = this._eStructuralFeatures.keySet().iterator();
                  while (tmp$3.hasNext()) {
                    var KMFLoopEntryKey_2 = tmp$3.next();
                    this.internal_visit(visitor, this._eStructuralFeatures.get_za3rmp$(KMFLoopEntryKey_2), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eStructuralFeatures);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eStructuralFeatures);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eGenericSuperTypes, _.occi.util.Constants.ecore_EGenericType)) {
                {
                  var tmp$4 = this._eGenericSuperTypes.keySet().iterator();
                  while (tmp$4.hasNext()) {
                    var KMFLoopEntryKey_3 = tmp$4.next();
                    this.internal_visit(visitor, this._eGenericSuperTypes.get_za3rmp$(KMFLoopEntryKey_3), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eGenericSuperTypes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eGenericSuperTypes);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_ePackage, _.occi.util.Constants.ecore_EPackage)) {
                this.internal_visit(visitor, this.ePackage, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_ePackage);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_ePackage);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eSuperTypes, _.occi.util.Constants.ecore_EClass)) {
                {
                  var tmp$5 = this._eSuperTypes.keySet().iterator();
                  while (tmp$5.hasNext()) {
                    var KMFLoopEntryKey_4 = tmp$5.next();
                    this.internal_visit(visitor, this._eSuperTypes.get_za3rmp$(KMFLoopEntryKey_4), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eSuperTypes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eSuperTypes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllAttributes, _.occi.util.Constants.ecore_EAttribute)) {
                {
                  var tmp$6 = this._eAllAttributes.keySet().iterator();
                  while (tmp$6.hasNext()) {
                    var KMFLoopEntryKey_5 = tmp$6.next();
                    this.internal_visit(visitor, this._eAllAttributes.get_za3rmp$(KMFLoopEntryKey_5), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllAttributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllAttributes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllReferences, _.occi.util.Constants.ecore_EReference)) {
                {
                  var tmp$7 = this._eAllReferences.keySet().iterator();
                  while (tmp$7.hasNext()) {
                    var KMFLoopEntryKey_6 = tmp$7.next();
                    this.internal_visit(visitor, this._eAllReferences.get_za3rmp$(KMFLoopEntryKey_6), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllReferences);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllReferences);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eReferences, _.occi.util.Constants.ecore_EReference)) {
                {
                  var tmp$8 = this._eReferences.keySet().iterator();
                  while (tmp$8.hasNext()) {
                    var KMFLoopEntryKey_7 = tmp$8.next();
                    this.internal_visit(visitor, this._eReferences.get_za3rmp$(KMFLoopEntryKey_7), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eReferences);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eReferences);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAttributes, _.occi.util.Constants.ecore_EAttribute)) {
                {
                  var tmp$9 = this._eAttributes.keySet().iterator();
                  while (tmp$9.hasNext()) {
                    var KMFLoopEntryKey_8 = tmp$9.next();
                    this.internal_visit(visitor, this._eAttributes.get_za3rmp$(KMFLoopEntryKey_8), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAttributes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAttributes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllContainments, _.occi.util.Constants.ecore_EReference)) {
                {
                  var tmp$10 = this._eAllContainments.keySet().iterator();
                  while (tmp$10.hasNext()) {
                    var KMFLoopEntryKey_9 = tmp$10.next();
                    this.internal_visit(visitor, this._eAllContainments.get_za3rmp$(KMFLoopEntryKey_9), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllContainments);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllContainments);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllOperations, _.occi.util.Constants.ecore_EOperation)) {
                {
                  var tmp$11 = this._eAllOperations.keySet().iterator();
                  while (tmp$11.hasNext()) {
                    var KMFLoopEntryKey_10 = tmp$11.next();
                    this.internal_visit(visitor, this._eAllOperations.get_za3rmp$(KMFLoopEntryKey_10), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllOperations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllOperations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllStructuralFeatures, _.occi.util.Constants.ecore_EStructuralFeature)) {
                {
                  var tmp$12 = this._eAllStructuralFeatures.keySet().iterator();
                  while (tmp$12.hasNext()) {
                    var KMFLoopEntryKey_11 = tmp$12.next();
                    this.internal_visit(visitor, this._eAllStructuralFeatures.get_za3rmp$(KMFLoopEntryKey_11), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllStructuralFeatures);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllStructuralFeatures);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllSuperTypes, _.occi.util.Constants.ecore_EClass)) {
                {
                  var tmp$13 = this._eAllSuperTypes.keySet().iterator();
                  while (tmp$13.hasNext()) {
                    var KMFLoopEntryKey_12 = tmp$13.next();
                    this.internal_visit(visitor, this._eAllSuperTypes.get_za3rmp$(KMFLoopEntryKey_12), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllSuperTypes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllSuperTypes);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eIDAttribute, _.occi.util.Constants.ecore_EAttribute)) {
                this.internal_visit(visitor, this.eIDAttribute, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eIDAttribute);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eIDAttribute);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAllGenericSuperTypes, _.occi.util.Constants.ecore_EGenericType)) {
                {
                  var tmp$14 = this._eAllGenericSuperTypes.keySet().iterator();
                  while (tmp$14.hasNext()) {
                    var KMFLoopEntryKey_13 = tmp$14.next();
                    this.internal_visit(visitor, this._eAllGenericSuperTypes.get_za3rmp$(KMFLoopEntryKey_13), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAllGenericSuperTypes);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAllGenericSuperTypes);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.instanceTypeName, _.occi.util.Constants.Att_instanceTypeName, this);
            visitor.visit(this.defaultValue, _.occi.util.Constants.Att_defaultValue, this);
            visitor.visit(this.instanceClassName, _.occi.util.Constants.Att_instanceClassName, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.instanceClass, _.occi.util.Constants.Att_instanceClass, this);
            visitor.visit(this.abstract, _.occi.util.Constants.Att_abstract, this);
            visitor.visit(this.interface, _.occi.util.Constants.Att_interface, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EClass;
          }
        }),
        EStringToStringMapEntryImpl: Kotlin.createClass(function () {
          return [_.ecore.EStringToStringMapEntry, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_5ctxb8$ = null;
          this.$internal_containmentRefName_qhgbd8$ = null;
          this.$internal_unsetCmd_cn0uxl$ = null;
          this.$internal_readOnlyElem_cmrpeh$ = false;
          this.$internal_recursive_readOnlyElem_n9g6yu$ = false;
          this.$internal_inboundReferences_8o7el5$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_iqt1kr$ = false;
          this.$internal_is_deleted_2k35fw$ = false;
          this.$is_root_83d9yb$ = false;
          this.$internal_modelElementListeners_s4fvj0$ = null;
          this.$internal_modelTreeListeners_sep928$ = null;
          this.$path_cache_5rqf8i$ = null;
          this.$key_cache_fmqje0$ = null;
          this.$key_ihy2vv$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$value_j6mavd$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$generated_KMF_ID_kp0tmo$ = '' + Math.random() + (new Date()).getTime();
        }, /** @lends _.ecore.impl.EStringToStringMapEntryImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_5ctxb8$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_5ctxb8$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_qhgbd8$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_qhgbd8$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_cn0uxl$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_cn0uxl$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_cmrpeh$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_cmrpeh$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_n9g6yu$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_n9g6yu$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_8o7el5$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_8o7el5$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_iqt1kr$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_iqt1kr$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_2k35fw$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_2k35fw$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_83d9yb$;
            },
            set: function (tmp$0) {
              this.$is_root_83d9yb$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_s4fvj0$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_s4fvj0$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_sep928$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_sep928$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_5rqf8i$;
            },
            set: function (tmp$0) {
              this.$path_cache_5rqf8i$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_fmqje0$;
            },
            set: function (tmp$0) {
              this.$key_cache_fmqje0$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$0;
              ((tmp$0 = this.internal_unsetCmd) != null ? tmp$0 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withKey: function (p) {
            this.key = p;
            return this;
          },
          key: {
            get: function () {
              return this.$key_ihy2vv$;
            },
            set: function (iP) {
              this.internal_key(iP, true);
            }
          },
          internal_key: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.key)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$key_ihy2vv$;
              this.$key_ihy2vv$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_key, this.key, kmf_previousVal, this, oldPath));
              }
            }
          },
          withValue: function (p) {
            this.value = p;
            return this;
          },
          value: {
            get: function () {
              return this.$value_j6mavd$;
            },
            set: function (iP) {
              this.internal_value(iP, true);
            }
          },
          internal_value: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.value)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$value_j6mavd$;
              this.$value_j6mavd$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_value, this.value, kmf_previousVal, this, oldPath));
              }
            }
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_kp0tmo$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_kp0tmo$;
              this.$generated_KMF_ID_kp0tmo$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_key) {
                this.internal_key(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_value) {
                this.internal_value(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findByID: function (relationName, idP) {
            {
              {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.value, _.occi.util.Constants.Att_value, this);
            visitor.visit(this.key, _.occi.util.Constants.Att_key, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EStringToStringMapEntry;
          }
        }),
        EAttributeImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EAttribute, _.ecore.EAttribute, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_i5itzp$ = null;
          this.$internal_containmentRefName_azithh$ = null;
          this.$internal_unsetCmd_dcr2n4$ = null;
          this.$internal_readOnlyElem_7i0b4w$ = false;
          this.$internal_recursive_readOnlyElem_g8svil$ = false;
          this.$internal_inboundReferences_ic5iwi$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_99mrw4$ = false;
          this.$internal_is_deleted_ky9lv1$ = false;
          this.$is_root_kagujo$ = false;
          this.$internal_modelElementListeners_q23q0z$ = null;
          this.$internal_modelTreeListeners_cwrr6h$ = null;
          this.$path_cache_itxkat$ = null;
          this.$key_cache_h4nkmn$ = null;
          this.$generated_KMF_ID_tqj5p5$ = '' + Math.random() + (new Date()).getTime();
          this.$name_fhuxum$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$ordered_y3wgcm$ = true;
          this.$unique_l8bgd8$ = true;
          this.$lowerBound_i8a8kw$ = _.occi.util.Constants.INT_DEFAULTVAL;
          this.$upperBound_4zoxzj$ = 1;
          this.$many_fhuawi$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$required_it75hq$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$changeable_2aqew3$ = true;
          this.$volatile_rhw9kf$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$transient_90sx61$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$defaultValueLiteral_a0l1hw$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$defaultValue_mapm2l$ = null;
          this.$unsettable_avvxaw$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$derived_bl997u$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$iD_og68ky$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$eAttributeType_gf5nto$ = null;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$eGenericType_y4ynxd$ = null;
          this.$eType_gzbfec$ = null;
          this.$eContainingClass_5lo188$ = null;
        }, /** @lends _.ecore.impl.EAttributeImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_i5itzp$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_i5itzp$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_azithh$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_azithh$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_dcr2n4$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_dcr2n4$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_7i0b4w$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_7i0b4w$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_g8svil$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_g8svil$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_ic5iwi$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_ic5iwi$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_99mrw4$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_99mrw4$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_ky9lv1$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_ky9lv1$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_kagujo$;
            },
            set: function (tmp$0) {
              this.$is_root_kagujo$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_q23q0z$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_q23q0z$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_cwrr6h$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_cwrr6h$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_itxkat$;
            },
            set: function (tmp$0) {
              this.$path_cache_itxkat$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_h4nkmn$;
            },
            set: function (tmp$0) {
              this.$key_cache_h4nkmn$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.eType != null) {
              var tmp$1;
              ((tmp$1 = this.eType) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
              this.eType = null;
            }
            if (this.eGenericType != null) {
              var tmp$2;
              ((tmp$2 = this.eGenericType) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              this.eGenericType = null;
            }
            if (this.eContainingClass != null) {
              var tmp$3, tmp$4;
              ((tmp$3 = this.eContainingClass) != null ? tmp$3 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
              ((tmp$4 = this.eContainingClass) != null ? tmp$4 : Kotlin.throwNPE()).delete();
              this.eContainingClass = null;
            }
            if (this.eAttributeType != null) {
              var tmp$5;
              ((tmp$5 = this.eAttributeType) != null ? tmp$5 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eAttributeType);
              this.eAttributeType = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$6;
              ((tmp$6 = this.internal_unsetCmd) != null ? tmp$6 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_tqj5p5$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_tqj5p5$;
              this.$generated_KMF_ID_tqj5p5$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_fhuxum$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_fhuxum$;
              this.$name_fhuxum$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withOrdered: function (p) {
            this.ordered = p;
            return this;
          },
          ordered: {
            get: function () {
              return this.$ordered_y3wgcm$;
            },
            set: function (iP) {
              this.internal_ordered(iP, true);
            }
          },
          internal_ordered: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.ordered)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$ordered_y3wgcm$;
              this.$ordered_y3wgcm$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_ordered, this.ordered, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUnique: function (p) {
            this.unique = p;
            return this;
          },
          unique: {
            get: function () {
              return this.$unique_l8bgd8$;
            },
            set: function (iP) {
              this.internal_unique(iP, true);
            }
          },
          internal_unique: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.unique)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$unique_l8bgd8$;
              this.$unique_l8bgd8$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_unique, this.unique, kmf_previousVal, this, oldPath));
              }
            }
          },
          withLowerBound: function (p) {
            this.lowerBound = p;
            return this;
          },
          lowerBound: {
            get: function () {
              return this.$lowerBound_i8a8kw$;
            },
            set: function (iP) {
              this.internal_lowerBound(iP, true);
            }
          },
          internal_lowerBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.lowerBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$lowerBound_i8a8kw$;
              this.$lowerBound_i8a8kw$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_lowerBound, this.lowerBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUpperBound: function (p) {
            this.upperBound = p;
            return this;
          },
          upperBound: {
            get: function () {
              return this.$upperBound_4zoxzj$;
            },
            set: function (iP) {
              this.internal_upperBound(iP, true);
            }
          },
          internal_upperBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.upperBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$upperBound_4zoxzj$;
              this.$upperBound_4zoxzj$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_upperBound, this.upperBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withMany: function (p) {
            this.many = p;
            return this;
          },
          many: {
            get: function () {
              return this.$many_fhuawi$;
            },
            set: function (iP) {
              this.internal_many(iP, true);
            }
          },
          internal_many: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.many)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$many_fhuawi$;
              this.$many_fhuawi$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_many, this.many, kmf_previousVal, this, oldPath));
              }
            }
          },
          withRequired: function (p) {
            this.required = p;
            return this;
          },
          required: {
            get: function () {
              return this.$required_it75hq$;
            },
            set: function (iP) {
              this.internal_required(iP, true);
            }
          },
          internal_required: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.required)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$required_it75hq$;
              this.$required_it75hq$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_required, this.required, kmf_previousVal, this, oldPath));
              }
            }
          },
          withChangeable: function (p) {
            this.changeable = p;
            return this;
          },
          changeable: {
            get: function () {
              return this.$changeable_2aqew3$;
            },
            set: function (iP) {
              this.internal_changeable(iP, true);
            }
          },
          internal_changeable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.changeable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$changeable_2aqew3$;
              this.$changeable_2aqew3$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_changeable, this.changeable, kmf_previousVal, this, oldPath));
              }
            }
          },
          withVolatile: function (p) {
            this.volatile = p;
            return this;
          },
          volatile: {
            get: function () {
              return this.$volatile_rhw9kf$;
            },
            set: function (iP) {
              this.internal_volatile(iP, true);
            }
          },
          internal_volatile: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.volatile)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$volatile_rhw9kf$;
              this.$volatile_rhw9kf$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_volatile, this.volatile, kmf_previousVal, this, oldPath));
              }
            }
          },
          withTransient: function (p) {
            this.transient = p;
            return this;
          },
          transient: {
            get: function () {
              return this.$transient_90sx61$;
            },
            set: function (iP) {
              this.internal_transient(iP, true);
            }
          },
          internal_transient: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.transient)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$transient_90sx61$;
              this.$transient_90sx61$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_transient, this.transient, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValueLiteral: function (p) {
            this.defaultValueLiteral = p;
            return this;
          },
          defaultValueLiteral: {
            get: function () {
              return this.$defaultValueLiteral_a0l1hw$;
            },
            set: function (iP) {
              this.internal_defaultValueLiteral(iP, true);
            }
          },
          internal_defaultValueLiteral: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValueLiteral)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValueLiteral_a0l1hw$;
              this.$defaultValueLiteral_a0l1hw$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValueLiteral, this.defaultValueLiteral, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDefaultValue: function (p) {
            this.defaultValue = p;
            return this;
          },
          defaultValue: {
            get: function () {
              return this.$defaultValue_mapm2l$;
            },
            set: function (iP) {
              this.internal_defaultValue(iP, true);
            }
          },
          internal_defaultValue: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.defaultValue)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$defaultValue_mapm2l$;
              this.$defaultValue_mapm2l$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_defaultValue, this.defaultValue, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUnsettable: function (p) {
            this.unsettable = p;
            return this;
          },
          unsettable: {
            get: function () {
              return this.$unsettable_avvxaw$;
            },
            set: function (iP) {
              this.internal_unsettable(iP, true);
            }
          },
          internal_unsettable: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.unsettable)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$unsettable_avvxaw$;
              this.$unsettable_avvxaw$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_unsettable, this.unsettable, kmf_previousVal, this, oldPath));
              }
            }
          },
          withDerived: function (p) {
            this.derived = p;
            return this;
          },
          derived: {
            get: function () {
              return this.$derived_bl997u$;
            },
            set: function (iP) {
              this.internal_derived(iP, true);
            }
          },
          internal_derived: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.derived)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$derived_bl997u$;
              this.$derived_bl997u$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_derived, this.derived, kmf_previousVal, this, oldPath));
              }
            }
          },
          withID: function (p) {
            this.iD = p;
            return this;
          },
          iD: {
            get: function () {
              return this.$iD_og68ky$;
            },
            set: function (iP) {
              this.internal_iD(iP, true);
            }
          },
          internal_iD: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.iD)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$iD_og68ky$;
              this.$iD_og68ky$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_iD, this.iD, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAttributeType: {
            get: function () {
              return this.$eAttributeType_gf5nto$;
            },
            set: function (eAttributeTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eAttributeType(eAttributeTypeP, true, true);
            }
          },
          internal_eAttributeType: function (eAttributeTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eAttributeType_gf5nto$, eAttributeTypeP)) {
              var kmf_previousVal = this.$eAttributeType_gf5nto$;
              if (eAttributeTypeP != null) {
                (eAttributeTypeP != null ? eAttributeTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eAttributeType);
              }
               else {
                if (this.$eAttributeType_gf5nto$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eAttributeType_gf5nto$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eAttributeType);
                }
              }
              this.$eAttributeType_gf5nto$ = eAttributeTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eAttributeType, eAttributeTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEAttributeType: function (ref) {
            return this;
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eGenericType: {
            get: function () {
              return this.$eGenericType_y4ynxd$;
            },
            set: function (eGenericTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eGenericType(eGenericTypeP, true, true);
            }
          },
          internal_eGenericType: function (eGenericTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eGenericType_y4ynxd$, eGenericTypeP)) {
              if (this.$eGenericType_y4ynxd$ != null) {
                var tmp$0;
                ((tmp$0 = this.$eGenericType_y4ynxd$) != null ? tmp$0 : Kotlin.throwNPE()).setEContainer(null, null, null);
              }
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eGenericType, null), _.occi.util.Constants.Ref_eGenericType);
              }
              var kmf_previousVal = this.$eGenericType_y4ynxd$;
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              }
               else {
                if (this.$eGenericType_y4ynxd$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eGenericType_y4ynxd$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
                }
              }
              this.$eGenericType_y4ynxd$ = eGenericTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericType, eGenericTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEGenericType: function (ref) {
            return this;
          },
          eType: {
            get: function () {
              return this.$eType_gzbfec$;
            },
            set: function (eTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eType(eTypeP, true, true);
            }
          },
          internal_eType: function (eTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eType_gzbfec$, eTypeP)) {
              var kmf_previousVal = this.$eType_gzbfec$;
              if (eTypeP != null) {
                (eTypeP != null ? eTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eType);
              }
               else {
                if (this.$eType_gzbfec$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eType_gzbfec$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
                }
              }
              this.$eType_gzbfec$ = eTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eType, eTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEType: function (ref) {
            return this;
          },
          eContainingClass: {
            get: function () {
              return this.$eContainingClass_5lo188$;
            },
            set: function (eContainingClassP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eContainingClass(eContainingClassP, true, true);
            }
          },
          internal_eContainingClass: function (eContainingClassP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eContainingClass_5lo188$, eContainingClassP)) {
              if (setOpposite) {
                if (this.$eContainingClass_5lo188$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eContainingClass_5lo188$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eStructuralFeatures, this, false, fireEvents);
                }
                if (eContainingClassP != null) {
                  eContainingClassP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eStructuralFeatures, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eContainingClass_5lo188$;
              if (eContainingClassP != null) {
                (eContainingClassP != null ? eContainingClassP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
              }
               else {
                if (this.$eContainingClass_5lo188$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eContainingClass_5lo188$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
                }
              }
              this.$eContainingClass_5lo188$ = eContainingClassP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eContainingClass, eContainingClassP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEContainingClass: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_ordered) {
                this.internal_ordered(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_unique) {
                this.internal_unique(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_lowerBound) {
                this.internal_lowerBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_upperBound) {
                this.internal_upperBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_many) {
                this.internal_many(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_required) {
                this.internal_required(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_changeable) {
                this.internal_changeable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_volatile) {
                this.internal_volatile(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_transient) {
                this.internal_transient(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValueLiteral) {
                this.internal_defaultValueLiteral(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_defaultValue) {
                this.internal_defaultValue(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_unsettable) {
                this.internal_unsettable(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_derived) {
                this.internal_derived(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_iD) {
                this.internal_iD(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eGenericType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eGenericType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eContainingClass) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eContainingClass(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eContainingClass(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eContainingClass(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eAttributeType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eAttributeType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eAttributeType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eAttributeType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eType) {
                var objFound = this.eType;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eGenericType) {
                var objFound_0 = this.eGenericType;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eContainingClass) {
                var objFound_1 = this.eContainingClass;
                if (objFound_1 != null && Kotlin.equals(objFound_1.internalGetKey(), idP)) {
                  return objFound_1;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eAttributeType) {
                var objFound_2 = this.eAttributeType;
                if (objFound_2 != null && Kotlin.equals(objFound_2.internalGetKey(), idP)) {
                  return objFound_2;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eGenericType, _.occi.util.Constants.ecore_EGenericType)) {
                this.internal_visit(visitor, this.eGenericType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eGenericType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eGenericType);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eType, _.occi.util.Constants.ecore_EClassifier)) {
                this.internal_visit(visitor, this.eType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eContainingClass, _.occi.util.Constants.ecore_EClass)) {
                this.internal_visit(visitor, this.eContainingClass, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eContainingClass);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eContainingClass);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAttributeType, _.occi.util.Constants.ecore_EDataType)) {
                this.internal_visit(visitor, this.eAttributeType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAttributeType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAttributeType);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.ordered, _.occi.util.Constants.Att_ordered, this);
            visitor.visit(this.upperBound, _.occi.util.Constants.Att_upperBound, this);
            visitor.visit(this.defaultValue, _.occi.util.Constants.Att_defaultValue, this);
            visitor.visit(this.volatile, _.occi.util.Constants.Att_volatile, this);
            visitor.visit(this.many, _.occi.util.Constants.Att_many, this);
            visitor.visit(this.required, _.occi.util.Constants.Att_required, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
            visitor.visit(this.defaultValueLiteral, _.occi.util.Constants.Att_defaultValueLiteral, this);
            visitor.visit(this.unsettable, _.occi.util.Constants.Att_unsettable, this);
            visitor.visit(this.transient, _.occi.util.Constants.Att_transient, this);
            visitor.visit(this.unique, _.occi.util.Constants.Att_unique, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.changeable, _.occi.util.Constants.Att_changeable, this);
            visitor.visit(this.lowerBound, _.occi.util.Constants.Att_lowerBound, this);
            visitor.visit(this.iD, _.occi.util.Constants.Att_iD, this);
            visitor.visit(this.derived, _.occi.util.Constants.Att_derived, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EAttribute;
          }
        }),
        EPackageImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EPackage, _.ecore.EPackage, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_aeeyuj$ = null;
          this.$internal_containmentRefName_wbect7$ = null;
          this.$internal_unsetCmd_dm6j1y$ = null;
          this.$internal_readOnlyElem_4n3cm$ = false;
          this.$internal_recursive_readOnlyElem_9j8he1$ = false;
          this.$internal_inboundReferences_t3tjrc$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_8x4kwa$ = false;
          this.$internal_is_deleted_d75qpv$ = false;
          this.$is_root_vvv9xq$ = false;
          this.$internal_modelElementListeners_mb2cdp$ = null;
          this.$internal_modelTreeListeners_y8nai7$ = null;
          this.$path_cache_veidv3$ = null;
          this.$key_cache_7k3spl$ = null;
          this.$generated_KMF_ID_eo1tw1$ = '' + Math.random() + (new Date()).getTime();
          this.$name_wv3gl0$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$nsURI_ocphzy$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$nsPrefix_b1luw0$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$eSuperPackage_apn261$ = null;
          this._eClassifiers = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEClassifiersCurrentlyProcessing = false;
          this._eSubpackages = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllESubpackagesCurrentlyProcessing = false;
          this.$eFactoryInstance_81olz7$ = null;
        }, /** @lends _.ecore.impl.EPackageImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_aeeyuj$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_aeeyuj$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_wbect7$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_wbect7$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_dm6j1y$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_dm6j1y$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_4n3cm$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_4n3cm$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_9j8he1$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_9j8he1$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_t3tjrc$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_t3tjrc$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_8x4kwa$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_8x4kwa$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_d75qpv$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_d75qpv$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_vvv9xq$;
            },
            set: function (tmp$0) {
              this.$is_root_vvv9xq$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_mb2cdp$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_mb2cdp$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_y8nai7$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_y8nai7$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_veidv3$;
            },
            set: function (tmp$0) {
              this.$path_cache_veidv3$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_7k3spl$;
            },
            set: function (tmp$0) {
              this.$key_cache_7k3spl$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.eFactoryInstance != null) {
              var tmp$1;
              ((tmp$1 = this.eFactoryInstance) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eFactoryInstance);
              this.eFactoryInstance = null;
            }
            {
              var tmp$2 = this.eClassifiers.iterator();
              while (tmp$2.hasNext()) {
                var el_0 = tmp$2.next();
                el_0.delete();
              }
            }
            {
              var tmp$3 = this.eSubpackages.iterator();
              while (tmp$3.hasNext()) {
                var el_1 = tmp$3.next();
                el_1.delete();
              }
            }
            if (this.eSuperPackage != null) {
              var tmp$4, tmp$5;
              ((tmp$4 = this.eSuperPackage) != null ? tmp$4 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eSuperPackage);
              ((tmp$5 = this.eSuperPackage) != null ? tmp$5 : Kotlin.throwNPE()).delete();
              this.eSuperPackage = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$6;
              ((tmp$6 = this.internal_unsetCmd) != null ? tmp$6 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_eo1tw1$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_eo1tw1$;
              this.$generated_KMF_ID_eo1tw1$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_wv3gl0$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_wv3gl0$;
              this.$name_wv3gl0$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withNsURI: function (p) {
            this.nsURI = p;
            return this;
          },
          nsURI: {
            get: function () {
              return this.$nsURI_ocphzy$;
            },
            set: function (iP) {
              this.internal_nsURI(iP, true);
            }
          },
          internal_nsURI: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.nsURI)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$nsURI_ocphzy$;
              this.$nsURI_ocphzy$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_nsURI, this.nsURI, kmf_previousVal, this, oldPath));
              }
            }
          },
          withNsPrefix: function (p) {
            this.nsPrefix = p;
            return this;
          },
          nsPrefix: {
            get: function () {
              return this.$nsPrefix_b1luw0$;
            },
            set: function (iP) {
              this.internal_nsPrefix(iP, true);
            }
          },
          internal_nsPrefix: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.nsPrefix)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$nsPrefix_b1luw0$;
              this.$nsPrefix_b1luw0$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_nsPrefix, this.nsPrefix, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eSuperPackage: {
            get: function () {
              return this.$eSuperPackage_apn261$;
            },
            set: function (eSuperPackageP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eSuperPackage(eSuperPackageP, true, true);
            }
          },
          internal_eSuperPackage: function (eSuperPackageP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eSuperPackage_apn261$, eSuperPackageP)) {
              if (setOpposite) {
                if (this.$eSuperPackage_apn261$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eSuperPackage_apn261$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eSubpackages, this, false, fireEvents);
                }
                if (eSuperPackageP != null) {
                  eSuperPackageP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eSubpackages, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eSuperPackage_apn261$;
              if (eSuperPackageP != null) {
                (eSuperPackageP != null ? eSuperPackageP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eSuperPackage);
              }
               else {
                if (this.$eSuperPackage_apn261$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eSuperPackage_apn261$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eSuperPackage);
                }
              }
              this.$eSuperPackage_apn261$ = eSuperPackageP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eSuperPackage, eSuperPackageP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withESuperPackage: function (ref) {
            return this;
          },
          eClassifiers: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eClassifiers.values());
            },
            set: function (eClassifiersP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eClassifiersP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eClassifiers(eClassifiersP, true, true);
            }
          },
          internal_eClassifiers: function (eClassifiersP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eClassifiers.values(), eClassifiersP)) {
              var kmf_previousVal = this._eClassifiers;
              this.internal_removeAllEClassifiers(true, false);
              {
                var tmp$0 = eClassifiersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eClassifiers.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eClassifiers);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eClassifiers, el), _.occi.util.Constants.Ref_eClassifiers);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eClassifiers, eClassifiersP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEClassifiers: function (eClassifiersP) {
            var _key_ = eClassifiersP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eClassifiers.containsKey_za3rmp$(_key_)) {
              this._eClassifiers.put_wn2jw4$(_key_, eClassifiersP);
              eClassifiersP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eClassifiers, eClassifiersP), _.occi.util.Constants.Ref_eClassifiers);
              eClassifiersP.addInboundReference(this, _.occi.util.Constants.Ref_eClassifiers);
            }
          },
          addEClassifiers: function (eClassifiersP) {
            this.internal_addEClassifiers(eClassifiersP, true, true);
            return this;
          },
          addAllEClassifiers: function (eClassifiersP) {
            this.internal_addAllEClassifiers(eClassifiersP, true, true);
            return this;
          },
          internal_addEClassifiers: function (eClassifiersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEClassifiers(eClassifiersP);
            if (setOpposite) {
              eClassifiersP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eClassifiers, eClassifiersP, null, this, this.path()));
            }
          },
          internal_addAllEClassifiers: function (eClassifiersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eClassifiersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEClassifiers(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eClassifiersP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEClassifiers(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eClassifiers, eClassifiersP, null, this, this.path()));
            }
          },
          removeEClassifiers: function (eClassifiersP) {
            this.internal_removeEClassifiers(eClassifiersP, true, true);
            return this;
          },
          removeAllEClassifiers: function () {
            this.internal_removeAllEClassifiers(true, true);
            return this;
          },
          internal_removeEClassifiers: function (eClassifiersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eClassifiers.size() !== 0 && this._eClassifiers.containsKey_za3rmp$(eClassifiersP.internalGetKey())) {
              var previousPathToBeRemoved = eClassifiersP.path();
              this._eClassifiers.remove_za3rmp$(eClassifiersP.internalGetKey());
              eClassifiersP.removeInboundReference(this, _.occi.util.Constants.Ref_eClassifiers);
              eClassifiersP.setEContainer(null, null, null);
              if (!this.removeAllEClassifiersCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eClassifiers, eClassifiersP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eClassifiersP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEClassifiers: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEClassifiersCurrentlyProcessing = true;
            }
            var temp_els = this.eClassifiers;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eClassifiers);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eClassifiers);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eClassifiers.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eClassifiers, temp_els, null, this, this.path()));
              this.removeAllEClassifiersCurrentlyProcessing = false;
            }
          },
          eSubpackages: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eSubpackages.values());
            },
            set: function (eSubpackagesP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eSubpackagesP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eSubpackages(eSubpackagesP, true, true);
            }
          },
          internal_eSubpackages: function (eSubpackagesP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eSubpackages.values(), eSubpackagesP)) {
              var kmf_previousVal = this._eSubpackages;
              this.internal_removeAllESubpackages(true, false);
              {
                var tmp$0 = eSubpackagesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eSubpackages.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eSubpackages);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eSubpackages, el), _.occi.util.Constants.Ref_eSubpackages);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eSuperPackage, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eSubpackages, eSubpackagesP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddESubpackages: function (eSubpackagesP) {
            var _key_ = eSubpackagesP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eSubpackages.containsKey_za3rmp$(_key_)) {
              this._eSubpackages.put_wn2jw4$(_key_, eSubpackagesP);
              eSubpackagesP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eSubpackages, eSubpackagesP), _.occi.util.Constants.Ref_eSubpackages);
              eSubpackagesP.addInboundReference(this, _.occi.util.Constants.Ref_eSubpackages);
            }
          },
          addESubpackages: function (eSubpackagesP) {
            this.internal_addESubpackages(eSubpackagesP, true, true);
            return this;
          },
          addAllESubpackages: function (eSubpackagesP) {
            this.internal_addAllESubpackages(eSubpackagesP, true, true);
            return this;
          },
          internal_addESubpackages: function (eSubpackagesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddESubpackages(eSubpackagesP);
            if (setOpposite) {
              eSubpackagesP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eSuperPackage, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eSubpackages, eSubpackagesP, null, this, this.path()));
            }
          },
          internal_addAllESubpackages: function (eSubpackagesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eSubpackagesP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddESubpackages(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eSuperPackage, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eSubpackagesP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddESubpackages(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eSubpackages, eSubpackagesP, null, this, this.path()));
            }
          },
          removeESubpackages: function (eSubpackagesP) {
            this.internal_removeESubpackages(eSubpackagesP, true, true);
            return this;
          },
          removeAllESubpackages: function () {
            this.internal_removeAllESubpackages(true, true);
            return this;
          },
          internal_removeESubpackages: function (eSubpackagesP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eSubpackages.size() !== 0 && this._eSubpackages.containsKey_za3rmp$(eSubpackagesP.internalGetKey())) {
              var previousPathToBeRemoved = eSubpackagesP.path();
              this._eSubpackages.remove_za3rmp$(eSubpackagesP.internalGetKey());
              eSubpackagesP.removeInboundReference(this, _.occi.util.Constants.Ref_eSubpackages);
              eSubpackagesP.setEContainer(null, null, null);
              if (!this.removeAllESubpackagesCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eSubpackages, eSubpackagesP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eSubpackagesP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eSuperPackage, null, false, fireEvents);
              }
            }
          },
          internal_removeAllESubpackages: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllESubpackagesCurrentlyProcessing = true;
            }
            var temp_els = this.eSubpackages;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eSubpackages);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eSuperPackage, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eSubpackages);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eSubpackages.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eSubpackages, temp_els, null, this, this.path()));
              this.removeAllESubpackagesCurrentlyProcessing = false;
            }
          },
          eFactoryInstance: {
            get: function () {
              return this.$eFactoryInstance_81olz7$;
            },
            set: function (eFactoryInstanceP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eFactoryInstance(eFactoryInstanceP, true, true);
            }
          },
          internal_eFactoryInstance: function (eFactoryInstanceP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eFactoryInstance_81olz7$, eFactoryInstanceP)) {
              if (setOpposite) {
                if (this.$eFactoryInstance_81olz7$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eFactoryInstance_81olz7$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, null, false, fireEvents);
                }
                if (eFactoryInstanceP != null) {
                  eFactoryInstanceP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_ePackage, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eFactoryInstance_81olz7$;
              if (eFactoryInstanceP != null) {
                (eFactoryInstanceP != null ? eFactoryInstanceP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eFactoryInstance);
              }
               else {
                if (this.$eFactoryInstance_81olz7$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eFactoryInstance_81olz7$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eFactoryInstance);
                }
              }
              this.$eFactoryInstance_81olz7$ = eFactoryInstanceP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eFactoryInstance, eFactoryInstanceP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEFactoryInstance: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_nsURI) {
                this.internal_nsURI(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_nsPrefix) {
                this.internal_nsPrefix(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eFactoryInstance) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eFactoryInstance(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eFactoryInstance(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eFactoryInstance(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eClassifiers) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEClassifiers(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEClassifiers(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEClassifiers(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEClassifiers(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eClassifiers.size() !== 0 && this._eClassifiers.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eClassifiers.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eClassifiers.remove_za3rmp$(value);
                      this._eClassifiers.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eSubpackages) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addESubpackages(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllESubpackages(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeESubpackages(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllESubpackages(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eSubpackages.size() !== 0 && this._eSubpackages.containsKey_za3rmp$(value)) {
                      var obj_1 = this._eSubpackages.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._eSubpackages.remove_za3rmp$(value);
                      this._eSubpackages.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eSuperPackage) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eSuperPackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eSuperPackage(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eSuperPackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findEClassifiersByID: function (key) {
            return this._eClassifiers.get_za3rmp$(key);
          },
          findESubpackagesByID: function (key) {
            return this._eSubpackages.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eFactoryInstance) {
                var objFound = this.eFactoryInstance;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eClassifiers) {
                return this.findEClassifiersByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eSubpackages) {
                return this.findESubpackagesByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eSuperPackage) {
                var objFound_0 = this.eSuperPackage;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eClassifiers, _.occi.util.Constants.ecore_EClassifier)) {
                {
                  var tmp$1 = this._eClassifiers.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eClassifiers.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eClassifiers);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eClassifiers);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eSubpackages, _.occi.util.Constants.ecore_EPackage)) {
                {
                  var tmp$2 = this._eSubpackages.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._eSubpackages.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eSubpackages);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eSubpackages);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eFactoryInstance, _.occi.util.Constants.ecore_EFactory)) {
                this.internal_visit(visitor, this.eFactoryInstance, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eFactoryInstance);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eFactoryInstance);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eSuperPackage, _.occi.util.Constants.ecore_EPackage)) {
                this.internal_visit(visitor, this.eSuperPackage, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eSuperPackage);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eSuperPackage);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.nsPrefix, _.occi.util.Constants.Att_nsPrefix, this);
            visitor.visit(this.nsURI, _.occi.util.Constants.Att_nsURI, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EPackage;
          }
        }),
        EFactoryImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EFactory, _.ecore.EFactory, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_351exl$ = null;
          this.$internal_containmentRefName_9rqn4n$ = null;
          this.$internal_unsetCmd_81yrpq$ = null;
          this.$internal_readOnlyElem_dk2qku$ = false;
          this.$internal_recursive_readOnlyElem_milnwl$ = false;
          this.$internal_inboundReferences_rg6mt8$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_qs7tom$ = false;
          this.$internal_is_deleted_can29$ = false;
          this.$is_root_sjakoe$ = false;
          this.$internal_modelElementListeners_kfnjht$ = null;
          this.$internal_modelTreeListeners_bozktn$ = null;
          this.$path_cache_qfj0ul$ = null;
          this.$key_cache_oy1lpf$ = null;
          this.$generated_KMF_ID_yl9syd$ = '' + Math.random() + (new Date()).getTime();
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this.$ePackage_l9d08q$ = null;
        }, /** @lends _.ecore.impl.EFactoryImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_351exl$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_351exl$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_9rqn4n$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_9rqn4n$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_81yrpq$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_81yrpq$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_dk2qku$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_dk2qku$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_milnwl$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_milnwl$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_rg6mt8$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_rg6mt8$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_qs7tom$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_qs7tom$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_can29$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_can29$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_sjakoe$;
            },
            set: function (tmp$0) {
              this.$is_root_sjakoe$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_kfnjht$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_kfnjht$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_bozktn$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_bozktn$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_qfj0ul$;
            },
            set: function (tmp$0) {
              this.$path_cache_qfj0ul$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_oy1lpf$;
            },
            set: function (tmp$0) {
              this.$key_cache_oy1lpf$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.ePackage != null) {
              var tmp$1;
              ((tmp$1 = this.ePackage) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              this.ePackage = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$2;
              ((tmp$2 = this.internal_unsetCmd) != null ? tmp$2 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_yl9syd$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_yl9syd$;
              this.$generated_KMF_ID_yl9syd$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          ePackage: {
            get: function () {
              return this.$ePackage_l9d08q$;
            },
            set: function (ePackageP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_ePackage(ePackageP, true, true);
            }
          },
          internal_ePackage: function (ePackageP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$ePackage_l9d08q$, ePackageP)) {
              if (setOpposite) {
                if (this.$ePackage_l9d08q$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$ePackage_l9d08q$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eFactoryInstance, null, false, fireEvents);
                }
                if (ePackageP != null) {
                  ePackageP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eFactoryInstance, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$ePackage_l9d08q$;
              if (ePackageP != null) {
                (ePackageP != null ? ePackageP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_ePackage);
              }
               else {
                if (this.$ePackage_l9d08q$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$ePackage_l9d08q$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_ePackage);
                }
              }
              this.$ePackage_l9d08q$ = ePackageP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_ePackage, ePackageP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEPackage: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_ePackage) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_ePackage(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_ePackage(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_ePackage) {
                var objFound = this.ePackage;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_ePackage, _.occi.util.Constants.ecore_EPackage)) {
                this.internal_visit(visitor, this.ePackage, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_ePackage);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_ePackage);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EFactory;
          }
        }),
        ETypeParameterImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_ETypeParameter, _.ecore.ETypeParameter, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_ofjz6$ = null;
          this.$internal_containmentRefName_p34ehe$ = null;
          this.$internal_unsetCmd_mufest$ = null;
          this.$internal_readOnlyElem_xl6cx9$ = false;
          this.$internal_recursive_readOnlyElem_j1yg74$ = false;
          this.$internal_inboundReferences_u8ghy9$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_mah669$ = false;
          this.$internal_is_deleted_3h6bui$ = false;
          this.$is_root_lw8srb$ = false;
          this.$internal_modelElementListeners_1zqe3a$ = null;
          this.$internal_modelTreeListeners_r0dc6e$ = null;
          this.$path_cache_b21yag$ = null;
          this.$key_cache_38pcwu$ = null;
          this.$generated_KMF_ID_eyrny2$ = '' + Math.random() + (new Date()).getTime();
          this.$name_srkwtx$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this._eBounds = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEBoundsCurrentlyProcessing = false;
        }, /** @lends _.ecore.impl.ETypeParameterImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_ofjz6$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_ofjz6$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_p34ehe$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_p34ehe$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_mufest$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_mufest$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_xl6cx9$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_xl6cx9$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_j1yg74$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_j1yg74$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_u8ghy9$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_u8ghy9$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_mah669$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_mah669$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_3h6bui$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_3h6bui$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_lw8srb$;
            },
            set: function (tmp$0) {
              this.$is_root_lw8srb$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_1zqe3a$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_1zqe3a$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_r0dc6e$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_r0dc6e$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_b21yag$;
            },
            set: function (tmp$0) {
              this.$path_cache_b21yag$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_38pcwu$;
            },
            set: function (tmp$0) {
              this.$key_cache_38pcwu$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            {
              var tmp$1 = this.eBounds.iterator();
              while (tmp$1.hasNext()) {
                var el_0 = tmp$1.next();
                el_0.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$2;
              ((tmp$2 = this.internal_unsetCmd) != null ? tmp$2 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_eyrny2$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_eyrny2$;
              this.$generated_KMF_ID_eyrny2$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_srkwtx$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_srkwtx$;
              this.$name_srkwtx$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eBounds: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eBounds.values());
            },
            set: function (eBoundsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eBoundsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eBounds(eBoundsP, true, true);
            }
          },
          internal_eBounds: function (eBoundsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eBounds.values(), eBoundsP)) {
              var kmf_previousVal = this._eBounds;
              this._eBounds.clear();
              {
                var tmp$0 = eBoundsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eBounds.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eBounds);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eBounds, el), _.occi.util.Constants.Ref_eBounds);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eBounds, eBoundsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEBounds: function (eBoundsP) {
            var _key_ = eBoundsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eBounds.containsKey_za3rmp$(_key_)) {
              this._eBounds.put_wn2jw4$(_key_, eBoundsP);
              eBoundsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eBounds, eBoundsP), _.occi.util.Constants.Ref_eBounds);
              eBoundsP.addInboundReference(this, _.occi.util.Constants.Ref_eBounds);
            }
          },
          addEBounds: function (eBoundsP) {
            this.internal_addEBounds(eBoundsP, true, true);
            return this;
          },
          addAllEBounds: function (eBoundsP) {
            this.internal_addAllEBounds(eBoundsP, true, true);
            return this;
          },
          internal_addEBounds: function (eBoundsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEBounds(eBoundsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eBounds, eBoundsP, null, this, this.path()));
            }
          },
          internal_addAllEBounds: function (eBoundsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eBoundsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEBounds(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eBoundsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEBounds(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eBounds, eBoundsP, null, this, this.path()));
            }
          },
          removeEBounds: function (eBoundsP) {
            this.internal_removeEBounds(eBoundsP, true, true);
            return this;
          },
          removeAllEBounds: function () {
            this.internal_removeAllEBounds(true, true);
            return this;
          },
          internal_removeEBounds: function (eBoundsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eBounds.size() !== 0 && this._eBounds.containsKey_za3rmp$(eBoundsP.internalGetKey())) {
              var previousPathToBeRemoved = eBoundsP.path();
              this._eBounds.remove_za3rmp$(eBoundsP.internalGetKey());
              eBoundsP.removeInboundReference(this, _.occi.util.Constants.Ref_eBounds);
              eBoundsP.setEContainer(null, null, null);
              if (!this.removeAllEBoundsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eBounds, eBoundsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEBounds: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEBoundsCurrentlyProcessing = true;
            }
            var temp_els = this.eBounds;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eBounds.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eBounds, temp_els, null, this, this.path()));
              this.removeAllEBoundsCurrentlyProcessing = false;
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eBounds) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEBounds(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEBounds(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEBounds(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEBounds();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eBounds.size() !== 0 && this._eBounds.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eBounds.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eBounds.remove_za3rmp$(value);
                      this._eBounds.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findEBoundsByID: function (key) {
            return this._eBounds.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eBounds) {
                return this.findEBoundsByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eBounds, _.occi.util.Constants.ecore_EGenericType)) {
                {
                  var tmp$1 = this._eBounds.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eBounds.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eBounds);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eBounds);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_ETypeParameter;
          }
        }),
        EOperationImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EOperation, _.ecore.EOperation, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_bf7jwq$ = null;
          this.$internal_containmentRefName_pzd7gm$ = null;
          this.$internal_unsetCmd_j8g3f9$ = null;
          this.$internal_readOnlyElem_c3vgq3$ = false;
          this.$internal_recursive_readOnlyElem_lompqw$ = false;
          this.$internal_inboundReferences_h8livb$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_vxv6xj$ = false;
          this.$internal_is_deleted_e7ybs2$ = false;
          this.$is_root_su0uzz$ = false;
          this.$internal_modelElementListeners_c4v0a6$ = null;
          this.$internal_modelTreeListeners_o249rm$ = null;
          this.$path_cache_bijcj4$ = null;
          this.$key_cache_cf6p8m$ = null;
          this.$generated_KMF_ID_sooqem$ = '' + Math.random() + (new Date()).getTime();
          this.$name_xxnv65$ = _.occi.util.Constants.STRING_DEFAULTVAL;
          this.$ordered_pkcfwb$ = true;
          this.$unique_4wzfwn$ = true;
          this.$lowerBound_aww0t7$ = _.occi.util.Constants.INT_DEFAULTVAL;
          this.$upperBound_cb35r8$ = 1;
          this.$many_xxoi49$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this.$required_wxp2mf$ = _.occi.util.Constants.BOOLEAN_DEFAULTVAL;
          this._eAnnotations = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEAnnotationsCurrentlyProcessing = false;
          this._eGenericExceptions = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEGenericExceptionsCurrentlyProcessing = false;
          this.$eGenericType_z0mp70$ = null;
          this.$eType_dbysev$ = null;
          this.$eContainingClass_4jtlxp$ = null;
          this._eTypeParameters = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllETypeParametersCurrentlyProcessing = false;
          this._eParameters = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllEParametersCurrentlyProcessing = false;
          this._eExceptions = new _.java.util.concurrent.ConcurrentHashMap();
        }, /** @lends _.ecore.impl.EOperationImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_bf7jwq$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_bf7jwq$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_pzd7gm$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_pzd7gm$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_j8g3f9$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_j8g3f9$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_c3vgq3$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_c3vgq3$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_lompqw$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_lompqw$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_h8livb$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_h8livb$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_vxv6xj$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_vxv6xj$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_e7ybs2$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_e7ybs2$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_su0uzz$;
            },
            set: function (tmp$0) {
              this.$is_root_su0uzz$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_c4v0a6$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_c4v0a6$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_o249rm$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_o249rm$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_bijcj4$;
            },
            set: function (tmp$0) {
              this.$path_cache_bijcj4$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_cf6p8m$;
            },
            set: function (tmp$0) {
              this.$key_cache_cf6p8m$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            {
              var tmp$0 = this.eAnnotations.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.delete();
              }
            }
            if (this.eType != null) {
              var tmp$1;
              ((tmp$1 = this.eType) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
              this.eType = null;
            }
            if (this.eGenericType != null) {
              var tmp$2;
              ((tmp$2 = this.eGenericType) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              this.eGenericType = null;
            }
            if (this.eContainingClass != null) {
              var tmp$3, tmp$4;
              ((tmp$3 = this.eContainingClass) != null ? tmp$3 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
              ((tmp$4 = this.eContainingClass) != null ? tmp$4 : Kotlin.throwNPE()).delete();
              this.eContainingClass = null;
            }
            {
              var tmp$5 = this.eTypeParameters.iterator();
              while (tmp$5.hasNext()) {
                var el_0 = tmp$5.next();
                el_0.delete();
              }
            }
            {
              var tmp$6 = this.eParameters.iterator();
              while (tmp$6.hasNext()) {
                var el_1 = tmp$6.next();
                el_1.delete();
              }
            }
            this.removeAllEExceptions();
            {
              var tmp$7 = this.eGenericExceptions.iterator();
              while (tmp$7.hasNext()) {
                var el_2 = tmp$7.next();
                el_2.delete();
              }
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$8;
              ((tmp$8 = this.internal_unsetCmd) != null ? tmp$8 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_sooqem$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_sooqem$;
              this.$generated_KMF_ID_sooqem$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          withName: function (p) {
            this.name = p;
            return this;
          },
          name: {
            get: function () {
              return this.$name_xxnv65$;
            },
            set: function (iP) {
              this.internal_name(iP, true);
            }
          },
          internal_name: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.name)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$name_xxnv65$;
              this.$name_xxnv65$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_name, this.name, kmf_previousVal, this, oldPath));
              }
            }
          },
          withOrdered: function (p) {
            this.ordered = p;
            return this;
          },
          ordered: {
            get: function () {
              return this.$ordered_pkcfwb$;
            },
            set: function (iP) {
              this.internal_ordered(iP, true);
            }
          },
          internal_ordered: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.ordered)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$ordered_pkcfwb$;
              this.$ordered_pkcfwb$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_ordered, this.ordered, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUnique: function (p) {
            this.unique = p;
            return this;
          },
          unique: {
            get: function () {
              return this.$unique_4wzfwn$;
            },
            set: function (iP) {
              this.internal_unique(iP, true);
            }
          },
          internal_unique: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.unique)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$unique_4wzfwn$;
              this.$unique_4wzfwn$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_unique, this.unique, kmf_previousVal, this, oldPath));
              }
            }
          },
          withLowerBound: function (p) {
            this.lowerBound = p;
            return this;
          },
          lowerBound: {
            get: function () {
              return this.$lowerBound_aww0t7$;
            },
            set: function (iP) {
              this.internal_lowerBound(iP, true);
            }
          },
          internal_lowerBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.lowerBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$lowerBound_aww0t7$;
              this.$lowerBound_aww0t7$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_lowerBound, this.lowerBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withUpperBound: function (p) {
            this.upperBound = p;
            return this;
          },
          upperBound: {
            get: function () {
              return this.$upperBound_cb35r8$;
            },
            set: function (iP) {
              this.internal_upperBound(iP, true);
            }
          },
          internal_upperBound: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (iP !== this.upperBound) {
              var oldPath = this.path();
              var kmf_previousVal = this.$upperBound_cb35r8$;
              this.$upperBound_cb35r8$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_upperBound, this.upperBound, kmf_previousVal, this, oldPath));
              }
            }
          },
          withMany: function (p) {
            this.many = p;
            return this;
          },
          many: {
            get: function () {
              return this.$many_xxoi49$;
            },
            set: function (iP) {
              this.internal_many(iP, true);
            }
          },
          internal_many: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.many)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$many_xxoi49$;
              this.$many_xxoi49$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_many, this.many, kmf_previousVal, this, oldPath));
              }
            }
          },
          withRequired: function (p) {
            this.required = p;
            return this;
          },
          required: {
            get: function () {
              return this.$required_wxp2mf$;
            },
            set: function (iP) {
              this.internal_required(iP, true);
            }
          },
          internal_required: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.required)) {
              var oldPath = this.path();
              var kmf_previousVal = this.$required_wxp2mf$;
              this.$required_wxp2mf$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_required, this.required, kmf_previousVal, this, oldPath));
              }
            }
          },
          eAnnotations: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eAnnotations.values());
            },
            set: function (eAnnotationsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eAnnotationsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eAnnotations(eAnnotationsP, true, true);
            }
          },
          internal_eAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eAnnotations.values(), eAnnotationsP)) {
              var kmf_previousVal = this._eAnnotations;
              this.internal_removeAllEAnnotations(true, false);
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eAnnotations.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, el), _.occi.util.Constants.Ref_eAnnotations);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEAnnotations: function (eAnnotationsP) {
            var _key_ = eAnnotationsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eAnnotations.containsKey_za3rmp$(_key_)) {
              this._eAnnotations.put_wn2jw4$(_key_, eAnnotationsP);
              eAnnotationsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP), _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.addInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
            }
          },
          addEAnnotations: function (eAnnotationsP) {
            this.internal_addEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          addAllEAnnotations: function (eAnnotationsP) {
            this.internal_addAllEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          internal_addEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEAnnotations(eAnnotationsP);
            if (setOpposite) {
              eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          internal_addAllEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eAnnotationsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEAnnotations(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eAnnotationsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEAnnotations(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, null, this, this.path()));
            }
          },
          removeEAnnotations: function (eAnnotationsP) {
            this.internal_removeEAnnotations(eAnnotationsP, true, true);
            return this;
          },
          removeAllEAnnotations: function () {
            this.internal_removeAllEAnnotations(true, true);
            return this;
          },
          internal_removeEAnnotations: function (eAnnotationsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(eAnnotationsP.internalGetKey())) {
              var previousPathToBeRemoved = eAnnotationsP.path();
              this._eAnnotations.remove_za3rmp$(eAnnotationsP.internalGetKey());
              eAnnotationsP.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
              eAnnotationsP.setEContainer(null, null, null);
              if (!this.removeAllEAnnotationsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, eAnnotationsP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eAnnotationsP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEAnnotations: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEAnnotationsCurrentlyProcessing = true;
            }
            var temp_els = this.eAnnotations;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eModelElement, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eAnnotations);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eAnnotations.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eAnnotations, temp_els, null, this, this.path()));
              this.removeAllEAnnotationsCurrentlyProcessing = false;
            }
          },
          eGenericExceptions: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eGenericExceptions.values());
            },
            set: function (eGenericExceptionsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eGenericExceptionsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eGenericExceptions(eGenericExceptionsP, true, true);
            }
          },
          internal_eGenericExceptions: function (eGenericExceptionsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eGenericExceptions.values(), eGenericExceptionsP)) {
              var kmf_previousVal = this._eGenericExceptions;
              this._eGenericExceptions.clear();
              {
                var tmp$0 = eGenericExceptionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eGenericExceptions.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eGenericExceptions);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eGenericExceptions, el), _.occi.util.Constants.Ref_eGenericExceptions);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericExceptions, eGenericExceptionsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEGenericExceptions: function (eGenericExceptionsP) {
            var _key_ = eGenericExceptionsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eGenericExceptions.containsKey_za3rmp$(_key_)) {
              this._eGenericExceptions.put_wn2jw4$(_key_, eGenericExceptionsP);
              eGenericExceptionsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eGenericExceptions, eGenericExceptionsP), _.occi.util.Constants.Ref_eGenericExceptions);
              eGenericExceptionsP.addInboundReference(this, _.occi.util.Constants.Ref_eGenericExceptions);
            }
          },
          addEGenericExceptions: function (eGenericExceptionsP) {
            this.internal_addEGenericExceptions(eGenericExceptionsP, true, true);
            return this;
          },
          addAllEGenericExceptions: function (eGenericExceptionsP) {
            this.internal_addAllEGenericExceptions(eGenericExceptionsP, true, true);
            return this;
          },
          internal_addEGenericExceptions: function (eGenericExceptionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEGenericExceptions(eGenericExceptionsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericExceptions, eGenericExceptionsP, null, this, this.path()));
            }
          },
          internal_addAllEGenericExceptions: function (eGenericExceptionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eGenericExceptionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEGenericExceptions(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eGenericExceptionsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEGenericExceptions(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericExceptions, eGenericExceptionsP, null, this, this.path()));
            }
          },
          removeEGenericExceptions: function (eGenericExceptionsP) {
            this.internal_removeEGenericExceptions(eGenericExceptionsP, true, true);
            return this;
          },
          removeAllEGenericExceptions: function () {
            this.internal_removeAllEGenericExceptions(true, true);
            return this;
          },
          internal_removeEGenericExceptions: function (eGenericExceptionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eGenericExceptions.size() !== 0 && this._eGenericExceptions.containsKey_za3rmp$(eGenericExceptionsP.internalGetKey())) {
              var previousPathToBeRemoved = eGenericExceptionsP.path();
              this._eGenericExceptions.remove_za3rmp$(eGenericExceptionsP.internalGetKey());
              eGenericExceptionsP.removeInboundReference(this, _.occi.util.Constants.Ref_eGenericExceptions);
              eGenericExceptionsP.setEContainer(null, null, null);
              if (!this.removeAllEGenericExceptionsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericExceptions, eGenericExceptionsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEGenericExceptions: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEGenericExceptionsCurrentlyProcessing = true;
            }
            var temp_els = this.eGenericExceptions;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eGenericExceptions.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericExceptions, temp_els, null, this, this.path()));
              this.removeAllEGenericExceptionsCurrentlyProcessing = false;
            }
          },
          eGenericType: {
            get: function () {
              return this.$eGenericType_z0mp70$;
            },
            set: function (eGenericTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eGenericType(eGenericTypeP, true, true);
            }
          },
          internal_eGenericType: function (eGenericTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eGenericType_z0mp70$, eGenericTypeP)) {
              if (this.$eGenericType_z0mp70$ != null) {
                var tmp$0;
                ((tmp$0 = this.$eGenericType_z0mp70$) != null ? tmp$0 : Kotlin.throwNPE()).setEContainer(null, null, null);
              }
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eGenericType, null), _.occi.util.Constants.Ref_eGenericType);
              }
              var kmf_previousVal = this.$eGenericType_z0mp70$;
              if (eGenericTypeP != null) {
                (eGenericTypeP != null ? eGenericTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
              }
               else {
                if (this.$eGenericType_z0mp70$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eGenericType_z0mp70$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eGenericType);
                }
              }
              this.$eGenericType_z0mp70$ = eGenericTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eGenericType, eGenericTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEGenericType: function (ref) {
            return this;
          },
          eType: {
            get: function () {
              return this.$eType_dbysev$;
            },
            set: function (eTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eType(eTypeP, true, true);
            }
          },
          internal_eType: function (eTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eType_dbysev$, eTypeP)) {
              var kmf_previousVal = this.$eType_dbysev$;
              if (eTypeP != null) {
                (eTypeP != null ? eTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eType);
              }
               else {
                if (this.$eType_dbysev$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eType_dbysev$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eType);
                }
              }
              this.$eType_dbysev$ = eTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eType, eTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEType: function (ref) {
            return this;
          },
          eContainingClass: {
            get: function () {
              return this.$eContainingClass_4jtlxp$;
            },
            set: function (eContainingClassP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eContainingClass(eContainingClassP, true, true);
            }
          },
          internal_eContainingClass: function (eContainingClassP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eContainingClass_4jtlxp$, eContainingClassP)) {
              if (setOpposite) {
                if (this.$eContainingClass_4jtlxp$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eContainingClass_4jtlxp$) != null ? tmp$0 : Kotlin.throwNPE()).reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eOperations, this, false, fireEvents);
                }
                if (eContainingClassP != null) {
                  eContainingClassP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.occi.util.Constants.Ref_eOperations, this, false, fireEvents);
                }
              }
              var kmf_previousVal = this.$eContainingClass_4jtlxp$;
              if (eContainingClassP != null) {
                (eContainingClassP != null ? eContainingClassP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
              }
               else {
                if (this.$eContainingClass_4jtlxp$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eContainingClass_4jtlxp$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eContainingClass);
                }
              }
              this.$eContainingClass_4jtlxp$ = eContainingClassP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eContainingClass, eContainingClassP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEContainingClass: function (ref) {
            return this;
          },
          eTypeParameters: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eTypeParameters.values());
            },
            set: function (eTypeParametersP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eTypeParametersP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eTypeParameters(eTypeParametersP, true, true);
            }
          },
          internal_eTypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eTypeParameters.values(), eTypeParametersP)) {
              var kmf_previousVal = this._eTypeParameters;
              this._eTypeParameters.clear();
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eTypeParameters.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, el), _.occi.util.Constants.Ref_eTypeParameters);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddETypeParameters: function (eTypeParametersP) {
            var _key_ = eTypeParametersP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eTypeParameters.containsKey_za3rmp$(_key_)) {
              this._eTypeParameters.put_wn2jw4$(_key_, eTypeParametersP);
              eTypeParametersP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP), _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
            }
          },
          addETypeParameters: function (eTypeParametersP) {
            this.internal_addETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          addAllETypeParameters: function (eTypeParametersP) {
            this.internal_addAllETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          internal_addETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddETypeParameters(eTypeParametersP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          internal_addAllETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eTypeParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddETypeParameters(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eTypeParametersP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddETypeParameters(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, null, this, this.path()));
            }
          },
          removeETypeParameters: function (eTypeParametersP) {
            this.internal_removeETypeParameters(eTypeParametersP, true, true);
            return this;
          },
          removeAllETypeParameters: function () {
            this.internal_removeAllETypeParameters(true, true);
            return this;
          },
          internal_removeETypeParameters: function (eTypeParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(eTypeParametersP.internalGetKey())) {
              var previousPathToBeRemoved = eTypeParametersP.path();
              this._eTypeParameters.remove_za3rmp$(eTypeParametersP.internalGetKey());
              eTypeParametersP.removeInboundReference(this, _.occi.util.Constants.Ref_eTypeParameters);
              eTypeParametersP.setEContainer(null, null, null);
              if (!this.removeAllETypeParametersCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, eTypeParametersP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllETypeParameters: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllETypeParametersCurrentlyProcessing = true;
            }
            var temp_els = this.eTypeParameters;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eTypeParameters.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeParameters, temp_els, null, this, this.path()));
              this.removeAllETypeParametersCurrentlyProcessing = false;
            }
          },
          eParameters: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eParameters.values());
            },
            set: function (eParametersP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eParametersP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eParameters(eParametersP, true, true);
            }
          },
          internal_eParameters: function (eParametersP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eParameters.values(), eParametersP)) {
              var kmf_previousVal = this._eParameters;
              this.internal_removeAllEParameters(true, false);
              {
                var tmp$0 = eParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eParameters.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eParameters);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eParameters, el), _.occi.util.Constants.Ref_eParameters);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eOperation, this, false, fireEvents);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eParameters, eParametersP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEParameters: function (eParametersP) {
            var _key_ = eParametersP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eParameters.containsKey_za3rmp$(_key_)) {
              this._eParameters.put_wn2jw4$(_key_, eParametersP);
              eParametersP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eParameters, eParametersP), _.occi.util.Constants.Ref_eParameters);
              eParametersP.addInboundReference(this, _.occi.util.Constants.Ref_eParameters);
            }
          },
          addEParameters: function (eParametersP) {
            this.internal_addEParameters(eParametersP, true, true);
            return this;
          },
          addAllEParameters: function (eParametersP) {
            this.internal_addAllEParameters(eParametersP, true, true);
            return this;
          },
          internal_addEParameters: function (eParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEParameters(eParametersP);
            if (setOpposite) {
              eParametersP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eOperation, this, false, fireEvents);
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eParameters, eParametersP, null, this, this.path()));
            }
          },
          internal_addAllEParameters: function (eParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eParametersP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEParameters(el);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eOperation, this, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = eParametersP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEParameters(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eParameters, eParametersP, null, this, this.path()));
            }
          },
          removeEParameters: function (eParametersP) {
            this.internal_removeEParameters(eParametersP, true, true);
            return this;
          },
          removeAllEParameters: function () {
            this.internal_removeAllEParameters(true, true);
            return this;
          },
          internal_removeEParameters: function (eParametersP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eParameters.size() !== 0 && this._eParameters.containsKey_za3rmp$(eParametersP.internalGetKey())) {
              var previousPathToBeRemoved = eParametersP.path();
              this._eParameters.remove_za3rmp$(eParametersP.internalGetKey());
              eParametersP.removeInboundReference(this, _.occi.util.Constants.Ref_eParameters);
              eParametersP.setEContainer(null, null, null);
              if (!this.removeAllEParametersCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eParameters, eParametersP, previousPathToBeRemoved, this, this.path()));
              }
              if (setOpposite) {
                eParametersP.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eOperation, null, false, fireEvents);
              }
            }
          },
          internal_removeAllEParameters: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllEParametersCurrentlyProcessing = true;
            }
            var temp_els = this.eParameters;
            if (setOpposite) {
              {
                var tmp$0 = temp_els.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  el.removeInboundReference(this, _.occi.util.Constants.Ref_eParameters);
                  el.setEContainer(null, null, null);
                  el.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eOperation, null, false, fireEvents);
                }
              }
            }
             else {
              {
                var tmp$1 = temp_els.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  el_0.removeInboundReference(this, _.occi.util.Constants.Ref_eParameters);
                  el_0.setEContainer(null, null, null);
                }
              }
            }
            this._eParameters.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eParameters, temp_els, null, this, this.path()));
              this.removeAllEParametersCurrentlyProcessing = false;
            }
          },
          eExceptions: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eExceptions.values());
            },
            set: function (eExceptionsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eExceptionsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eExceptions(eExceptionsP, true, true);
            }
          },
          internal_eExceptions: function (eExceptionsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eExceptions.values(), eExceptionsP)) {
              var kmf_previousVal = this._eExceptions;
              this._eExceptions.clear();
              {
                var tmp$0 = eExceptionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eExceptions.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eExceptions);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eExceptions, eExceptionsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddEExceptions: function (eExceptionsP) {
            var _key_ = eExceptionsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eExceptions.containsKey_za3rmp$(_key_)) {
              this._eExceptions.put_wn2jw4$(_key_, eExceptionsP);
              eExceptionsP.addInboundReference(this, _.occi.util.Constants.Ref_eExceptions);
            }
          },
          addEExceptions: function (eExceptionsP) {
            this.internal_addEExceptions(eExceptionsP, true, true);
            return this;
          },
          addAllEExceptions: function (eExceptionsP) {
            this.internal_addAllEExceptions(eExceptionsP, true, true);
            return this;
          },
          internal_addEExceptions: function (eExceptionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddEExceptions(eExceptionsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eExceptions, eExceptionsP, null, this, this.path()));
            }
          },
          internal_addAllEExceptions: function (eExceptionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eExceptionsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddEExceptions(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eExceptionsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddEExceptions(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eExceptions, eExceptionsP, null, this, this.path()));
            }
          },
          removeEExceptions: function (eExceptionsP) {
            this.internal_removeEExceptions(eExceptionsP, true, true);
            return this;
          },
          removeAllEExceptions: function () {
            this.internal_removeAllEExceptions(true, true);
            return this;
          },
          internal_removeEExceptions: function (eExceptionsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eExceptions.size() !== 0 && this._eExceptions.containsKey_za3rmp$(eExceptionsP.internalGetKey())) {
              var previousPathToBeRemoved = eExceptionsP.path();
              this._eExceptions.remove_za3rmp$(eExceptionsP.internalGetKey());
              eExceptionsP.removeInboundReference(this, _.occi.util.Constants.Ref_eExceptions);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eExceptions, eExceptionsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllEExceptions: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            var temp_els = this.eExceptions;
            this._eExceptions.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eExceptions, temp_els, null, this, this.path()));
            }
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_name) {
                this.internal_name(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_ordered) {
                this.internal_ordered(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_unique) {
                this.internal_unique(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_lowerBound) {
                this.internal_lowerBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_upperBound) {
                this.internal_upperBound(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_many) {
                this.internal_many(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Att_required) {
                this.internal_required(Kotlin.equals('true', value) || Kotlin.equals(true, value), fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eAnnotations) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEAnnotations(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEAnnotations(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eAnnotations.size() !== 0 && this._eAnnotations.containsKey_za3rmp$(value)) {
                      var obj = this._eAnnotations.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eAnnotations.remove_za3rmp$(value);
                      this._eAnnotations.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eGenericType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eGenericType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eGenericType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eContainingClass) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eContainingClass(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eContainingClass(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eContainingClass(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eTypeParameters) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeETypeParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllETypeParameters();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eTypeParameters.size() !== 0 && this._eTypeParameters.containsKey_za3rmp$(value)) {
                      var obj_0 = this._eTypeParameters.get_za3rmp$(value);
                      var objNewKey_0 = (obj_0 != null ? obj_0 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_0 == null) {
                        throw new Error('Key newed to null ' + obj_0);
                      }
                      this._eTypeParameters.remove_za3rmp$(value);
                      this._eTypeParameters.put_wn2jw4$(objNewKey_0, obj_0);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eParameters) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEParameters(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.internal_removeAllEParameters(setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eParameters.size() !== 0 && this._eParameters.containsKey_za3rmp$(value)) {
                      var obj_1 = this._eParameters.get_za3rmp$(value);
                      var objNewKey_1 = (obj_1 != null ? obj_1 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_1 == null) {
                        throw new Error('Key newed to null ' + obj_1);
                      }
                      this._eParameters.remove_za3rmp$(value);
                      this._eParameters.put_wn2jw4$(objNewKey_1, obj_1);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eExceptions) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEExceptions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEExceptions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEExceptions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEExceptions();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eExceptions.size() !== 0 && this._eExceptions.containsKey_za3rmp$(value)) {
                      var obj_2 = this._eExceptions.get_za3rmp$(value);
                      var objNewKey_2 = (obj_2 != null ? obj_2 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_2 == null) {
                        throw new Error('Key newed to null ' + obj_2);
                      }
                      this._eExceptions.remove_za3rmp$(value);
                      this._eExceptions.put_wn2jw4$(objNewKey_2, obj_2);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eGenericExceptions) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addEGenericExceptions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllEGenericExceptions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeEGenericExceptions(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllEGenericExceptions();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eGenericExceptions.size() !== 0 && this._eGenericExceptions.containsKey_za3rmp$(value)) {
                      var obj_3 = this._eGenericExceptions.get_za3rmp$(value);
                      var objNewKey_3 = (obj_3 != null ? obj_3 : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey_3 == null) {
                        throw new Error('Key newed to null ' + obj_3);
                      }
                      this._eGenericExceptions.remove_za3rmp$(value);
                      this._eGenericExceptions.put_wn2jw4$(objNewKey_3, obj_3);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findEAnnotationsByID: function (key) {
            return this._eAnnotations.get_za3rmp$(key);
          },
          findETypeParametersByID: function (key) {
            return this._eTypeParameters.get_za3rmp$(key);
          },
          findEParametersByID: function (key) {
            return this._eParameters.get_za3rmp$(key);
          },
          findEExceptionsByID: function (key) {
            return this._eExceptions.get_za3rmp$(key);
          },
          findEGenericExceptionsByID: function (key) {
            return this._eGenericExceptions.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eAnnotations) {
                return this.findEAnnotationsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eType) {
                var objFound = this.eType;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eGenericType) {
                var objFound_0 = this.eGenericType;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eContainingClass) {
                var objFound_1 = this.eContainingClass;
                if (objFound_1 != null && Kotlin.equals(objFound_1.internalGetKey(), idP)) {
                  return objFound_1;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eTypeParameters) {
                return this.findETypeParametersByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eParameters) {
                return this.findEParametersByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eExceptions) {
                return this.findEExceptionsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eGenericExceptions) {
                return this.findEGenericExceptionsByID(idP);
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eAnnotations, _.occi.util.Constants.ecore_EAnnotation)) {
                {
                  var tmp$0 = this._eAnnotations.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eAnnotations.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eAnnotations);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eAnnotations);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eGenericType, _.occi.util.Constants.ecore_EGenericType)) {
                this.internal_visit(visitor, this.eGenericType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eGenericType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eGenericType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eTypeParameters, _.occi.util.Constants.ecore_ETypeParameter)) {
                {
                  var tmp$1 = this._eTypeParameters.keySet().iterator();
                  while (tmp$1.hasNext()) {
                    var KMFLoopEntryKey_0 = tmp$1.next();
                    this.internal_visit(visitor, this._eTypeParameters.get_za3rmp$(KMFLoopEntryKey_0), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eTypeParameters);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eTypeParameters);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eParameters, _.occi.util.Constants.ecore_EParameter)) {
                {
                  var tmp$2 = this._eParameters.keySet().iterator();
                  while (tmp$2.hasNext()) {
                    var KMFLoopEntryKey_1 = tmp$2.next();
                    this.internal_visit(visitor, this._eParameters.get_za3rmp$(KMFLoopEntryKey_1), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eParameters);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eParameters);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eGenericExceptions, _.occi.util.Constants.ecore_EGenericType)) {
                {
                  var tmp$3 = this._eGenericExceptions.keySet().iterator();
                  while (tmp$3.hasNext()) {
                    var KMFLoopEntryKey_2 = tmp$3.next();
                    this.internal_visit(visitor, this._eGenericExceptions.get_za3rmp$(KMFLoopEntryKey_2), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eGenericExceptions);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eGenericExceptions);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eType, _.occi.util.Constants.ecore_EClassifier)) {
                this.internal_visit(visitor, this.eType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eContainingClass, _.occi.util.Constants.ecore_EClass)) {
                this.internal_visit(visitor, this.eContainingClass, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eContainingClass);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eContainingClass);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eExceptions, _.occi.util.Constants.ecore_EClassifier)) {
                {
                  var tmp$4 = this._eExceptions.keySet().iterator();
                  while (tmp$4.hasNext()) {
                    var KMFLoopEntryKey_3 = tmp$4.next();
                    this.internal_visit(visitor, this._eExceptions.get_za3rmp$(KMFLoopEntryKey_3), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eExceptions);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eExceptions);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.ordered, _.occi.util.Constants.Att_ordered, this);
            visitor.visit(this.upperBound, _.occi.util.Constants.Att_upperBound, this);
            visitor.visit(this.unique, _.occi.util.Constants.Att_unique, this);
            visitor.visit(this.name, _.occi.util.Constants.Att_name, this);
            visitor.visit(this.lowerBound, _.occi.util.Constants.Att_lowerBound, this);
            visitor.visit(this.many, _.occi.util.Constants.Att_many, this);
            visitor.visit(this.required, _.occi.util.Constants.Att_required, this);
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EOperation;
          }
        }),
        EGenericTypeImpl: Kotlin.createClass(function () {
          return [_.occi.GeneratedAspect_EGenericType, _.ecore.EGenericType, _.occi.container.KMFContainerImpl];
        }, function () {
          this.$internal_eContainer_lacnpc$ = null;
          this.$internal_containmentRefName_x84uwg$ = null;
          this.$internal_unsetCmd_y3nkuj$ = null;
          this.$internal_readOnlyElem_l3fjbf$ = false;
          this.$internal_recursive_readOnlyElem_46y6qm$ = false;
          this.$internal_inboundReferences_j1h0qr$ = new Kotlin.ComplexHashMap();
          this.$internal_deleteInProgress_ssxu73$ = false;
          this.$internal_is_deleted_o33fko$ = false;
          this.$is_root_gebvy1$ = false;
          this.$internal_modelElementListeners_leeeq0$ = null;
          this.$internal_modelTreeListeners_z5dslg$ = null;
          this.$path_cache_6pioli$ = null;
          this.$key_cache_u5x8ak$ = null;
          this.$generated_KMF_ID_9vistg$ = '' + Math.random() + (new Date()).getTime();
          this.$eClassifier_nffv94$ = null;
          this.$eUpperBound_oam6lf$ = null;
          this.$eTypeParameter_evqvk8$ = null;
          this.$eLowerBound_12n010$ = null;
          this._eTypeArguments = new _.java.util.concurrent.ConcurrentHashMap();
          this.removeAllETypeArgumentsCurrentlyProcessing = false;
          this.$eRawType_j9vith$ = null;
        }, /** @lends _.ecore.impl.EGenericTypeImpl.prototype */ {
          internal_eContainer: {
            get: function () {
              return this.$internal_eContainer_lacnpc$;
            },
            set: function (tmp$0) {
              this.$internal_eContainer_lacnpc$ = tmp$0;
            }
          },
          internal_containmentRefName: {
            get: function () {
              return this.$internal_containmentRefName_x84uwg$;
            },
            set: function (tmp$0) {
              this.$internal_containmentRefName_x84uwg$ = tmp$0;
            }
          },
          internal_unsetCmd: {
            get: function () {
              return this.$internal_unsetCmd_y3nkuj$;
            },
            set: function (tmp$0) {
              this.$internal_unsetCmd_y3nkuj$ = tmp$0;
            }
          },
          internal_readOnlyElem: {
            get: function () {
              return this.$internal_readOnlyElem_l3fjbf$;
            },
            set: function (tmp$0) {
              this.$internal_readOnlyElem_l3fjbf$ = tmp$0;
            }
          },
          internal_recursive_readOnlyElem: {
            get: function () {
              return this.$internal_recursive_readOnlyElem_46y6qm$;
            },
            set: function (tmp$0) {
              this.$internal_recursive_readOnlyElem_46y6qm$ = tmp$0;
            }
          },
          internal_inboundReferences: {
            get: function () {
              return this.$internal_inboundReferences_j1h0qr$;
            },
            set: function (tmp$0) {
              this.$internal_inboundReferences_j1h0qr$ = tmp$0;
            }
          },
          internal_deleteInProgress: {
            get: function () {
              return this.$internal_deleteInProgress_ssxu73$;
            },
            set: function (tmp$0) {
              this.$internal_deleteInProgress_ssxu73$ = tmp$0;
            }
          },
          internal_is_deleted: {
            get: function () {
              return this.$internal_is_deleted_o33fko$;
            },
            set: function (tmp$0) {
              this.$internal_is_deleted_o33fko$ = tmp$0;
            }
          },
          is_root: {
            get: function () {
              return this.$is_root_gebvy1$;
            },
            set: function (tmp$0) {
              this.$is_root_gebvy1$ = tmp$0;
            }
          },
          internal_modelElementListeners: {
            get: function () {
              return this.$internal_modelElementListeners_leeeq0$;
            },
            set: function (tmp$0) {
              this.$internal_modelElementListeners_leeeq0$ = tmp$0;
            }
          },
          internal_modelTreeListeners: {
            get: function () {
              return this.$internal_modelTreeListeners_z5dslg$;
            },
            set: function (tmp$0) {
              this.$internal_modelTreeListeners_z5dslg$ = tmp$0;
            }
          },
          path_cache: {
            get: function () {
              return this.$path_cache_6pioli$;
            },
            set: function (tmp$0) {
              this.$path_cache_6pioli$ = tmp$0;
            }
          },
          key_cache: {
            get: function () {
              return this.$key_cache_u5x8ak$;
            },
            set: function (tmp$0) {
              this.$key_cache_u5x8ak$ = tmp$0;
            }
          },
          delete: function () {
            this.internal_deleteInProgress = true;
            if (this.eUpperBound != null) {
              var tmp$0;
              ((tmp$0 = this.eUpperBound) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eUpperBound);
              this.eUpperBound = null;
            }
            {
              var tmp$1 = this.eTypeArguments.iterator();
              while (tmp$1.hasNext()) {
                var el = tmp$1.next();
                el.delete();
              }
            }
            if (this.eRawType != null) {
              var tmp$2;
              ((tmp$2 = this.eRawType) != null ? tmp$2 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eRawType);
              this.eRawType = null;
            }
            if (this.eLowerBound != null) {
              var tmp$3;
              ((tmp$3 = this.eLowerBound) != null ? tmp$3 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eLowerBound);
              this.eLowerBound = null;
            }
            if (this.eTypeParameter != null) {
              var tmp$4;
              ((tmp$4 = this.eTypeParameter) != null ? tmp$4 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eTypeParameter);
              this.eTypeParameter = null;
            }
            if (this.eClassifier != null) {
              var tmp$5;
              ((tmp$5 = this.eClassifier) != null ? tmp$5 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eClassifier);
              this.eClassifier = null;
            }
            this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, this);
            this.internal_inboundReferences.clear();
            if (this.internal_unsetCmd != null) {
              var tmp$6;
              ((tmp$6 = this.internal_unsetCmd) != null ? tmp$6 : Kotlin.throwNPE()).run();
            }
            this.internal_is_deleted = true;
          },
          withGenerated_KMF_ID: function (p) {
            this.generated_KMF_ID = p;
            return this;
          },
          generated_KMF_ID: {
            get: function () {
              return this.$generated_KMF_ID_9vistg$;
            },
            set: function (iP) {
              this.internal_generated_KMF_ID(iP, true);
            }
          },
          internal_generated_KMF_ID: function (iP, fireEvents) {
            if (fireEvents === void 0)
              fireEvents = true;
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (!Kotlin.equals(iP, this.generated_KMF_ID)) {
              var oldPath = this.path();
              var oldId = this.internalGetKey();
              this.path_cache = null;
              this.key_cache = null;
              var previousParent = this.eContainer();
              var previousRefNameInParent = this.getRefInParent();
              var kmf_previousVal = this.$generated_KMF_ID_9vistg$;
              this.$generated_KMF_ID_9vistg$ = iP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.generated_KMF_ID, kmf_previousVal, this, oldPath));
              }
              if (previousParent != null) {
                previousParent.reflexiveMutator(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, previousRefNameInParent != null ? previousRefNameInParent : Kotlin.throwNPE(), oldId, false, false);
              }
              this.advertiseInboundRefs(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, oldId);
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX, _.org.kevoree.modeling.api.util.ElementAttributeType.object.ATTRIBUTE, _.occi.util.Constants.Att_generated_KMF_ID, this.path(), null, this, oldPath));
              }
              this.visit(_.occi.container.cleanCacheVisitor, true, true, false);
            }
          },
          eClassifier: {
            get: function () {
              return this.$eClassifier_nffv94$;
            },
            set: function (eClassifierP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eClassifier(eClassifierP, true, true);
            }
          },
          internal_eClassifier: function (eClassifierP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eClassifier_nffv94$, eClassifierP)) {
              var kmf_previousVal = this.$eClassifier_nffv94$;
              if (eClassifierP != null) {
                (eClassifierP != null ? eClassifierP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eClassifier);
              }
               else {
                if (this.$eClassifier_nffv94$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eClassifier_nffv94$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eClassifier);
                }
              }
              this.$eClassifier_nffv94$ = eClassifierP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eClassifier, eClassifierP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEClassifier: function (ref) {
            return this;
          },
          eUpperBound: {
            get: function () {
              return this.$eUpperBound_oam6lf$;
            },
            set: function (eUpperBoundP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eUpperBound(eUpperBoundP, true, true);
            }
          },
          internal_eUpperBound: function (eUpperBoundP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eUpperBound_oam6lf$, eUpperBoundP)) {
              if (this.$eUpperBound_oam6lf$ != null) {
                var tmp$0;
                ((tmp$0 = this.$eUpperBound_oam6lf$) != null ? tmp$0 : Kotlin.throwNPE()).setEContainer(null, null, null);
              }
              if (eUpperBoundP != null) {
                (eUpperBoundP != null ? eUpperBoundP : Kotlin.throwNPE()).setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eUpperBound, null), _.occi.util.Constants.Ref_eUpperBound);
              }
              var kmf_previousVal = this.$eUpperBound_oam6lf$;
              if (eUpperBoundP != null) {
                (eUpperBoundP != null ? eUpperBoundP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eUpperBound);
              }
               else {
                if (this.$eUpperBound_oam6lf$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eUpperBound_oam6lf$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eUpperBound);
                }
              }
              this.$eUpperBound_oam6lf$ = eUpperBoundP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eUpperBound, eUpperBoundP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withEUpperBound: function (ref) {
            return this;
          },
          eTypeParameter: {
            get: function () {
              return this.$eTypeParameter_evqvk8$;
            },
            set: function (eTypeParameterP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eTypeParameter(eTypeParameterP, true, true);
            }
          },
          internal_eTypeParameter: function (eTypeParameterP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eTypeParameter_evqvk8$, eTypeParameterP)) {
              var kmf_previousVal = this.$eTypeParameter_evqvk8$;
              if (eTypeParameterP != null) {
                (eTypeParameterP != null ? eTypeParameterP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eTypeParameter);
              }
               else {
                if (this.$eTypeParameter_evqvk8$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eTypeParameter_evqvk8$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eTypeParameter);
                }
              }
              this.$eTypeParameter_evqvk8$ = eTypeParameterP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eTypeParameter, eTypeParameterP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withETypeParameter: function (ref) {
            return this;
          },
          eLowerBound: {
            get: function () {
              return this.$eLowerBound_12n010$;
            },
            set: function (eLowerBoundP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eLowerBound(eLowerBoundP, true, true);
            }
          },
          internal_eLowerBound: function (eLowerBoundP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eLowerBound_12n010$, eLowerBoundP)) {
              if (this.$eLowerBound_12n010$ != null) {
                var tmp$0;
                ((tmp$0 = this.$eLowerBound_12n010$) != null ? tmp$0 : Kotlin.throwNPE()).setEContainer(null, null, null);
              }
              if (eLowerBoundP != null) {
                (eLowerBoundP != null ? eLowerBoundP : Kotlin.throwNPE()).setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.SET, _.occi.util.Constants.Ref_eLowerBound, null), _.occi.util.Constants.Ref_eLowerBound);
              }
              var kmf_previousVal = this.$eLowerBound_12n010$;
              if (eLowerBoundP != null) {
                (eLowerBoundP != null ? eLowerBoundP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eLowerBound);
              }
               else {
                if (this.$eLowerBound_12n010$ != null) {
                  var tmp$1;
                  ((tmp$1 = this.$eLowerBound_12n010$) != null ? tmp$1 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eLowerBound);
                }
              }
              this.$eLowerBound_12n010$ = eLowerBoundP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eLowerBound, eLowerBoundP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withELowerBound: function (ref) {
            return this;
          },
          eTypeArguments: {
            get: function () {
              return _.kotlin.toList_h3panj$(this._eTypeArguments.values());
            },
            set: function (eTypeArgumentsP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              if (eTypeArgumentsP == null) {
                throw new Kotlin.IllegalArgumentException(_.occi.util.Constants.LIST_PARAMETER_OF_SET_IS_NULL_EXCEPTION);
              }
              this.internal_eTypeArguments(eTypeArgumentsP, true, true);
            }
          },
          internal_eTypeArguments: function (eTypeArgumentsP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this._eTypeArguments.values(), eTypeArgumentsP)) {
              var kmf_previousVal = this._eTypeArguments;
              this._eTypeArguments.clear();
              {
                var tmp$0 = eTypeArgumentsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  var elKey = el.internalGetKey();
                  if (elKey == null) {
                    throw new Error(_.occi.util.Constants.ELEMENT_HAS_NO_KEY_IN_COLLECTION);
                  }
                  this._eTypeArguments.put_wn2jw4$(elKey != null ? elKey : Kotlin.throwNPE(), el);
                  el.addInboundReference(this, _.occi.util.Constants.Ref_eTypeArguments);
                  el.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeArguments, el), _.occi.util.Constants.Ref_eTypeArguments);
                }
              }
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeArguments, eTypeArgumentsP, kmf_previousVal, this, this.path()));
              }
            }
          },
          doAddETypeArguments: function (eTypeArgumentsP) {
            var _key_ = eTypeArgumentsP.internalGetKey();
            if (_key_ == null || Kotlin.equals(_key_, '')) {
              throw new Error(_.occi.util.Constants.EMPTY_KEY);
            }
            if (!this._eTypeArguments.containsKey_za3rmp$(_key_)) {
              this._eTypeArguments.put_wn2jw4$(_key_, eTypeArgumentsP);
              eTypeArgumentsP.setEContainer(this, new _.occi.container.RemoveFromContainerCommand(this, _.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.occi.util.Constants.Ref_eTypeArguments, eTypeArgumentsP), _.occi.util.Constants.Ref_eTypeArguments);
              eTypeArgumentsP.addInboundReference(this, _.occi.util.Constants.Ref_eTypeArguments);
            }
          },
          addETypeArguments: function (eTypeArgumentsP) {
            this.internal_addETypeArguments(eTypeArgumentsP, true, true);
            return this;
          },
          addAllETypeArguments: function (eTypeArgumentsP) {
            this.internal_addAllETypeArguments(eTypeArgumentsP, true, true);
            return this;
          },
          internal_addETypeArguments: function (eTypeArgumentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            this.doAddETypeArguments(eTypeArgumentsP);
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeArguments, eTypeArgumentsP, null, this, this.path()));
            }
          },
          internal_addAllETypeArguments: function (eTypeArgumentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (setOpposite) {
              {
                var tmp$0 = eTypeArgumentsP.iterator();
                while (tmp$0.hasNext()) {
                  var el = tmp$0.next();
                  this.doAddETypeArguments(el);
                }
              }
            }
             else {
              {
                var tmp$1 = eTypeArgumentsP.iterator();
                while (tmp$1.hasNext()) {
                  var el_0 = tmp$1.next();
                  this.doAddETypeArguments(el_0);
                }
              }
            }
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeArguments, eTypeArgumentsP, null, this, this.path()));
            }
          },
          removeETypeArguments: function (eTypeArgumentsP) {
            this.internal_removeETypeArguments(eTypeArgumentsP, true, true);
            return this;
          },
          removeAllETypeArguments: function () {
            this.internal_removeAllETypeArguments(true, true);
            return this;
          },
          internal_removeETypeArguments: function (eTypeArgumentsP, setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (this._eTypeArguments.size() !== 0 && this._eTypeArguments.containsKey_za3rmp$(eTypeArgumentsP.internalGetKey())) {
              var previousPathToBeRemoved = eTypeArgumentsP.path();
              this._eTypeArguments.remove_za3rmp$(eTypeArgumentsP.internalGetKey());
              eTypeArgumentsP.removeInboundReference(this, _.occi.util.Constants.Ref_eTypeArguments);
              eTypeArgumentsP.setEContainer(null, null, null);
              if (!this.removeAllETypeArgumentsCurrentlyProcessing && fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeArguments, eTypeArgumentsP, previousPathToBeRemoved, this, this.path()));
              }
            }
          },
          internal_removeAllETypeArguments: function (setOpposite, fireEvents) {
            if (this.isReadOnly()) {
              throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
            }
            if (fireEvents) {
              this.removeAllETypeArgumentsCurrentlyProcessing = true;
            }
            var temp_els = this.eTypeArguments;
            {
              var tmp$0 = temp_els.iterator();
              while (tmp$0.hasNext()) {
                var el = tmp$0.next();
                el.setEContainer(null, null, null);
              }
            }
            this._eTypeArguments.clear();
            if (fireEvents) {
              this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL, _.org.kevoree.modeling.api.util.ElementAttributeType.object.CONTAINMENT, _.occi.util.Constants.Ref_eTypeArguments, temp_els, null, this, this.path()));
              this.removeAllETypeArgumentsCurrentlyProcessing = false;
            }
          },
          eRawType: {
            get: function () {
              return this.$eRawType_j9vith$;
            },
            set: function (eRawTypeP) {
              if (this.isReadOnly()) {
                throw new Error(_.occi.util.Constants.READ_ONLY_EXCEPTION);
              }
              this.internal_eRawType(eRawTypeP, true, true);
            }
          },
          internal_eRawType: function (eRawTypeP, setOpposite, fireEvents) {
            if (!Kotlin.equals(this.$eRawType_j9vith$, eRawTypeP)) {
              var kmf_previousVal = this.$eRawType_j9vith$;
              if (eRawTypeP != null) {
                (eRawTypeP != null ? eRawTypeP : Kotlin.throwNPE()).addInboundReference(this, _.occi.util.Constants.Ref_eRawType);
              }
               else {
                if (this.$eRawType_j9vith$ != null) {
                  var tmp$0;
                  ((tmp$0 = this.$eRawType_j9vith$) != null ? tmp$0 : Kotlin.throwNPE()).removeInboundReference(this, _.occi.util.Constants.Ref_eRawType);
                }
              }
              this.$eRawType_j9vith$ = eRawTypeP;
              if (fireEvents) {
                this.fireModelEvent(new _.org.kevoree.modeling.api.events.ModelEvent(_.org.kevoree.modeling.api.util.ActionType.object.SET, _.org.kevoree.modeling.api.util.ElementAttributeType.object.REFERENCE, _.occi.util.Constants.Ref_eRawType, eRawTypeP, kmf_previousVal, this, this.path()));
              }
            }
          },
          withERawType: function (ref) {
            return this;
          },
          reflexiveMutator: function (mutationType, refName, value, setOpposite, fireEvents) {
            {
              if (refName === _.occi.util.Constants.Att_generated_KMF_ID) {
                this.internal_generated_KMF_ID(value, fireEvents);
              }
               else if (refName === _.occi.util.Constants.Ref_eUpperBound) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eUpperBound(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eUpperBound(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eUpperBound(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eTypeArguments) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_addETypeArguments(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD_ALL) {
                    this.internal_addAllETypeArguments(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_removeETypeArguments(value != null ? value : Kotlin.throwNPE(), setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE_ALL) {
                    this.removeAllETypeArguments();
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                    if (this._eTypeArguments.size() !== 0 && this._eTypeArguments.containsKey_za3rmp$(value)) {
                      var obj = this._eTypeArguments.get_za3rmp$(value);
                      var objNewKey = (obj != null ? obj : Kotlin.throwNPE()).internalGetKey();
                      if (objNewKey == null) {
                        throw new Error('Key newed to null ' + obj);
                      }
                      this._eTypeArguments.remove_za3rmp$(value);
                      this._eTypeArguments.put_wn2jw4$(objNewKey, obj);
                    }
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eRawType) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eRawType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eRawType(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eRawType(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eLowerBound) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eLowerBound(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eLowerBound(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eLowerBound(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eTypeParameter) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eTypeParameter(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eTypeParameter(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eTypeParameter(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else if (refName === _.occi.util.Constants.Ref_eClassifier) {
                {
                  if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.SET) {
                    this.internal_eClassifier(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.REMOVE) {
                    this.internal_eClassifier(null, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.ADD) {
                    this.internal_eClassifier(value, setOpposite, fireEvents);
                  }
                   else if (mutationType === _.org.kevoree.modeling.api.util.ActionType.object.RENEW_INDEX) {
                  }
                   else {
                    throw new Error(_.occi.util.Constants.UNKNOWN_MUTATION_TYPE_EXCEPTION + mutationType);
                  }
                }
              }
               else {
                throw new Error('Can not reflexively ' + mutationType + ' for ' + refName + ' on ' + this);
              }
            }
          },
          internalGetKey: function () {
            if (this.key_cache != null) {
              return this.key_cache;
            }
             else {
              this.key_cache = this.generated_KMF_ID;
            }
            return this.key_cache;
          },
          findETypeArgumentsByID: function (key) {
            return this._eTypeArguments.get_za3rmp$(key);
          },
          findByID: function (relationName, idP) {
            {
              if (relationName === _.occi.util.Constants.Ref_eUpperBound) {
                var objFound = this.eUpperBound;
                if (objFound != null && Kotlin.equals(objFound.internalGetKey(), idP)) {
                  return objFound;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eTypeArguments) {
                return this.findETypeArgumentsByID(idP);
              }
               else if (relationName === _.occi.util.Constants.Ref_eRawType) {
                var objFound_0 = this.eRawType;
                if (objFound_0 != null && Kotlin.equals(objFound_0.internalGetKey(), idP)) {
                  return objFound_0;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eLowerBound) {
                var objFound_1 = this.eLowerBound;
                if (objFound_1 != null && Kotlin.equals(objFound_1.internalGetKey(), idP)) {
                  return objFound_1;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eTypeParameter) {
                var objFound_2 = this.eTypeParameter;
                if (objFound_2 != null && Kotlin.equals(objFound_2.internalGetKey(), idP)) {
                  return objFound_2;
                }
                 else {
                  return null;
                }
              }
               else if (relationName === _.occi.util.Constants.Ref_eClassifier) {
                var objFound_3 = this.eClassifier;
                if (objFound_3 != null && Kotlin.equals(objFound_3.internalGetKey(), idP)) {
                  return objFound_3;
                }
                 else {
                  return null;
                }
              }
               else {
                return null;
              }
            }
          },
          visit: function (visitor, recursive, containedReference, nonContainedReference) {
            visitor.beginVisitElem(this);
            if (containedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eUpperBound, _.occi.util.Constants.ecore_EGenericType)) {
                this.internal_visit(visitor, this.eUpperBound, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eUpperBound);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eUpperBound);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eTypeArguments, _.occi.util.Constants.ecore_EGenericType)) {
                {
                  var tmp$0 = this._eTypeArguments.keySet().iterator();
                  while (tmp$0.hasNext()) {
                    var KMFLoopEntryKey = tmp$0.next();
                    this.internal_visit(visitor, this._eTypeArguments.get_za3rmp$(KMFLoopEntryKey), recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eTypeArguments);
                  }
                }
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eTypeArguments);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eLowerBound, _.occi.util.Constants.ecore_EGenericType)) {
                this.internal_visit(visitor, this.eLowerBound, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eLowerBound);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eLowerBound);
            }
            if (nonContainedReference) {
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eRawType, _.occi.util.Constants.ecore_EClassifier)) {
                this.internal_visit(visitor, this.eRawType, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eRawType);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eRawType);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eTypeParameter, _.occi.util.Constants.ecore_ETypeParameter)) {
                this.internal_visit(visitor, this.eTypeParameter, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eTypeParameter);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eTypeParameter);
              if (visitor.beginVisitRef(_.occi.util.Constants.Ref_eClassifier, _.occi.util.Constants.ecore_EClassifier)) {
                this.internal_visit(visitor, this.eClassifier, recursive, containedReference, nonContainedReference, _.occi.util.Constants.Ref_eClassifier);
              }
              visitor.endVisitRef(_.occi.util.Constants.Ref_eClassifier);
            }
            visitor.endVisitElem(this);
          },
          visitAttributes: function (visitor) {
            visitor.visit(this.generated_KMF_ID, _.occi.util.Constants.Att_generated_KMF_ID, this);
          },
          metaClassName: function () {
            return _.occi.util.Constants.ecore_EGenericType;
          }
        })
      })
    }),
    java: Kotlin.definePackage(null, /** @lends _.java */ {
      util: Kotlin.definePackage(null, /** @lends _.java.util */ {
        concurrent: Kotlin.definePackage(null, /** @lends _.java.util.concurrent */ {
          ConcurrentHashMap: Kotlin.createClass(function () {
            return [Kotlin.HashMap];
          }, function $fun() {
            $fun.baseInitializer.call(this);
          })
        }),
        IdentityHashMap: Kotlin.createClass(function () {
          return [Kotlin.HashMap];
        }, function $fun() {
          $fun.baseInitializer.call(this);
        }),
        HashSet_xeylzf$: function (c) {
          var set = new Kotlin.ComplexHashSet(c.size());
          set.addAll_xeylzf$(c);
          return set;
        },
        LinkedHashSet_xeylzf$: function (c) {
          var set = new Kotlin.LinkedHashSet(c.size());
          set.addAll_xeylzf$(c);
          return set;
        },
        HashMap_za3j1t$: function (m) {
          var map = new Kotlin.ComplexHashMap(m.size());
          map.putAll_za3j1t$(m);
          return map;
        },
        LinkedHashMap_za3j1t$: function (m) {
          var map = new Kotlin.LinkedHashMap(m.size());
          map.putAll_za3j1t$(m);
          return map;
        }
      }),
      lang: Kotlin.definePackage(function () {
        this.Long = Kotlin.createObject(null, null, {
          parseLong: function (s) {
            return s;
          }
        });
        this.Integer = Kotlin.createObject(null, null, {
          parseInt: function (s) {
            return s;
          }
        });
      }, /** @lends _.java.lang */ {
      }),
      io: Kotlin.definePackage(null, /** @lends _.java.io */ {
        InputStream: Kotlin.createTrait(null),
        OutputStream: Kotlin.createTrait(null),
        BufferedOutputStream: Kotlin.createClass(function () {
          return [_.java.io.OutputStream];
        }, function (oo) {
          this.oo = oo;
        }, /** @lends _.java.io.BufferedOutputStream.prototype */ {
          write: function (s) {
            this.oo.result = s;
          }
        }),
        ByteArrayInputStream: Kotlin.createClass(function () {
          return [_.java.io.InputStream];
        }, function (inputBytes) {
          this.inputBytes = inputBytes;
        }, /** @lends _.java.io.ByteArrayInputStream.prototype */ {
          readBytes: function () {
            return this.inputBytes;
          }
        }),
        ByteArrayOutputStream: Kotlin.createClass(function () {
          return [_.java.io.OutputStream];
        }, function () {
          this.result = '';
        }, /** @lends _.java.io.ByteArrayOutputStream.prototype */ {
          flush: function () {
          },
          close: function () {
          },
          toString: function () {
            return this.result;
          }
        }),
        PrintStream: Kotlin.createClass(null, function (oo, autoflush) {
          this.oo = oo;
          this.result = '';
        }, /** @lends _.java.io.PrintStream.prototype */ {
          println: function () {
            this.result = this.result + '\n';
          },
          print_4: function (s) {
            this.result = this.result + s;
          },
          println_2: function (s) {
            this.print_4(s);
            this.println();
          },
          print_1: function (s) {
            this.result = this.result + s;
          },
          print_2: function (s) {
            this.result = this.result + s;
          },
          print_3: function (s) {
            this.result = this.result + s;
          },
          print: function (s) {
            if (s) {
              this.result = this.result + 'true';
            }
             else {
              this.result = this.result + 'false';
            }
          },
          println_1: function (s) {
            this.print_1(s);
            this.println();
          },
          flush: function () {
            this.oo.write(this.result);
          },
          close: function () {
          }
        })
      })
    }),
    js: Kotlin.definePackage(null, /** @lends _.js */ {
      toChar_mz3mef$: function ($receiver) {
        return $receiver;
      },
      lastIndexOf_orzsrp$: function ($receiver, ch, fromIndex) {
        return $receiver.lastIndexOf(ch.toString(), fromIndex);
      },
      lastIndexOf_960177$: function ($receiver, ch) {
        return $receiver.lastIndexOf(ch.toString());
      },
      indexOf_960177$: function ($receiver, ch) {
        return $receiver.indexOf(ch.toString());
      },
      indexOf_orzsrp$: function ($receiver, ch, fromIndex) {
        return $receiver.indexOf(ch.toString(), fromIndex);
      },
      matches_94jgcu$: function ($receiver, regex) {
        var result = $receiver.match(regex);
        return result != null && result.length > 0;
      },
      capitalize_pdl1w0$: function ($receiver) {
        return _.kotlin.isNotEmpty_pdl1w0$($receiver) ? $receiver.substring(0, 1).toUpperCase() + $receiver.substring(1) : $receiver;
      },
      decapitalize_pdl1w0$: function ($receiver) {
        return _.kotlin.isNotEmpty_pdl1w0$($receiver) ? $receiver.substring(0, 1).toLowerCase() + $receiver.substring(1) : $receiver;
      }
    }),
    kotlin: Kotlin.definePackage(function () {
      this.stdlib_emptyList_w9bu57$ = new Kotlin.ArrayList();
      this.stdlib_emptyMap_h2vi7z$ = new Kotlin.ComplexHashMap();
    }, /** @lends _.kotlin */ {
      dom: Kotlin.definePackage(null, /** @lends _.kotlin.dom */ {
        createDocument: function () {
          return document.implementation.createDocument(null, null, null);
        },
        toXmlString_asww5t$: function ($receiver) {
          return $receiver.outerHTML;
        },
        toXmlString_rq0l4m$: function ($receiver, xmlDeclaration) {
          return $receiver.outerHTML;
        },
        eventHandler: function (handler) {
          return new _.kotlin.dom.EventListenerHandler(handler);
        },
        EventListenerHandler: Kotlin.createClass(function () {
          return [_.org.w3c.dom.events.EventListener];
        }, function (handler) {
          this.handler = handler;
        }, /** @lends _.kotlin.dom.EventListenerHandler.prototype */ {
          handleEvent_9ojx7i$: function (e) {
            if (e != null) {
              this.handler(e);
            }
          }
        }),
        mouseEventHandler$f: function (handler) {
          return function (e) {
            if (Kotlin.isType(e, MouseEvent)) {
              handler(e);
            }
          };
        },
        mouseEventHandler: function (handler) {
          return _.kotlin.dom.eventHandler(_.kotlin.dom.mouseEventHandler$f(handler));
        },
        on_10gtds$: function ($receiver, name, capture, handler) {
          return _.kotlin.dom.on_edii0a$($receiver, name, capture, _.kotlin.dom.eventHandler(handler));
        },
        on_edii0a$: function ($receiver, name, capture, listener) {
          var tmp$0;
          if (Kotlin.isType($receiver, EventTarget)) {
            $receiver.addEventListener(name, listener, capture);
            tmp$0 = new _.kotlin.dom.CloseableEventListener($receiver, listener, name, capture);
          }
           else {
            tmp$0 = null;
          }
          return tmp$0;
        },
        CloseableEventListener: Kotlin.createClass(function () {
          return [Kotlin.Closeable];
        }, function (target, listener, name, capture) {
          this.target = target;
          this.listener = listener;
          this.name = name;
          this.capture = capture;
        }, /** @lends _.kotlin.dom.CloseableEventListener.prototype */ {
          close: function () {
            this.target.removeEventListener(this.name, this.listener, this.capture);
          }
        }),
        onClick_alenf6$: function ($receiver, capture, handler) {
          if (capture === void 0)
            capture = false;
          return _.kotlin.dom.on_edii0a$($receiver, 'click', capture, _.kotlin.dom.mouseEventHandler(handler));
        },
        onDoubleClick_alenf6$: function ($receiver, capture, handler) {
          if (capture === void 0)
            capture = false;
          return _.kotlin.dom.on_edii0a$($receiver, 'dblclick', capture, _.kotlin.dom.mouseEventHandler(handler));
        },
        emptyElementList: function () {
          return Kotlin.emptyList();
        },
        emptyNodeList: function () {
          return Kotlin.emptyList();
        },
        get_text: {value: function ($receiver) {
          return $receiver.textContent;
        }},
        set_text: {value: function ($receiver, value) {
          $receiver.textContent = value;
        }},
        get_childrenText: {value: function ($receiver) {
          var buffer = new Kotlin.StringBuilder();
          var nodeList = $receiver.childNodes;
          var i = 0;
          var size = nodeList.length;
          while (i < size) {
            var node = nodeList.item(i);
            if (node != null) {
              if (_.kotlin.dom.isText(node)) {
                buffer.append(node.nodeValue);
              }
            }
            i++;
          }
          return buffer.toString();
        }},
        set_childrenText: {value: function ($receiver, value) {
          var element = $receiver;
          {
            var tmp$0 = _.kotlin.dom.children(element).iterator();
            while (tmp$0.hasNext()) {
              var node = tmp$0.next();
              if (_.kotlin.dom.isText(node)) {
                $receiver.removeChild(node);
              }
            }
          }
          _.kotlin.dom.addText(element, value);
        }},
        get_id: {value: function ($receiver) {
          var tmp$0;
          return (tmp$0 = $receiver.getAttribute('id')) != null ? tmp$0 : '';
        }},
        set_id: {value: function ($receiver, value) {
          $receiver.setAttribute('id', value);
          $receiver.setIdAttribute('id', true);
        }},
        get_style: {value: function ($receiver) {
          var tmp$0;
          return (tmp$0 = $receiver.getAttribute('style')) != null ? tmp$0 : '';
        }},
        set_style: {value: function ($receiver, value) {
          $receiver.setAttribute('style', value);
        }},
        get_classes: {value: function ($receiver) {
          var tmp$0;
          return (tmp$0 = $receiver.getAttribute('class')) != null ? tmp$0 : '';
        }},
        set_classes: {value: function ($receiver, value) {
          $receiver.setAttribute('class', value);
        }},
        hasClass: function ($receiver, cssClass) {
          var c = _.kotlin.dom.get_classes($receiver);
          return _.js.matches_94jgcu$(c, '(^|.*' + '\\' + 's+)' + cssClass + '(' + '$' + '|' + '\\' + 's+.*)');
        },
        children: function ($receiver) {
          return _.kotlin.dom.toList($receiver != null ? $receiver.childNodes : null);
        },
        childElements$f: function (it) {
          return it.nodeType === Node.ELEMENT_NODE;
        },
        childElements$f_0: function (it) {
          return it;
        },
        childElements: function ($receiver) {
          return _.kotlin.map_vqr6wr$(_.kotlin.filter_vqr6wr$(_.kotlin.dom.children($receiver), _.kotlin.dom.childElements$f), _.kotlin.dom.childElements$f_0);
        },
        childElements_1$f: function (name) {
          return function (it) {
            return it.nodeType === Node.ELEMENT_NODE && Kotlin.equals(it.nodeName, name);
          };
        },
        childElements_1$f_0: function (it) {
          return it;
        },
        childElements_1: function ($receiver, name) {
          return _.kotlin.map_vqr6wr$(_.kotlin.filter_vqr6wr$(_.kotlin.dom.children($receiver), _.kotlin.dom.childElements_1$f(name)), _.kotlin.dom.childElements_1$f_0);
        },
        get_elements: {value: function ($receiver) {
          return _.kotlin.dom.toElementList($receiver != null ? $receiver.getElementsByTagName('*') : null);
        }},
        get_elements_0: {value: function ($receiver) {
          return _.kotlin.dom.toElementList($receiver != null ? $receiver.getElementsByTagName('*') : null);
        }},
        elements_1: function ($receiver, localName) {
          return _.kotlin.dom.toElementList($receiver != null ? $receiver.getElementsByTagName(localName) : null);
        },
        elements_2: function ($receiver, localName) {
          return _.kotlin.dom.toElementList($receiver != null ? $receiver.getElementsByTagName(localName) : null);
        },
        elements_3: function ($receiver, namespaceUri, localName) {
          return _.kotlin.dom.toElementList($receiver != null ? $receiver.getElementsByTagNameNS(namespaceUri, localName) : null);
        },
        elements_2_0: function ($receiver, namespaceUri, localName) {
          return _.kotlin.dom.toElementList($receiver != null ? $receiver.getElementsByTagNameNS(namespaceUri, localName) : null);
        },
        toList: function ($receiver) {
          var tmp$0;
          if ($receiver == null) {
            tmp$0 = _.kotlin.dom.emptyNodeList();
          }
           else {
            tmp$0 = new _.kotlin.dom.NodeListAsList($receiver);
          }
          return tmp$0;
        },
        toElementList: function ($receiver) {
          var tmp$0;
          if ($receiver == null) {
            tmp$0 = new Kotlin.ArrayList();
          }
           else {
            tmp$0 = new _.kotlin.dom.ElementListAsList($receiver);
          }
          return tmp$0;
        },
        get$f: function (selector) {
          return function (it) {
            return _.kotlin.dom.hasClass(it, selector.substring(1));
          };
        },
        get: function ($receiver, selector) {
          var root = $receiver != null ? $receiver.documentElement : null;
          var tmp$0;
          if (root != null) {
            if (Kotlin.equals(selector, '*')) {
              tmp$0 = _.kotlin.dom.get_elements($receiver);
            }
             else if (selector.startsWith('.')) {
              tmp$0 = _.kotlin.toList_h3panj$(_.kotlin.filter_vqr6wr$(_.kotlin.dom.get_elements($receiver), _.kotlin.dom.get$f(selector)));
            }
             else if (selector.startsWith('#')) {
              var id = selector.substring(1);
              var element = $receiver != null ? $receiver.getElementById(id) : null;
              return element != null ? _.kotlin.arrayListOf_mzrxf8$([element]) : _.kotlin.dom.emptyElementList();
            }
             else {
              tmp$0 = _.kotlin.dom.elements_2($receiver, selector);
            }
          }
           else {
            tmp$0 = _.kotlin.dom.emptyElementList();
          }
          return tmp$0;
        },
        get_1$f: function (selector) {
          return function (it) {
            return _.kotlin.dom.hasClass(it, selector.substring(1));
          };
        },
        get_1: function ($receiver, selector) {
          var tmp$1;
          if (Kotlin.equals(selector, '*')) {
            tmp$1 = _.kotlin.dom.get_elements_0($receiver);
          }
           else if (selector.startsWith('.')) {
            tmp$1 = _.kotlin.toList_h3panj$(_.kotlin.filter_vqr6wr$(_.kotlin.dom.get_elements_0($receiver), _.kotlin.dom.get_1$f(selector)));
          }
           else if (selector.startsWith('#')) {
            var tmp$0;
            var element = (tmp$0 = $receiver.ownerDocument) != null ? tmp$0.getElementById(selector.substring(1)) : null;
            return element != null ? _.kotlin.arrayListOf_mzrxf8$([element]) : _.kotlin.dom.emptyElementList();
          }
           else {
            tmp$1 = _.kotlin.dom.elements_1($receiver, selector);
          }
          return tmp$1;
        },
        NodeListAsList: Kotlin.createClass(function () {
          return [Kotlin.AbstractList];
        }, function $fun(nodeList) {
          $fun.baseInitializer.call(this);
          this.nodeList = nodeList;
        }, /** @lends _.kotlin.dom.NodeListAsList.prototype */ {
          get_za3lpa$: function (index) {
            var node = this.nodeList.item(index);
            if (node == null) {
              throw new RangeError('NodeList does not contain a node at index: ' + index);
            }
             else {
              return node;
            }
          },
          size: function () {
            return this.nodeList.length;
          }
        }),
        ElementListAsList: Kotlin.createClass(function () {
          return [Kotlin.AbstractList];
        }, function $fun(nodeList) {
          $fun.baseInitializer.call(this);
          this.nodeList = nodeList;
        }, /** @lends _.kotlin.dom.ElementListAsList.prototype */ {
          get_za3lpa$: function (index) {
            var node = this.nodeList.item(index);
            if (node == null) {
              throw new RangeError('NodeList does not contain a node at index: ' + index);
            }
             else if (node.nodeType === Node.ELEMENT_NODE) {
              return node;
            }
             else {
              throw new Kotlin.IllegalArgumentException('Node is not an Element as expected but is ' + node);
            }
          },
          size: function () {
            return this.nodeList.length;
          }
        }),
        clear: function ($receiver) {
          while (true) {
            var child = $receiver.firstChild;
            if (child == null) {
              return;
            }
             else {
              $receiver.removeChild(child);
            }
          }
        },
        nextSiblings: function ($receiver) {
          return new _.kotlin.dom.NextSiblings($receiver);
        },
        NextSiblings: Kotlin.createClass(null, function (node) {
          this.node = node;
        }, /** @lends _.kotlin.dom.NextSiblings.prototype */ {
          iterator: function () {
            return _.kotlin.dom.NextSiblings.iterator$f(this);
          }
        }, /** @lends _.kotlin.dom.NextSiblings */ {
          iterator$f: function (this$NextSiblings) {
            return Kotlin.createObject(function () {
              return [_.kotlin.support.AbstractIterator];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              computeNext: function () {
                var nextValue = this$NextSiblings.node.nextSibling;
                if (nextValue != null) {
                  this.setNext_za3rmp$(nextValue);
                  this$NextSiblings.node = nextValue;
                }
                 else {
                  this.done();
                }
              }
            });
          }
        }),
        previousSiblings: function ($receiver) {
          return new _.kotlin.dom.PreviousSiblings($receiver);
        },
        PreviousSiblings: Kotlin.createClass(null, function (node) {
          this.node = node;
        }, /** @lends _.kotlin.dom.PreviousSiblings.prototype */ {
          iterator: function () {
            return _.kotlin.dom.PreviousSiblings.iterator$f(this);
          }
        }, /** @lends _.kotlin.dom.PreviousSiblings */ {
          iterator$f: function (this$PreviousSiblings) {
            return Kotlin.createObject(function () {
              return [_.kotlin.support.AbstractIterator];
            }, function $fun() {
              $fun.baseInitializer.call(this);
            }, {
              computeNext: function () {
                var nextValue = this$PreviousSiblings.node.previousSibling;
                if (nextValue != null) {
                  this.setNext_za3rmp$(nextValue);
                  this$PreviousSiblings.node = nextValue;
                }
                 else {
                  this.done();
                }
              }
            });
          }
        }),
        isText: function ($receiver) {
          var nt = $receiver.nodeType;
          return nt === Node.TEXT_NODE || nt === Node.CDATA_SECTION_NODE;
        },
        attribute: function ($receiver, name) {
          var tmp$0;
          return (tmp$0 = $receiver.getAttribute(name)) != null ? tmp$0 : '';
        },
        get_head: {value: function ($receiver) {
          return $receiver != null && $receiver.length > 0 ? $receiver.item(0) : null;
        }},
        get_first: {value: function ($receiver) {
          return _.kotlin.dom.get_head($receiver);
        }},
        get_tail: {value: function ($receiver) {
          if ($receiver == null) {
            return null;
          }
           else {
            var s = $receiver.length;
            return s > 0 ? $receiver.item(s - 1) : null;
          }
        }},
        get_last: {value: function ($receiver) {
          return _.kotlin.dom.get_tail($receiver);
        }},
        toXmlString_1: function ($receiver, xmlDeclaration) {
          if (xmlDeclaration === void 0)
            xmlDeclaration = false;
          var tmp$0;
          if ($receiver == null)
            tmp$0 = '';
          else {
            tmp$0 = _.kotlin.dom.nodesToXmlString_lwhwg8$(_.kotlin.dom.toList($receiver), xmlDeclaration);
          }
          return tmp$0;
        },
        nodesToXmlString_lwhwg8$: function (nodes, xmlDeclaration) {
          if (xmlDeclaration === void 0)
            xmlDeclaration = false;
          var builder = new Kotlin.StringBuilder();
          {
            var tmp$0 = nodes.iterator();
            while (tmp$0.hasNext()) {
              var n = tmp$0.next();
              builder.append(_.kotlin.dom.toXmlString_rq0l4m$(n, xmlDeclaration));
            }
          }
          return builder.toString();
        },
        plus_1: function ($receiver, child) {
          if (child != null) {
            $receiver.appendChild(child);
          }
          return $receiver;
        },
        plus: function ($receiver, text) {
          return _.kotlin.dom.addText($receiver, text);
        },
        plusAssign: function ($receiver, text) {
          return _.kotlin.dom.addText($receiver, text);
        },
        createElement: function ($receiver, name, init) {
          var elem = $receiver.createElement(name);
          init.call(elem);
          return elem;
        },
        createElement_1: function ($receiver, name, doc, init) {
          if (doc === void 0)
            doc = null;
          var elem = _.kotlin.dom.ownerDocument($receiver, doc).createElement(name);
          init.call(elem);
          return elem;
        },
        ownerDocument: function ($receiver, doc) {
          if (doc === void 0)
            doc = null;
          var tmp$0;
          if ($receiver.nodeType === Node.DOCUMENT_NODE)
            tmp$0 = $receiver;
          else if (doc == null)
            tmp$0 = $receiver.ownerDocument;
          else
            tmp$0 = doc;
          var answer = tmp$0;
          if (answer == null) {
            throw new Kotlin.IllegalArgumentException('Element does not have an ownerDocument and none was provided for: ' + $receiver);
          }
           else {
            return answer;
          }
        },
        addElement: function ($receiver, name, init) {
          var child = _.kotlin.dom.createElement($receiver, name, init);
          $receiver.appendChild(child);
          return child;
        },
        addElement_1: function ($receiver, name, doc, init) {
          if (doc === void 0)
            doc = null;
          var child = _.kotlin.dom.createElement_1($receiver, name, doc, init);
          $receiver.appendChild(child);
          return child;
        },
        addText: function ($receiver, text, doc) {
          if (doc === void 0)
            doc = null;
          if (text != null) {
            var child = _.kotlin.dom.ownerDocument($receiver, doc).createTextNode(text);
            $receiver.appendChild(child);
          }
          return $receiver;
        }
      }),
      test: Kotlin.definePackage(function () {
        this.asserter = new _.kotlin.test.QUnitAsserter();
      }, /** @lends _.kotlin.test */ {
        todo_n8bj3p$: function (block) {
          Kotlin.println('TODO at ' + block);
        },
        QUnitAsserter: Kotlin.createClass(function () {
          return [_.kotlin.test.Asserter];
        }, null, /** @lends _.kotlin.test.QUnitAsserter.prototype */ {
          assertTrue_ivxn3r$: function (message, actual) {
            ok(actual, message);
          },
          assertEquals_a59ba6$: function (message, expected, actual) {
            ok(Kotlin.equals(expected, actual), message + '. Expected <' + Kotlin.toString(expected) + '> actual <' + Kotlin.toString(actual) + '>');
          },
          assertNotNull_bm4g0d$: function (message, actual) {
            ok(actual != null, message);
          },
          assertNull_bm4g0d$: function (message, actual) {
            ok(actual == null, message);
          },
          fail_61zpoe$: function (message) {
            ok(false, message);
          }
        }),
        assertTrue_2xfrrb$: function (message, block) {
          var actual = block();
          _.kotlin.test.asserter.assertTrue_ivxn3r$(message, actual);
        },
        assertTrue_n8bj3p$: function (block) {
          _.kotlin.test.assertTrue_2xfrrb$('expected true', block);
        },
        assertNot_2xfrrb$f: function (block) {
          return function () {
            return !block();
          };
        },
        assertNot_2xfrrb$: function (message, block) {
          _.kotlin.test.assertTrue_2xfrrb$(message, _.kotlin.test.assertNot_2xfrrb$f(block));
        },
        assertNot_n8bj3p$: function (block) {
          _.kotlin.test.assertNot_2xfrrb$('expected false', block);
        },
        assertTrue_8kj6y5$: function (actual, message) {
          if (message === void 0)
            message = '';
          return _.kotlin.test.assertEquals_8vv676$(true, actual, message);
        },
        assertFalse_8kj6y5$: function (actual, message) {
          if (message === void 0)
            message = '';
          return _.kotlin.test.assertEquals_8vv676$(false, actual, message);
        },
        assertEquals_8vv676$: function (expected, actual, message) {
          if (message === void 0)
            message = '';
          _.kotlin.test.asserter.assertEquals_a59ba6$(message, expected, actual);
        },
        assertNotNull_hwpqgh$: function (actual, message) {
          if (message === void 0)
            message = '';
          _.kotlin.test.asserter.assertNotNull_bm4g0d$(message, actual);
          return actual != null ? actual : Kotlin.throwNPE();
        },
        assertNotNull_74f9dl$: function (actual, block) {
          _.kotlin.test.assertNotNull_ll92s9$(actual, '', block);
        },
        assertNotNull_ll92s9$: function (actual, message, block) {
          _.kotlin.test.asserter.assertNotNull_bm4g0d$(message, actual);
          if (actual != null) {
            block(actual);
          }
        },
        assertNull_hwpqgh$: function (actual, message) {
          if (message === void 0)
            message = '';
          _.kotlin.test.asserter.assertNull_bm4g0d$(message, actual);
        },
        fail_61zpoe$: function (message) {
          if (message === void 0)
            message = '';
          _.kotlin.test.asserter.fail_61zpoe$(message);
        },
        expect_74f9dk$: function (expected, block) {
          _.kotlin.test.expect_ll92sa$(expected, 'expected ' + expected, block);
        },
        expect_ll92sa$: function (expected, message, block) {
          var actual = block();
          _.kotlin.test.assertEquals_8vv676$(expected, actual, message);
        },
        fails_n8bj3p$: function (block) {
          try {
            block();
            _.kotlin.test.asserter.fail_61zpoe$('Expected an exception to be thrown');
            return null;
          }
           catch (e) {
            return e;
          }
        },
        Asserter: Kotlin.createTrait(null)
      }),
      Pair: Kotlin.createClass(null, function (first, second) {
        this.first = first;
        this.second = second;
      }, /** @lends _.kotlin.Pair.prototype */ {
        component1: function () {
          return this.first;
        },
        component2: function () {
          return this.second;
        },
        toString: function () {
          return '(' + this.first + ', ' + this.second + ')';
        }
      }),
      Triple: Kotlin.createClass(null, function (first, second, third) {
        this.first = first;
        this.second = second;
        this.third = third;
      }, /** @lends _.kotlin.Triple.prototype */ {
        component1: function () {
          return this.first;
        },
        component2: function () {
          return this.second;
        },
        component3: function () {
          return this.third;
        },
        toString: function () {
          return '(' + this.first + ', ' + this.second + ', ' + this.third + ')';
        }
      }),
      toString_h3panj$: function ($receiver) {
        return _.kotlin.makeString_mc2pv1$($receiver, ', ', '[', ']');
      },
      mapValues_lh0hhz$: function ($receiver, transform) {
        return _.kotlin.mapValuesTo_7qivbo$($receiver, new Kotlin.ComplexHashMap(), transform);
      },
      iterator_rscjuh$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [Kotlin.Iterator];
        }, null, {
          hasNext: function () {
            return $receiver.hasMoreElements();
          },
          next: function () {
            return $receiver.nextElement();
          }
        });
      },
      iterator_h40uyb$: function ($receiver) {
        return $receiver;
      },
      EmptyIterableException: Kotlin.createClass(function () {
        return [Kotlin.RuntimeException];
      }, function $fun(it) {
        $fun.baseInitializer.call(this, it + ' is empty');
        this.it = it;
      }),
      DuplicateKeyException: Kotlin.createClass(function () {
        return [Kotlin.RuntimeException];
      }, function $fun(message) {
        if (message === void 0)
          message = 'Duplicate keys detected';
        $fun.baseInitializer.call(this, message);
      }),
      get_size_1: {value: function ($receiver) {
        return $receiver.size();
      }},
      get_empty: {value: function ($receiver) {
        return $receiver.isEmpty();
      }},
      set_f7ra8x$: function ($receiver, key, value) {
        return $receiver.put_wn2jw4$(key, value);
      },
      orEmpty_s8ckw1$: function ($receiver) {
        return $receiver != null ? $receiver : _.kotlin.stdlib_emptyMap();
      },
      contains_6halgi$: function ($receiver, key) {
        return $receiver.containsKey_za3rmp$(key);
      },
      get_key: {value: function ($receiver) {
        return $receiver.getKey();
      }},
      get_value: {value: function ($receiver) {
        return $receiver.getValue();
      }},
      component1: function ($receiver) {
        return $receiver.getKey();
      },
      component2: function ($receiver) {
        return $receiver.getValue();
      },
      getOrElse_9bj33b$: function ($receiver, key, defaultValue) {
        if ($receiver.containsKey_za3rmp$(key)) {
          return $receiver.get_za3rmp$(key);
        }
         else {
          return defaultValue();
        }
      },
      getOrPut_ynyybx$: function ($receiver, key, defaultValue) {
        if ($receiver.containsKey_za3rmp$(key)) {
          return $receiver.get_za3rmp$(key);
        }
         else {
          var answer = defaultValue();
          $receiver.put_wn2jw4$(key, answer);
          return answer;
        }
      },
      iterator_s8ckw1$: function ($receiver) {
        var entrySet = $receiver.entrySet();
        return entrySet.iterator();
      },
      mapValuesTo_7qivbo$: function ($receiver, result, transform) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var e = tmp$0.next();
            var newValue = transform(e);
            result.put_wn2jw4$(_.kotlin.get_key(e), newValue);
          }
        }
        return result;
      },
      putAll_nvpytz$: function ($receiver, values) {
        var tmp$1, tmp$2, tmp$3;
        {
          tmp$1 = values, tmp$2 = tmp$1.length;
          for (var tmp$3 = 0; tmp$3 !== tmp$2; ++tmp$3) {
            var tmp$0 = tmp$1[tmp$3]
            , key = tmp$0.component1()
            , value = tmp$0.component2();
            $receiver.put_wn2jw4$(key, value);
          }
        }
      },
      toMap_cj6vvg$: function ($receiver, map) {
        map.putAll_za3j1t$($receiver);
        return map;
      },
      toMap_uxbsj8$: function ($receiver, map) {
        {
          var tmp$1 = $receiver.iterator();
          while (tmp$1.hasNext()) {
            var tmp$0 = tmp$1.next()
            , key = tmp$0.component1()
            , value = tmp$0.component2();
            if (map.containsKey_za3rmp$(key)) {
              throw new _.kotlin.DuplicateKeyException();
            }
            map.put_wn2jw4$(key, value);
          }
        }
        return map;
      },
      toMap_h3panj$: function ($receiver) {
        return _.kotlin.toMap_uxbsj8$($receiver, new Kotlin.ComplexHashMap());
      },
      mapValues_gld13f$: function ($receiver, transform) {
        return _.kotlin.mapValuesTo_7qivbo$($receiver, new Kotlin.ComplexHashMap(_.kotlin.get_size_1($receiver)), transform);
      },
      get_lastIndex: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_0: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_1: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_2: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_3: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_4: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_5: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_6: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      get_lastIndex_7: {value: function ($receiver) {
        return $receiver.length - 1;
      }},
      Stream: Kotlin.createTrait(null),
      streamOf_mzrxf8$: function (elements) {
        return _.kotlin.stream_2hx8bi$(elements);
      },
      FilteringStream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (stream, sendWhen, predicate) {
        if (sendWhen === void 0)
          sendWhen = true;
        this.stream = stream;
        this.sendWhen = sendWhen;
        this.predicate = predicate;
      }, /** @lends _.kotlin.FilteringStream.prototype */ {
        iterator: function () {
          return _.kotlin.FilteringStream.iterator$f(this);
        }
      }, /** @lends _.kotlin.FilteringStream */ {
        iterator$f: function (this$FilteringStream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
            this.iterator = this$FilteringStream.stream.iterator();
          }, {
            computeNext: function () {
              while (this.iterator.hasNext()) {
                var item = this.iterator.next();
                if (Kotlin.equals(this$FilteringStream.predicate(item), this$FilteringStream.sendWhen)) {
                  this.setNext_za3rmp$(item);
                  return;
                }
              }
              this.done();
            }
          });
        }
      }),
      TransformingStream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (stream, transformer) {
        this.stream = stream;
        this.transformer = transformer;
      }, /** @lends _.kotlin.TransformingStream.prototype */ {
        iterator: function () {
          return _.kotlin.TransformingStream.iterator$f(this);
        }
      }, /** @lends _.kotlin.TransformingStream */ {
        iterator$f: function (this$TransformingStream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
            this.iterator = this$TransformingStream.stream.iterator();
          }, {
            computeNext: function () {
              if (this.iterator.hasNext()) {
                this.setNext_za3rmp$(this$TransformingStream.transformer(this.iterator.next()));
              }
               else {
                this.done();
              }
            }
          });
        }
      }),
      MergingStream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (stream1, stream2, transform) {
        this.stream1 = stream1;
        this.stream2 = stream2;
        this.transform = transform;
      }, /** @lends _.kotlin.MergingStream.prototype */ {
        iterator: function () {
          return _.kotlin.MergingStream.iterator$f(this);
        }
      }, /** @lends _.kotlin.MergingStream */ {
        iterator$f: function (this$MergingStream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
            this.iterator1 = this$MergingStream.stream1.iterator();
            this.iterator2 = this$MergingStream.stream2.iterator();
          }, {
            computeNext: function () {
              if (this.iterator1.hasNext() && this.iterator2.hasNext()) {
                this.setNext_za3rmp$(this$MergingStream.transform(this.iterator1.next(), this.iterator2.next()));
              }
               else {
                this.done();
              }
            }
          });
        }
      }),
      FlatteningStream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (stream, transformer) {
        this.stream = stream;
        this.transformer = transformer;
      }, /** @lends _.kotlin.FlatteningStream.prototype */ {
        iterator: function () {
          return _.kotlin.FlatteningStream.iterator$f(this);
        }
      }, /** @lends _.kotlin.FlatteningStream */ {
        iterator$f: function (this$FlatteningStream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
            this.iterator = this$FlatteningStream.stream.iterator();
            this.itemIterator = null;
          }, {
            computeNext: function () {
              while (this.itemIterator == null) {
                if (!this.iterator.hasNext()) {
                  this.done();
                  break;
                }
                 else {
                  var element = this.iterator.next();
                  var nextItemIterator = this$FlatteningStream.transformer(element).iterator();
                  if (nextItemIterator.hasNext())
                    this.itemIterator = nextItemIterator;
                }
              }
              var currentItemIterator = this.itemIterator;
              if (currentItemIterator == null) {
                this.done();
              }
               else {
                this.setNext_za3rmp$(currentItemIterator.next());
                if (!currentItemIterator.hasNext())
                  this.itemIterator = null;
              }
            }
          });
        }
      }),
      Multistream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (streams) {
        this.streams = streams;
      }, /** @lends _.kotlin.Multistream.prototype */ {
        iterator: function () {
          return _.kotlin.Multistream.iterator$f(this);
        }
      }, /** @lends _.kotlin.Multistream */ {
        iterator$f: function (this$Multistream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
            this.iterator = this$Multistream.streams.iterator();
            this.streamIterator = null;
          }, {
            computeNext: function () {
              while (this.streamIterator == null) {
                if (!this.iterator.hasNext()) {
                  this.done();
                  break;
                }
                 else {
                  var stream = this.iterator.next();
                  var nextStreamIterator = stream.iterator();
                  if (nextStreamIterator.hasNext())
                    this.streamIterator = nextStreamIterator;
                }
              }
              var currentStreamIterator = this.streamIterator;
              if (currentStreamIterator == null) {
                this.done();
              }
               else {
                this.setNext_za3rmp$(currentStreamIterator.next());
                if (!currentStreamIterator.hasNext())
                  this.streamIterator = null;
              }
            }
          });
        }
      }),
      LimitedStream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (stream, stopWhen, predicate) {
        if (stopWhen === void 0)
          stopWhen = true;
        this.stream = stream;
        this.stopWhen = stopWhen;
        this.predicate = predicate;
      }, /** @lends _.kotlin.LimitedStream.prototype */ {
        iterator: function () {
          return _.kotlin.LimitedStream.iterator$f(this);
        }
      }, /** @lends _.kotlin.LimitedStream */ {
        iterator$f: function (this$LimitedStream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
            this.iterator = this$LimitedStream.stream.iterator();
          }, {
            computeNext: function () {
              if (!this.iterator.hasNext()) {
                this.done();
              }
               else {
                var item = this.iterator.next();
                if (Kotlin.equals(this$LimitedStream.predicate(item), this$LimitedStream.stopWhen)) {
                  this.done();
                }
                 else {
                  this.setNext_za3rmp$(item);
                }
              }
            }
          });
        }
      }),
      FunctionStream: Kotlin.createClass(function () {
        return [_.kotlin.Stream];
      }, function (producer) {
        this.producer = producer;
      }, /** @lends _.kotlin.FunctionStream.prototype */ {
        iterator: function () {
          return _.kotlin.FunctionStream.iterator$f(this);
        }
      }, /** @lends _.kotlin.FunctionStream */ {
        iterator$f: function (this$FunctionStream) {
          return Kotlin.createObject(function () {
            return [_.kotlin.support.AbstractIterator];
          }, function $fun() {
            $fun.baseInitializer.call(this);
          }, {
            computeNext: function () {
              var item = this$FunctionStream.producer();
              if (item == null) {
                this.done();
              }
               else {
                this.setNext_za3rmp$(item);
              }
            }
          });
        }
      }),
      stream_n8bj3p$: function (nextFunction) {
        return new _.kotlin.FunctionStream(nextFunction);
      },
      stream_74f9dl$: function (initialValue, nextFunction) {
        return _.kotlin.stream_n8bj3p$(_.kotlin.toGenerator_n1mtj3$(nextFunction, initialValue));
      },
      stdlib_emptyListClass: Kotlin.createClass(function () {
        return [_.kotlin.List];
      }, null),
      stdlib_emptyList: function () {
        return _.kotlin.stdlib_emptyList_w9bu57$;
      },
      stdlib_emptyMapClass: Kotlin.createClass(function () {
        return [_.kotlin.Map];
      }, null),
      stdlib_emptyMap: function () {
        return _.kotlin.stdlib_emptyMap_h2vi7z$;
      },
      listOf_mzrxf8$: function (values) {
        return values.length === 0 ? _.kotlin.stdlib_emptyList() : _.kotlin.arrayListOf_mzrxf8$(values);
      },
      listOf: function () {
        return _.kotlin.stdlib_emptyList();
      },
      mapOf_mzrxf8$: function (values) {
        return values.length === 0 ? _.kotlin.stdlib_emptyMap() : _.kotlin.hashMapOf_mzrxf8$(values);
      },
      mapOf: function () {
        return _.kotlin.stdlib_emptyMap();
      },
      arrayListOf_mzrxf8$: function (values) {
        return _.kotlin.toCollection_xpmo5j$(values, new Kotlin.ArrayList(values.length));
      },
      hashSetOf_mzrxf8$: function (values) {
        return _.kotlin.toCollection_xpmo5j$(values, new Kotlin.ComplexHashSet(values.length));
      },
      hashMapOf_mzrxf8$: function (values) {
        var answer = new Kotlin.ComplexHashMap(values.length);
        _.kotlin.putAll_nvpytz$(answer, values);
        return answer;
      },
      get_size_0: {value: function ($receiver) {
        return $receiver.size();
      }},
      get_empty_0: {value: function ($receiver) {
        return $receiver.isEmpty();
      }},
      get_indices: {value: function ($receiver) {
        return new Kotlin.NumberRange(0, _.kotlin.get_size_0($receiver) - 1);
      }},
      get_indices_0: {value: function ($receiver) {
        return new Kotlin.NumberRange(0, $receiver - 1);
      }},
      isNotEmpty_tkvw3h$: function ($receiver) {
        return !$receiver.isEmpty();
      },
      get_notEmpty: {value: function ($receiver) {
        return _.kotlin.isNotEmpty_tkvw3h$($receiver);
      }},
      orEmpty_tkvw3h$: function ($receiver) {
        return $receiver != null ? $receiver : _.kotlin.stdlib_emptyList();
      },
      orEmpty_mtvwn1$: function ($receiver) {
        return $receiver != null ? $receiver : _.kotlin.stdlib_emptyList();
      },
      get_first: {value: function ($receiver) {
        return _.kotlin.get_head($receiver);
      }},
      get_last: {value: function ($receiver) {
        var s = _.kotlin.get_size_0($receiver);
        return s > 0 ? $receiver.get_za3lpa$(s - 1) : null;
      }},
      get_lastIndex_8: {value: function ($receiver) {
        return _.kotlin.get_size_0($receiver) - 1;
      }},
      get_head: {value: function ($receiver) {
        return _.kotlin.isNotEmpty_tkvw3h$($receiver) ? $receiver.get_za3lpa$(0) : null;
      }},
      get_tail: {value: function ($receiver) {
        return _.kotlin.drop_odt3s5$($receiver, 1);
      }},
      addAll_wtmfso$: function ($receiver, iterable) {
        {
          if (Kotlin.isType(iterable, _.kotlin.Collection))
            $receiver.addAll_xeylzf$(iterable);
          else {
            var tmp$0 = iterable.iterator();
            while (tmp$0.hasNext()) {
              var item = tmp$0.next();
              $receiver.add_za3rmp$(item);
            }
          }
        }
      },
      addAll_ngcqne$: function ($receiver, stream) {
        {
          var tmp$0 = stream.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            $receiver.add_za3rmp$(item);
          }
        }
      },
      addAll_jl7u2r$: function ($receiver, array) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = array, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            $receiver.add_za3rmp$(item);
          }
        }
      },
      removeAll_wtmfso$: function ($receiver, iterable) {
        {
          if (Kotlin.isType(iterable, _.kotlin.Collection))
            $receiver.removeAll_xeylzf$(iterable);
          else {
            var tmp$0 = iterable.iterator();
            while (tmp$0.hasNext()) {
              var item = tmp$0.next();
              $receiver.remove_za3rmp$(item);
            }
          }
        }
      },
      removeAll_ngcqne$: function ($receiver, stream) {
        {
          var tmp$0 = stream.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            $receiver.remove_za3rmp$(item);
          }
        }
      },
      removeAll_jl7u2r$: function ($receiver, array) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = array, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            $receiver.remove_za3rmp$(item);
          }
        }
      },
      retainAll_wtmfso$: function ($receiver, iterable) {
        {
          if (Kotlin.isType(iterable, _.kotlin.Collection))
            $receiver.retainAll_xeylzf$(iterable);
          else
            $receiver.retainAll_xeylzf$(_.kotlin.toSet_h3panj$(iterable));
        }
      },
      retainAll_jl7u2r$: function ($receiver, array) {
        $receiver.retainAll_xeylzf$(_.kotlin.toSet_2hx8bi$(array));
      },
      drop_fdw77o$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_rz0vgy$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_ucmip8$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_cwi0e2$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_3qx2rv$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_2e964m$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_tb5gmf$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_x09c4g$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_7naycm$: function ($receiver, n) {
        if (n >= $receiver.length)
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList($receiver.length - n);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_odt3s5$: function ($receiver, n) {
        if (n >= _.kotlin.get_size_0($receiver))
          return new Kotlin.ArrayList();
        var count = 0;
        var list = new Kotlin.ArrayList(_.kotlin.get_size_0($receiver) - n);
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_eq3vf5$: function ($receiver, n) {
        var count = 0;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ >= n)
              list.add_za3rmp$(item);
          }
        }
        return list;
      },
      drop_9ip83h$f: function (count, n) {
        return function (it) {
          return count.v++ >= n;
        };
      },
      drop_9ip83h$: function ($receiver, n) {
        var count = {v: 0};
        return new _.kotlin.FilteringStream($receiver, void 0, _.kotlin.drop_9ip83h$f(count, n));
      },
      drop_n7iutu$: function ($receiver, n) {
        return $receiver.substring(Math.min(n, _.kotlin.get_size($receiver)));
      },
      dropWhile_de9h66$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_50zxbw$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_x245au$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_h5ed0c$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_24jijj$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_im8pe8$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_1xntkt$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_3cuuyy$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_p67zio$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_vqr6wr$: function ($receiver, predicate) {
        var yielding = false;
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (yielding)
              list.add_za3rmp$(item);
            else if (!predicate(item)) {
              list.add_za3rmp$(item);
              yielding = true;
            }
          }
        }
        return list;
      },
      dropWhile_9fpnal$f: function (yielding, predicate) {
        return function (it) {
          if (yielding.v)
            return true;
          else if (!predicate(it)) {
            yielding.v = true;
            return true;
          }
           else
            return false;
        };
      },
      dropWhile_9fpnal$: function ($receiver, predicate) {
        var yielding = {v: false};
        return new _.kotlin.FilteringStream($receiver, void 0, _.kotlin.dropWhile_9fpnal$f(yielding, predicate));
      },
      dropWhile_t73kuc$: function ($receiver, predicate) {
        var tmp$0;
        {
          tmp$0 = $receiver.length - 1 + 1;
          for (var index = 0; index !== tmp$0; index++)
            if (!predicate($receiver.charAt(index))) {
              return $receiver.substring(index);
            }
        }
        return '';
      },
      filter_de9h66$: function ($receiver, predicate) {
        return _.kotlin.filterTo_1jm7xb$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_50zxbw$: function ($receiver, predicate) {
        return _.kotlin.filterTo_uoz9bj$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_x245au$: function ($receiver, predicate) {
        return _.kotlin.filterTo_o451x3$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_h5ed0c$: function ($receiver, predicate) {
        return _.kotlin.filterTo_xryfpz$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_24jijj$: function ($receiver, predicate) {
        return _.kotlin.filterTo_6s9ff2$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_im8pe8$: function ($receiver, predicate) {
        return _.kotlin.filterTo_lbhsbh$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_1xntkt$: function ($receiver, predicate) {
        return _.kotlin.filterTo_4m2m1i$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_3cuuyy$: function ($receiver, predicate) {
        return _.kotlin.filterTo_ru2r$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_p67zio$: function ($receiver, predicate) {
        return _.kotlin.filterTo_wion7n$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_vqr6wr$: function ($receiver, predicate) {
        return _.kotlin.filterTo_ywx4y6$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_gld13f$: function ($receiver, predicate) {
        return _.kotlin.filterTo_inv7mm$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filter_9fpnal$: function ($receiver, predicate) {
        return new _.kotlin.FilteringStream($receiver, true, predicate);
      },
      filter_t73kuc$: function ($receiver, predicate) {
        return _.kotlin.filterTo_2ngy80$($receiver, new Kotlin.StringBuilder(), predicate).toString();
      },
      filterNot_de9h66$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_1jm7xb$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_50zxbw$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_uoz9bj$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_x245au$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_o451x3$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_h5ed0c$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_xryfpz$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_24jijj$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_6s9ff2$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_im8pe8$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_lbhsbh$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_1xntkt$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_4m2m1i$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_3cuuyy$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_ru2r$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_p67zio$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_wion7n$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_vqr6wr$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_ywx4y6$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_gld13f$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_inv7mm$($receiver, new Kotlin.ArrayList(), predicate);
      },
      filterNot_9fpnal$: function ($receiver, predicate) {
        return new _.kotlin.FilteringStream($receiver, false, predicate);
      },
      filterNot_t73kuc$: function ($receiver, predicate) {
        return _.kotlin.filterNotTo_2ngy80$($receiver, new Kotlin.StringBuilder(), predicate).toString();
      },
      filterNotNull_2hx8bi$: function ($receiver) {
        return _.kotlin.filterNotNullTo_xpmo5j$($receiver, new Kotlin.ArrayList());
      },
      filterNotNull_h3panj$: function ($receiver) {
        return _.kotlin.filterNotNullTo_4jj70a$($receiver, new Kotlin.ArrayList());
      },
      filterNotNull_pdnvbz$f: function (it) {
        return it == null;
      },
      filterNotNull_pdnvbz$: function ($receiver) {
        return new _.kotlin.FilteringStream($receiver, false, _.kotlin.filterNotNull_pdnvbz$f);
      },
      filterNotNullTo_xpmo5j$: function ($receiver, destination) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (element != null)
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotNullTo_4jj70a$: function ($receiver, destination) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (element != null)
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotNullTo_791eew$: function ($receiver, destination) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (element != null)
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_1jm7xb$: function ($receiver, destination, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_uoz9bj$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_o451x3$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_xryfpz$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_6s9ff2$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_lbhsbh$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_4m2m1i$: function ($receiver, destination, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_ru2r$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_wion7n$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_ywx4y6$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_inv7mm$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_ggat1c$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterNotTo_2ngy80$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              destination.append(element);
          }
        }
        return destination;
      },
      filterTo_1jm7xb$: function ($receiver, destination, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_uoz9bj$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_o451x3$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_xryfpz$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_6s9ff2$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_lbhsbh$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_4m2m1i$: function ($receiver, destination, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_ru2r$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_wion7n$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_ywx4y6$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_inv7mm$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_ggat1c$: function ($receiver, destination, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              destination.add_za3rmp$(element);
          }
        }
        return destination;
      },
      filterTo_2ngy80$: function ($receiver, destination, predicate) {
        var tmp$0;
        {
          tmp$0 = $receiver.length - 1 + 1;
          for (var index = 0; index !== tmp$0; index++) {
            var element = $receiver.charAt(index);
            if (predicate(element))
              destination.append(element);
          }
        }
        return destination;
      },
      slice_qxrbi5$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_34aosx$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_dto1g5$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_ldb6x3$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_5ya7ho$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_t349z9$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_3cdrzs$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_cc6qan$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_w98n8l$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver[index]);
          }
        }
        return list;
      },
      slice_h9kosk$: function ($receiver, indices) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            list.add_za3rmp$($receiver.get_za3lpa$(index));
          }
        }
        return list;
      },
      slice_n9t38v$: function ($receiver, indices) {
        var result = new Kotlin.StringBuilder();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var i = tmp$0.next();
            result.append($receiver.charAt(i));
          }
        }
        return result.toString();
      },
      take_fdw77o$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_rz0vgy$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_ucmip8$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_cwi0e2$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_3qx2rv$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_2e964m$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_tb5gmf$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_x09c4g$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_7naycm$: function ($receiver, n) {
        var count = 0;
        var realN = n > $receiver.length ? $receiver.length : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_odt3s5$: function ($receiver, n) {
        var count = 0;
        var realN = n > _.kotlin.get_size_0($receiver) ? _.kotlin.get_size_0($receiver) : n;
        var list = new Kotlin.ArrayList(realN);
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === realN)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_eq3vf5$: function ($receiver, n) {
        var count = 0;
        var list = new Kotlin.ArrayList(n);
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (count++ === n)
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      take_9ip83h$f: function (count, n) {
        return function (it) {
          return count.v++ === n;
        };
      },
      take_9ip83h$: function ($receiver, n) {
        var count = {v: 0};
        return new _.kotlin.LimitedStream($receiver, void 0, _.kotlin.take_9ip83h$f(count, n));
      },
      take_n7iutu$: function ($receiver, n) {
        return $receiver.substring(0, Math.min(n, _.kotlin.get_size($receiver)));
      },
      takeWhile_de9h66$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_50zxbw$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_x245au$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_h5ed0c$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_24jijj$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_im8pe8$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_1xntkt$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_3cuuyy$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_p67zio$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_vqr6wr$: function ($receiver, predicate) {
        var list = new Kotlin.ArrayList();
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (!predicate(item))
              break;
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      takeWhile_9fpnal$: function ($receiver, predicate) {
        return new _.kotlin.LimitedStream($receiver, false, predicate);
      },
      takeWhile_t73kuc$: function ($receiver, predicate) {
        var tmp$0;
        {
          tmp$0 = $receiver.length - 1 + 1;
          for (var index = 0; index !== tmp$0; index++)
            if (!predicate($receiver.charAt(index))) {
              return $receiver.substring(0, index);
            }
        }
        return $receiver;
      },
      stream_2hx8bi$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_l1lu5s$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_964n92$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_355nu0$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_bvy38t$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_rjqrz0$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_tmsbgp$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_se6h4y$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_i2lc78$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return Kotlin.arrayIterator($receiver);
          }
        });
      },
      stream_h3panj$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return $receiver.iterator();
          }
        });
      },
      stream_pdnvbz$: function ($receiver) {
        return $receiver;
      },
      stream_pdl1w0$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.Stream];
        }, null, {
          iterator: function () {
            return _.kotlin.iterator_gw00vq$($receiver);
          }
        });
      },
      requireNoNulls_2hx8bi$: function ($receiver) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (element == null) {
              throw new Kotlin.IllegalArgumentException('null element found in ' + $receiver);
            }
          }
        }
        return $receiver;
      },
      requireNoNulls_h3panj$: function ($receiver) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (element == null) {
              throw new Kotlin.IllegalArgumentException('null element found in ' + $receiver);
            }
          }
        }
        return $receiver;
      },
      requireNoNulls_mtvwn1$: function ($receiver) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (element == null) {
              throw new Kotlin.IllegalArgumentException('null element found in ' + $receiver);
            }
          }
        }
        return $receiver;
      },
      requireNoNulls_pdnvbz$f: function (this$requireNoNulls) {
        return function (it) {
          if (it == null) {
            throw new Kotlin.IllegalArgumentException('null element found in ' + this$requireNoNulls);
          }
          return true;
        };
      },
      requireNoNulls_pdnvbz$: function ($receiver) {
        return new _.kotlin.FilteringStream($receiver, void 0, _.kotlin.requireNoNulls_pdnvbz$f($receiver));
      },
      flatMap_de9h66$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_1jm7xb$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_50zxbw$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_uoz9bj$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_x245au$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_o451x3$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_h5ed0c$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_xryfpz$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_24jijj$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_6s9ff2$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_im8pe8$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_lbhsbh$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_1xntkt$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_4m2m1i$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_3cuuyy$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_ru2r$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_p67zio$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_wion7n$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_vqr6wr$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_ywx4y6$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_gld13f$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_inv7mm$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_t73kuc$: function ($receiver, transform) {
        return _.kotlin.flatMapTo_caazm9$($receiver, new Kotlin.ArrayList(), transform);
      },
      flatMap_9fpnal$: function ($receiver, transform) {
        return new _.kotlin.FlatteningStream($receiver, transform);
      },
      flatMapTo_1jm7xb$: function ($receiver, destination, transform) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_uoz9bj$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_o451x3$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_xryfpz$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_6s9ff2$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_lbhsbh$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_4m2m1i$: function ($receiver, destination, transform) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_ru2r$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_wion7n$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_ywx4y6$: function ($receiver, destination, transform) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_inv7mm$: function ($receiver, destination, transform) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_caazm9$: function ($receiver, destination, transform) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_wtmfso$(destination, list);
          }
        }
        return destination;
      },
      flatMapTo_ggat1c$: function ($receiver, destination, transform) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var list = transform(element);
            _.kotlin.addAll_ngcqne$(destination, list);
          }
        }
        return destination;
      },
      groupBy_de9h66$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_dmnozt$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_50zxbw$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_7i5ojf$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_x245au$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_du5x9d$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_h5ed0c$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_4mj9lf$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_24jijj$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_yr676w$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_im8pe8$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_fktjsp$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_1xntkt$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_8qaat0$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_3cuuyy$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_rnq9xv$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_p67zio$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_yb8vhj$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_vqr6wr$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_cyhgqk$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_gld13f$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_7qivbo$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_9fpnal$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_fsw8ae$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupBy_t73kuc$: function ($receiver, toKey) {
        return _.kotlin.groupByTo_16syit$($receiver, new Kotlin.ComplexHashMap(), toKey);
      },
      groupByTo_dmnozt$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_dmnozt$: function ($receiver, map, toKey) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_dmnozt$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_7i5ojf$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_7i5ojf$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_7i5ojf$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_du5x9d$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_du5x9d$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_du5x9d$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_4mj9lf$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_4mj9lf$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_4mj9lf$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_yr676w$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_yr676w$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_yr676w$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_fktjsp$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_fktjsp$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_fktjsp$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_8qaat0$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_8qaat0$: function ($receiver, map, toKey) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_8qaat0$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_rnq9xv$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_rnq9xv$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_rnq9xv$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_yb8vhj$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_yb8vhj$: function ($receiver, map, toKey) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_yb8vhj$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_cyhgqk$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_cyhgqk$: function ($receiver, map, toKey) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_cyhgqk$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_7qivbo$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_7qivbo$: function ($receiver, map, toKey) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_7qivbo$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_fsw8ae$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_fsw8ae$: function ($receiver, map, toKey) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_fsw8ae$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      groupByTo_16syit$f: function () {
        return new Kotlin.ArrayList();
      },
      groupByTo_16syit$: function ($receiver, map, toKey) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            var key = toKey(element);
            var list = _.kotlin.getOrPut_ynyybx$(map, key, _.kotlin.groupByTo_16syit$f);
            list.add_za3rmp$(element);
          }
        }
        return map;
      },
      map_de9h66$: function ($receiver, transform) {
        return _.kotlin.mapTo_1jm7xb$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_50zxbw$: function ($receiver, transform) {
        return _.kotlin.mapTo_uoz9bj$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_x245au$: function ($receiver, transform) {
        return _.kotlin.mapTo_o451x3$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_h5ed0c$: function ($receiver, transform) {
        return _.kotlin.mapTo_xryfpz$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_24jijj$: function ($receiver, transform) {
        return _.kotlin.mapTo_6s9ff2$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_im8pe8$: function ($receiver, transform) {
        return _.kotlin.mapTo_lbhsbh$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_1xntkt$: function ($receiver, transform) {
        return _.kotlin.mapTo_4m2m1i$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_3cuuyy$: function ($receiver, transform) {
        return _.kotlin.mapTo_ru2r$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_p67zio$: function ($receiver, transform) {
        return _.kotlin.mapTo_wion7n$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_vqr6wr$: function ($receiver, transform) {
        return _.kotlin.mapTo_ywx4y6$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_gld13f$: function ($receiver, transform) {
        return _.kotlin.mapTo_inv7mm$($receiver, new Kotlin.ArrayList(), transform);
      },
      map_9fpnal$: function ($receiver, transform) {
        return new _.kotlin.TransformingStream($receiver, transform);
      },
      map_t73kuc$: function ($receiver, transform) {
        return _.kotlin.mapTo_caazm9$($receiver, new Kotlin.ArrayList(), transform);
      },
      mapNotNull_de9h66$: function ($receiver, transform) {
        return _.kotlin.mapNotNullTo_1jm7xb$($receiver, new Kotlin.ArrayList(), transform);
      },
      mapNotNull_vqr6wr$: function ($receiver, transform) {
        return _.kotlin.mapNotNullTo_ywx4y6$($receiver, new Kotlin.ArrayList(), transform);
      },
      mapNotNull_9fpnal$f: function (it) {
        return it == null;
      },
      mapNotNull_9fpnal$: function ($receiver, transform) {
        return new _.kotlin.TransformingStream(new _.kotlin.FilteringStream($receiver, false, _.kotlin.mapNotNull_9fpnal$f), transform);
      },
      mapNotNullTo_1jm7xb$: function ($receiver, destination, transform) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (element != null) {
              destination.add_za3rmp$(transform(element));
            }
          }
        }
        return destination;
      },
      mapNotNullTo_ywx4y6$: function ($receiver, destination, transform) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (element != null) {
              destination.add_za3rmp$(transform(element));
            }
          }
        }
        return destination;
      },
      mapNotNullTo_ggat1c$: function ($receiver, destination, transform) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (element != null) {
              destination.add_za3rmp$(transform(element));
            }
          }
        }
        return destination;
      },
      mapTo_1jm7xb$: function ($receiver, destination, transform) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_uoz9bj$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_o451x3$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_xryfpz$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_6s9ff2$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_lbhsbh$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_4m2m1i$: function ($receiver, destination, transform) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_ru2r$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_wion7n$: function ($receiver, destination, transform) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_ywx4y6$: function ($receiver, destination, transform) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_inv7mm$: function ($receiver, destination, transform) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_ggat1c$: function ($receiver, destination, transform) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      mapTo_caazm9$: function ($receiver, destination, transform) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            destination.add_za3rmp$(transform(item));
          }
        }
        return destination;
      },
      withIndices_2hx8bi$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_2hx8bi$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_1jm7xb$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_2hx8bi$f(index));
      },
      withIndices_l1lu5s$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_l1lu5s$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_uoz9bj$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_l1lu5s$f(index));
      },
      withIndices_964n92$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_964n92$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_o451x3$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_964n92$f(index));
      },
      withIndices_355nu0$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_355nu0$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_xryfpz$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_355nu0$f(index));
      },
      withIndices_bvy38t$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_bvy38t$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_6s9ff2$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_bvy38t$f(index));
      },
      withIndices_rjqrz0$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_rjqrz0$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_lbhsbh$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_rjqrz0$f(index));
      },
      withIndices_tmsbgp$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_tmsbgp$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_4m2m1i$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_tmsbgp$f(index));
      },
      withIndices_se6h4y$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_se6h4y$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_ru2r$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_se6h4y$f(index));
      },
      withIndices_i2lc78$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_i2lc78$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_wion7n$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_i2lc78$f(index));
      },
      withIndices_h3panj$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_h3panj$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_ywx4y6$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_h3panj$f(index));
      },
      withIndices_pdnvbz$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_pdnvbz$: function ($receiver) {
        var index = {v: 0};
        return new _.kotlin.TransformingStream($receiver, _.kotlin.withIndices_pdnvbz$f(index));
      },
      withIndices_pdl1w0$f: function (index) {
        return function (it) {
          return _.kotlin.to_l1ob02$(index.v++, it);
        };
      },
      withIndices_pdl1w0$: function ($receiver) {
        var index = {v: 0};
        return _.kotlin.mapTo_caazm9$($receiver, new Kotlin.ArrayList(), _.kotlin.withIndices_pdl1w0$f(index));
      },
      distinct_2hx8bi$: function ($receiver) {
        return _.kotlin.toMutableSet_2hx8bi$($receiver);
      },
      distinct_l1lu5s$: function ($receiver) {
        return _.kotlin.toMutableSet_l1lu5s$($receiver);
      },
      distinct_964n92$: function ($receiver) {
        return _.kotlin.toMutableSet_964n92$($receiver);
      },
      distinct_355nu0$: function ($receiver) {
        return _.kotlin.toMutableSet_355nu0$($receiver);
      },
      distinct_bvy38t$: function ($receiver) {
        return _.kotlin.toMutableSet_bvy38t$($receiver);
      },
      distinct_rjqrz0$: function ($receiver) {
        return _.kotlin.toMutableSet_rjqrz0$($receiver);
      },
      distinct_tmsbgp$: function ($receiver) {
        return _.kotlin.toMutableSet_tmsbgp$($receiver);
      },
      distinct_se6h4y$: function ($receiver) {
        return _.kotlin.toMutableSet_se6h4y$($receiver);
      },
      distinct_i2lc78$: function ($receiver) {
        return _.kotlin.toMutableSet_i2lc78$($receiver);
      },
      distinct_h3panj$: function ($receiver) {
        return _.kotlin.toMutableSet_h3panj$($receiver);
      },
      intersect_qxrbi5$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_2hx8bi$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_34aosx$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_l1lu5s$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_dto1g5$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_964n92$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_ldb6x3$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_355nu0$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_5ya7ho$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_bvy38t$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_t349z9$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_rjqrz0$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_3cdrzs$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_tmsbgp$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_cc6qan$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_se6h4y$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_w98n8l$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_i2lc78$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      intersect_975xw0$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_h3panj$($receiver);
        _.kotlin.retainAll_wtmfso$(set, other);
        return set;
      },
      subtract_qxrbi5$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_2hx8bi$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_34aosx$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_l1lu5s$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_dto1g5$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_964n92$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_ldb6x3$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_355nu0$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_5ya7ho$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_bvy38t$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_t349z9$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_rjqrz0$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_3cdrzs$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_tmsbgp$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_cc6qan$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_se6h4y$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_w98n8l$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_i2lc78$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      subtract_975xw0$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_h3panj$($receiver);
        _.kotlin.removeAll_wtmfso$(set, other);
        return set;
      },
      toMutableSet_2hx8bi$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_l1lu5s$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_964n92$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_355nu0$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_bvy38t$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_rjqrz0$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_tmsbgp$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_se6h4y$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_i2lc78$: function ($receiver) {
        var set = new Kotlin.LinkedHashSet($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            set.add_za3rmp$(item);
          }
        }
        return set;
      },
      toMutableSet_h3panj$: function ($receiver) {
        var tmp$0;
        if (Kotlin.isType($receiver, _.kotlin.Collection))
          tmp$0 = _.java.util.LinkedHashSet_xeylzf$($receiver);
        else
          tmp$0 = _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.LinkedHashSet());
        return tmp$0;
      },
      union_qxrbi5$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_2hx8bi$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_34aosx$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_l1lu5s$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_dto1g5$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_964n92$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_ldb6x3$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_355nu0$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_5ya7ho$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_bvy38t$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_t349z9$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_rjqrz0$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_3cdrzs$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_tmsbgp$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_cc6qan$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_se6h4y$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_w98n8l$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_i2lc78$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      union_975xw0$: function ($receiver, other) {
        var set = _.kotlin.toMutableSet_h3panj$($receiver);
        _.kotlin.addAll_wtmfso$(set, other);
        return set;
      },
      f: function (this$toGenerator, nextValue) {
        return function (result) {
          nextValue.v = this$toGenerator(result);
          return result;
        };
      },
      toGenerator_n1mtj3$f: function (nextValue, this$toGenerator) {
        return function () {
          var tmp$0;
          return (tmp$0 = nextValue.v) != null ? _.kotlin.let_j58jph$(tmp$0, _.kotlin.f(this$toGenerator, nextValue)) : null;
        };
      },
      toGenerator_n1mtj3$: function ($receiver, initialValue) {
        var nextValue = {v: initialValue};
        return _.kotlin.toGenerator_n1mtj3$f(nextValue, $receiver);
      },
      to_l1ob02$: function ($receiver, that) {
        return new _.kotlin.Pair($receiver, that);
      },
      run_n8bj3p$: function (f) {
        return f();
      },
      with_rc1ekn$: function (receiver, f) {
        return f.call(receiver);
      },
      let_j58jph$: function ($receiver, f) {
        return f($receiver);
      },
      downTo_9q324c$: function ($receiver, to) {
        return new _.kotlin.ByteProgression($receiver, to, -1);
      },
      downTo_9q3c22$: function ($receiver, to) {
        return new _.kotlin.CharProgression($receiver.toChar(), to, -1);
      },
      downTo_hl85u0$: function ($receiver, to) {
        return new _.kotlin.ShortProgression($receiver, to, -1);
      },
      downTo_y20kcl$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver, to, -1);
      },
      downTo_9q98fk$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver.toLong(), to, -(1).toLong());
      },
      downTo_he5dns$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_tylosb$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_sd8xje$: function ($receiver, to) {
        return new _.kotlin.CharProgression($receiver, to.toChar(), -1);
      },
      downTo_sd97h4$: function ($receiver, to) {
        return new _.kotlin.CharProgression($receiver, to, -1);
      },
      downTo_radrzu$: function ($receiver, to) {
        return new _.kotlin.ShortProgression($receiver.toShort(), to, -1);
      },
      downTo_v5vllf$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver.toInt(), to, -1);
      },
      downTo_sdf3um$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver.toLong(), to, -(1).toLong());
      },
      downTo_r3aztm$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver.toFloat(), to, -1);
      },
      downTo_df7tnx$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver.toDouble(), to, -1.0);
      },
      downTo_9r634a$: function ($receiver, to) {
        return new _.kotlin.ShortProgression($receiver, to, -1);
      },
      downTo_9r5t6k$: function ($receiver, to) {
        return new _.kotlin.ShortProgression($receiver, to.toShort(), -1);
      },
      downTo_i0qws2$: function ($receiver, to) {
        return new _.kotlin.ShortProgression($receiver, to, -1);
      },
      downTo_rt69vj$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver, to, -1);
      },
      downTo_9qzwt2$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver.toLong(), to, -(1).toLong());
      },
      downTo_i7toya$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_2lzxtr$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_2jcion$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver, to, -1);
      },
      downTo_2jc8qx$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver, to.toInt(), -1);
      },
      downTo_7dmh8l$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver, to, -1);
      },
      downTo_rksjo2$: function ($receiver, to) {
        return new Kotlin.NumberProgression($receiver, to, -1);
      },
      downTo_2j6cdf$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver.toLong(), to, -(1).toLong());
      },
      downTo_7kp9et$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_mmqya6$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_jzdo0$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver, to.toLong(), -(1).toLong());
      },
      downTo_jznlq$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver, to.toLong(), -(1).toLong());
      },
      downTo_hgibo4$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver, to.toLong(), -(1).toLong());
      },
      downTo_mw85q1$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver, to.toLong(), -(1).toLong());
      },
      downTo_k5jz8$: function ($receiver, to) {
        return new _.kotlin.LongProgression($receiver, to, -(1).toLong());
      },
      downTo_h9fjhw$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver.toFloat(), to, -1);
      },
      downTo_y0unuv$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver.toDouble(), to, -1.0);
      },
      downTo_kquaae$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_kquk84$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to.toFloat(), -1);
      },
      downTo_433x66$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_jyaijj$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_kr0glm$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to.toFloat(), -1);
      },
      downTo_3w14zy$: function ($receiver, to) {
        return new _.kotlin.FloatProgression($receiver, to, -1);
      },
      downTo_mdktgh$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_stl18b$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_stkral$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to.toDouble(), -1.0);
      },
      downTo_u6e7j3$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_aiyy8i$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_steux3$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to.toDouble(), -1.0);
      },
      downTo_tzbfcv$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      downTo_541hxq$: function ($receiver, to) {
        return new _.kotlin.DoubleProgression($receiver, to, -1.0);
      },
      merge_91t4nf$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_zb2wxp$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_au6o65$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_resd0r$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_6lndoa$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_g5oapj$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_f32dm2$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_oi38kv$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_pn4jvt$: function ($receiver, array, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_tl80ny$: function ($receiver, array, transform) {
        var first = $receiver.iterator();
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_29xg59$: function ($receiver, array, transform) {
        var first = _.kotlin.iterator_gw00vq$($receiver);
        var second = Kotlin.arrayIterator(array);
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_7bg1pg$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_vzyamu$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_r76i9w$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_d5bgvi$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_d6i5gz$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_y6emce$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_k6l5td$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_ksuah4$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_eqb4ua$: function ($receiver, other, transform) {
        var first = Kotlin.arrayIterator($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_hqmbqh$: function ($receiver, other, transform) {
        var first = $receiver.iterator();
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_q03f9y$: function ($receiver, other, transform) {
        var first = _.kotlin.iterator_gw00vq$($receiver);
        var second = other.iterator();
        var list = _.kotlin.arrayListOf_mzrxf8$([]);
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(transform(first.next(), second.next()));
        }
        return list;
      },
      merge_28jw99$: function ($receiver, stream, transform) {
        return new _.kotlin.MergingStream($receiver, stream, transform);
      },
      partition_de9h66$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_50zxbw$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_x245au$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_h5ed0c$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_24jijj$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_im8pe8$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_1xntkt$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_3cuuyy$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_p67zio$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_vqr6wr$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_9fpnal$: function ($receiver, predicate) {
        var first = new Kotlin.ArrayList();
        var second = new Kotlin.ArrayList();
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.add_za3rmp$(element);
            }
             else {
              second.add_za3rmp$(element);
            }
          }
        }
        return new _.kotlin.Pair(first, second);
      },
      partition_t73kuc$: function ($receiver, predicate) {
        var first = new Kotlin.StringBuilder();
        var second = new Kotlin.StringBuilder();
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              first.append(element);
            }
             else {
              second.append(element);
            }
          }
        }
        return new _.kotlin.Pair(first.toString(), second.toString());
      },
      plus_bctcxa$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_2hx8bi$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_w5fksc$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_l1lu5s$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_qsh4fe$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_964n92$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_uy8ycc$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_355nu0$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_kvfz4v$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_bvy38t$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_tev20g$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_rjqrz0$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_wgl9xf$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_tmsbgp$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_v0fo6u$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_se6h4y$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_wshjbk$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_i2lc78$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_fnn263$: function ($receiver, array) {
        var answer = _.kotlin.toArrayList_h3panj$($receiver);
        _.kotlin.addAll_jl7u2r$(answer, array);
        return answer;
      },
      plus_qxrbi5$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_2hx8bi$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_34aosx$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_l1lu5s$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_dto1g5$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_964n92$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_ldb6x3$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_355nu0$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_5ya7ho$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_bvy38t$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_t349z9$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_rjqrz0$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_3cdrzs$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_tmsbgp$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_cc6qan$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_se6h4y$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_w98n8l$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_i2lc78$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_975xw0$: function ($receiver, collection) {
        var answer = _.kotlin.toArrayList_h3panj$($receiver);
        _.kotlin.addAll_wtmfso$(answer, collection);
        return answer;
      },
      plus_1lsq3i$: function ($receiver, collection) {
        return new _.kotlin.Multistream(_.kotlin.streamOf_mzrxf8$([$receiver, _.kotlin.stream_h3panj$(collection)]));
      },
      plus_fdw1a9$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_2hx8bi$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_bsmqrv$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_l1lu5s$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_hgt5d7$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_964n92$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_q79yhh$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_355nu0$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_96a6a3$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_bvy38t$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_thi4tv$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_rjqrz0$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_tb5gmf$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_tmsbgp$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_ssilt7$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_se6h4y$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_x27eb7$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_i2lc78$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_eq3phq$: function ($receiver, element) {
        var answer = _.kotlin.toArrayList_h3panj$($receiver);
        answer.add_za3rmp$(element);
        return answer;
      },
      plus_9ipe0w$: function ($receiver, element) {
        return new _.kotlin.Multistream(_.kotlin.streamOf_mzrxf8$([$receiver, _.kotlin.streamOf_mzrxf8$([element])]));
      },
      plus_y4w53o$: function ($receiver, stream) {
        return new _.kotlin.Multistream(_.kotlin.streamOf_mzrxf8$([$receiver, stream]));
      },
      zip_bctcxa$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_bctcxa$: function ($receiver, array) {
        return _.kotlin.merge_91t4nf$($receiver, array, _.kotlin.zip_bctcxa$f);
      },
      zip_w5fksc$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_w5fksc$: function ($receiver, array) {
        return _.kotlin.merge_zb2wxp$($receiver, array, _.kotlin.zip_w5fksc$f);
      },
      zip_qsh4fe$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_qsh4fe$: function ($receiver, array) {
        return _.kotlin.merge_au6o65$($receiver, array, _.kotlin.zip_qsh4fe$f);
      },
      zip_uy8ycc$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_uy8ycc$: function ($receiver, array) {
        return _.kotlin.merge_resd0r$($receiver, array, _.kotlin.zip_uy8ycc$f);
      },
      zip_kvfz4v$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_kvfz4v$: function ($receiver, array) {
        return _.kotlin.merge_6lndoa$($receiver, array, _.kotlin.zip_kvfz4v$f);
      },
      zip_tev20g$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_tev20g$: function ($receiver, array) {
        return _.kotlin.merge_g5oapj$($receiver, array, _.kotlin.zip_tev20g$f);
      },
      zip_wgl9xf$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_wgl9xf$: function ($receiver, array) {
        return _.kotlin.merge_f32dm2$($receiver, array, _.kotlin.zip_wgl9xf$f);
      },
      zip_v0fo6u$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_v0fo6u$: function ($receiver, array) {
        return _.kotlin.merge_oi38kv$($receiver, array, _.kotlin.zip_v0fo6u$f);
      },
      zip_wshjbk$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_wshjbk$: function ($receiver, array) {
        return _.kotlin.merge_pn4jvt$($receiver, array, _.kotlin.zip_wshjbk$f);
      },
      zip_fnn263$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_fnn263$: function ($receiver, array) {
        return _.kotlin.merge_tl80ny$($receiver, array, _.kotlin.zip_fnn263$f);
      },
      zip_ny9o$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_ny9o$: function ($receiver, array) {
        return _.kotlin.merge_29xg59$($receiver, array, _.kotlin.zip_ny9o$f);
      },
      zip_qxrbi5$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_qxrbi5$: function ($receiver, other) {
        return _.kotlin.merge_7bg1pg$($receiver, other, _.kotlin.zip_qxrbi5$f);
      },
      zip_34aosx$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_34aosx$: function ($receiver, other) {
        return _.kotlin.merge_vzyamu$($receiver, other, _.kotlin.zip_34aosx$f);
      },
      zip_dto1g5$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_dto1g5$: function ($receiver, other) {
        return _.kotlin.merge_r76i9w$($receiver, other, _.kotlin.zip_dto1g5$f);
      },
      zip_ldb6x3$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_ldb6x3$: function ($receiver, other) {
        return _.kotlin.merge_d5bgvi$($receiver, other, _.kotlin.zip_ldb6x3$f);
      },
      zip_5ya7ho$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_5ya7ho$: function ($receiver, other) {
        return _.kotlin.merge_d6i5gz$($receiver, other, _.kotlin.zip_5ya7ho$f);
      },
      zip_t349z9$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_t349z9$: function ($receiver, other) {
        return _.kotlin.merge_y6emce$($receiver, other, _.kotlin.zip_t349z9$f);
      },
      zip_3cdrzs$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_3cdrzs$: function ($receiver, other) {
        return _.kotlin.merge_k6l5td$($receiver, other, _.kotlin.zip_3cdrzs$f);
      },
      zip_cc6qan$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_cc6qan$: function ($receiver, other) {
        return _.kotlin.merge_ksuah4$($receiver, other, _.kotlin.zip_cc6qan$f);
      },
      zip_w98n8l$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_w98n8l$: function ($receiver, other) {
        return _.kotlin.merge_eqb4ua$($receiver, other, _.kotlin.zip_w98n8l$f);
      },
      zip_975xw0$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_975xw0$: function ($receiver, other) {
        return _.kotlin.merge_hqmbqh$($receiver, other, _.kotlin.zip_975xw0$f);
      },
      zip_n9t38v$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_n9t38v$: function ($receiver, other) {
        return _.kotlin.merge_q03f9y$($receiver, other, _.kotlin.zip_n9t38v$f);
      },
      zip_94jgcu$: function ($receiver, other) {
        var first = _.kotlin.iterator_gw00vq$($receiver);
        var second = _.kotlin.iterator_gw00vq$(other);
        var list = new Kotlin.ArrayList();
        while (first.hasNext() && second.hasNext()) {
          list.add_za3rmp$(_.kotlin.to_l1ob02$(first.next(), second.next()));
        }
        return list;
      },
      zip_y4w53o$f: function (t1, t2) {
        return _.kotlin.to_l1ob02$(t1, t2);
      },
      zip_y4w53o$: function ($receiver, stream) {
        return new _.kotlin.MergingStream($receiver, stream, _.kotlin.zip_y4w53o$f);
      },
      contains_fdw1a9$: function ($receiver, element) {
        return _.kotlin.indexOf_fdw1a9$($receiver, element) >= 0;
      },
      contains_bsmqrv$: function ($receiver, element) {
        return _.kotlin.indexOf_bsmqrv$($receiver, element) >= 0;
      },
      contains_hgt5d7$: function ($receiver, element) {
        return _.kotlin.indexOf_hgt5d7$($receiver, element) >= 0;
      },
      contains_q79yhh$: function ($receiver, element) {
        return _.kotlin.indexOf_q79yhh$($receiver, element) >= 0;
      },
      contains_96a6a3$: function ($receiver, element) {
        return _.kotlin.indexOf_96a6a3$($receiver, element) >= 0;
      },
      contains_thi4tv$: function ($receiver, element) {
        return _.kotlin.indexOf_thi4tv$($receiver, element) >= 0;
      },
      contains_tb5gmf$: function ($receiver, element) {
        return _.kotlin.indexOf_tb5gmf$($receiver, element) >= 0;
      },
      contains_ssilt7$: function ($receiver, element) {
        return _.kotlin.indexOf_ssilt7$($receiver, element) >= 0;
      },
      contains_x27eb7$: function ($receiver, element) {
        return _.kotlin.indexOf_x27eb7$($receiver, element) >= 0;
      },
      contains_eq3phq$: function ($receiver, element) {
        if (Kotlin.isType($receiver, _.kotlin.Collection))
          return $receiver.contains_za3rmp$(element);
        return _.kotlin.indexOf_eq3phq$($receiver, element) >= 0;
      },
      contains_9ipe0w$: function ($receiver, element) {
        if (Kotlin.isType($receiver, _.kotlin.Collection))
          return $receiver.contains_za3rmp$(element);
        return _.kotlin.indexOf_9ipe0w$($receiver, element) >= 0;
      },
      elementAt_fdw77o$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_rz0vgy$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_ucmip8$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_cwi0e2$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_3qx2rv$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_2e964m$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_tb5gmf$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_x09c4g$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_7naycm$: function ($receiver, index) {
        return $receiver[index];
      },
      elementAt_eq3vf5$: function ($receiver, index) {
        if (Kotlin.isType($receiver, _.kotlin.List))
          return $receiver.get_za3lpa$(index);
        var iterator = $receiver.iterator();
        var count = 0;
        while (iterator.hasNext()) {
          var element = iterator.next();
          if (index === count++)
            return element;
        }
        throw new RangeError("Collection doesn't contain element at index");
      },
      elementAt_ureun9$: function ($receiver, index) {
        return $receiver.get_za3lpa$(index);
      },
      elementAt_9ip83h$: function ($receiver, index) {
        var iterator = $receiver.iterator();
        var count = 0;
        while (iterator.hasNext()) {
          var element = iterator.next();
          if (index === count++)
            return element;
        }
        throw new RangeError("Collection doesn't contain element at index");
      },
      elementAt_n7iutu$: function ($receiver, index) {
        return $receiver.charAt(index);
      },
      first_2hx8bi$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_l1lu5s$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_964n92$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_355nu0$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_bvy38t$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_rjqrz0$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_tmsbgp$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_se6h4y$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_i2lc78$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[0];
      },
      first_h3panj$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List)) {
            if (_.kotlin.get_size_0($receiver) === 0)
              throw new Kotlin.NoSuchElementException('Collection is empty');
            else
              return $receiver.get_za3lpa$(0);
          }
           else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              throw new Kotlin.NoSuchElementException('Collection is empty');
            return iterator.next();
          }
        }
      },
      first_mtvwn1$: function ($receiver) {
        if (_.kotlin.get_size_0($receiver) === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver.get_za3lpa$(0);
      },
      first_pdnvbz$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List)) {
            if (_.kotlin.get_size_0($receiver) === 0)
              throw new Kotlin.NoSuchElementException('Collection is empty');
            else
              return $receiver.get_za3lpa$(0);
          }
           else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              throw new Kotlin.NoSuchElementException('Collection is empty');
            return iterator.next();
          }
        }
      },
      first_pdl1w0$: function ($receiver) {
        if (_.kotlin.get_size($receiver) === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver.charAt(0);
      },
      first_de9h66$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_50zxbw$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_x245au$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_h5ed0c$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_24jijj$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_im8pe8$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_1xntkt$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_3cuuyy$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_p67zio$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_vqr6wr$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_9fpnal$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      first_t73kuc$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        throw new Kotlin.NoSuchElementException('No element matching predicate was found');
      },
      firstOrNull_2hx8bi$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_l1lu5s$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_964n92$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_355nu0$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_bvy38t$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_rjqrz0$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_tmsbgp$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_se6h4y$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_i2lc78$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[0] : null;
      },
      firstOrNull_h3panj$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List)) {
            if (_.kotlin.get_size_0($receiver) === 0)
              return null;
            else
              return $receiver.get_za3lpa$(0);
          }
           else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              return null;
            return iterator.next();
          }
        }
      },
      firstOrNull_mtvwn1$: function ($receiver) {
        return _.kotlin.get_size_0($receiver) > 0 ? $receiver.get_za3lpa$(0) : null;
      },
      firstOrNull_pdnvbz$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List)) {
            if (_.kotlin.get_size_0($receiver) === 0)
              return null;
            else
              return $receiver.get_za3lpa$(0);
          }
           else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              return null;
            return iterator.next();
          }
        }
      },
      firstOrNull_pdl1w0$: function ($receiver) {
        return _.kotlin.get_size($receiver) > 0 ? $receiver.charAt(0) : null;
      },
      firstOrNull_de9h66$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_50zxbw$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_x245au$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_h5ed0c$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_24jijj$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_im8pe8$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_1xntkt$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_3cuuyy$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_p67zio$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_vqr6wr$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_9fpnal$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      firstOrNull_t73kuc$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return element;
          }
        }
        return null;
      },
      indexOf_fdw1a9$: function ($receiver, element) {
        if (element == null) {
          var tmp$0, tmp$1, tmp$2, tmp$3;
          {
            tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
            for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
              if ($receiver[index] == null) {
                return index;
              }
            }
          }
        }
         else {
          var tmp$4, tmp$5, tmp$6, tmp$7;
          {
            tmp$4 = Kotlin.arrayIndices($receiver), tmp$5 = tmp$4.start, tmp$6 = tmp$4.end, tmp$7 = tmp$4.increment;
            for (var index_0 = tmp$5; index_0 <= tmp$6; index_0 += tmp$7) {
              if (Kotlin.equals(element, $receiver[index_0])) {
                return index_0;
              }
            }
          }
        }
        return -1;
      },
      indexOf_bsmqrv$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (Kotlin.equals(element, $receiver[index])) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_hgt5d7$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_q79yhh$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_96a6a3$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_thi4tv$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_tb5gmf$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_ssilt7$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_x27eb7$: function ($receiver, element) {
        var tmp$0, tmp$1, tmp$2, tmp$3;
        {
          tmp$0 = Kotlin.arrayIndices($receiver), tmp$1 = tmp$0.start, tmp$2 = tmp$0.end, tmp$3 = tmp$0.increment;
          for (var index = tmp$1; index <= tmp$2; index += tmp$3) {
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      indexOf_eq3phq$: function ($receiver, element) {
        var index = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (Kotlin.equals(element, item))
              return index;
            index++;
          }
        }
        return -1;
      },
      indexOf_9ipe0w$: function ($receiver, element) {
        var index = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (Kotlin.equals(element, item))
              return index;
            index++;
          }
        }
        return -1;
      },
      last_2hx8bi$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_l1lu5s$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_964n92$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_355nu0$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_bvy38t$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_rjqrz0$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_tmsbgp$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_se6h4y$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_i2lc78$: function ($receiver) {
        if ($receiver.length === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver[$receiver.length - 1];
      },
      last_h3panj$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List)) {
            if (_.kotlin.get_size_0($receiver) === 0)
              throw new Kotlin.NoSuchElementException('Collection is empty');
            else
              return $receiver.get_za3lpa$(_.kotlin.get_size_0($receiver) - 1);
          }
           else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              throw new Kotlin.NoSuchElementException('Collection is empty');
            var last = iterator.next();
            while (iterator.hasNext())
              last = iterator.next();
            return last;
          }
        }
      },
      last_mtvwn1$: function ($receiver) {
        if (_.kotlin.get_size_0($receiver) === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver.get_za3lpa$(_.kotlin.get_size_0($receiver) - 1);
      },
      last_pdnvbz$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List)) {
            if (_.kotlin.get_size_0($receiver) === 0)
              throw new Kotlin.NoSuchElementException('Collection is empty');
            else
              return $receiver.get_za3lpa$(_.kotlin.get_size_0($receiver) - 1);
          }
           else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              throw new Kotlin.NoSuchElementException('Collection is empty');
            var last = iterator.next();
            while (iterator.hasNext())
              last = iterator.next();
            return last;
          }
        }
      },
      last_pdl1w0$: function ($receiver) {
        if (_.kotlin.get_size($receiver) === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        return $receiver.charAt(_.kotlin.get_size($receiver) - 1);
      },
      last_de9h66$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last;
      },
      last_50zxbw$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_x245au$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_h5ed0c$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_24jijj$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_im8pe8$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_1xntkt$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_3cuuyy$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_p67zio$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      last_vqr6wr$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last;
      },
      last_9fpnal$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last;
      },
      last_t73kuc$: function ($receiver, predicate) {
        var last = null;
        var found = false;
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return last != null ? last : Kotlin.throwNPE();
      },
      lastIndexOf_fdw1a9$: function ($receiver, element) {
        if (element == null) {
          {
            var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
            while (tmp$0.hasNext()) {
              var index = tmp$0.next();
              if ($receiver[index] == null) {
                return index;
              }
            }
          }
        }
         else {
          {
            var tmp$1 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
            while (tmp$1.hasNext()) {
              var index_0 = tmp$1.next();
              if (Kotlin.equals(element, $receiver[index_0])) {
                return index_0;
              }
            }
          }
        }
        return -1;
      },
      lastIndexOf_bsmqrv$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (Kotlin.equals(element, $receiver[index])) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_hgt5d7$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_q79yhh$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_96a6a3$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_thi4tv$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_tb5gmf$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_ssilt7$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_x27eb7$: function ($receiver, element) {
        {
          var tmp$0 = _.kotlin.reverse_h3panj$(Kotlin.arrayIndices($receiver)).iterator();
          while (tmp$0.hasNext()) {
            var index = tmp$0.next();
            if (element === $receiver[index]) {
              return index;
            }
          }
        }
        return -1;
      },
      lastIndexOf_eq3phq$: function ($receiver, element) {
        var lastIndex = -1;
        var index = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (Kotlin.equals(element, item))
              lastIndex = index;
            index++;
          }
        }
        return lastIndex;
      },
      lastIndexOf_ureopu$: function ($receiver, element) {
        if (element == null) {
          {
            var tmp$0 = _.kotlin.reverse_h3panj$(_.kotlin.get_indices($receiver)).iterator();
            while (tmp$0.hasNext()) {
              var index = tmp$0.next();
              if ($receiver.get_za3lpa$(index) == null) {
                return index;
              }
            }
          }
        }
         else {
          {
            var tmp$1 = _.kotlin.reverse_h3panj$(_.kotlin.get_indices($receiver)).iterator();
            while (tmp$1.hasNext()) {
              var index_0 = tmp$1.next();
              if (Kotlin.equals(element, $receiver.get_za3lpa$(index_0))) {
                return index_0;
              }
            }
          }
        }
        return -1;
      },
      lastIndexOf_9ipe0w$: function ($receiver, element) {
        var lastIndex = -1;
        var index = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            if (Kotlin.equals(element, item))
              lastIndex = index;
            index++;
          }
        }
        return lastIndex;
      },
      lastOrNull_2hx8bi$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_l1lu5s$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_964n92$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_355nu0$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_bvy38t$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_rjqrz0$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_tmsbgp$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_se6h4y$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_i2lc78$: function ($receiver) {
        return $receiver.length > 0 ? $receiver[$receiver.length - 1] : null;
      },
      lastOrNull_h3panj$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List))
            return _.kotlin.get_size_0($receiver) > 0 ? $receiver.get_za3lpa$(_.kotlin.get_size_0($receiver) - 1) : null;
          else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              return null;
            var last = iterator.next();
            while (iterator.hasNext())
              last = iterator.next();
            return last;
          }
        }
      },
      lastOrNull_mtvwn1$: function ($receiver) {
        return _.kotlin.get_size_0($receiver) > 0 ? $receiver.get_za3lpa$(_.kotlin.get_size_0($receiver) - 1) : null;
      },
      lastOrNull_pdnvbz$: function ($receiver) {
        {
          if (Kotlin.isType($receiver, _.kotlin.List))
            return _.kotlin.get_size_0($receiver) > 0 ? $receiver.get_za3lpa$(_.kotlin.get_size_0($receiver) - 1) : null;
          else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              return null;
            var last = iterator.next();
            while (iterator.hasNext())
              last = iterator.next();
            return last;
          }
        }
      },
      lastOrNull_pdl1w0$: function ($receiver) {
        return _.kotlin.get_size($receiver) > 0 ? $receiver.charAt(_.kotlin.get_size($receiver) - 1) : null;
      },
      lastOrNull_de9h66$: function ($receiver, predicate) {
        var last = null;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_50zxbw$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_x245au$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_h5ed0c$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_24jijj$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_im8pe8$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_1xntkt$: function ($receiver, predicate) {
        var last = null;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_3cuuyy$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_p67zio$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_vqr6wr$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_9fpnal$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      lastOrNull_t73kuc$: function ($receiver, predicate) {
        var last = null;
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              last = element;
            }
          }
        }
        return last;
      },
      single_2hx8bi$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_l1lu5s$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_964n92$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_355nu0$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_bvy38t$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_rjqrz0$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_tmsbgp$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_se6h4y$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_i2lc78$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_h3panj$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size_0($receiver), tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver.get_za3lpa$(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        {
          if (Kotlin.isType($receiver, _.kotlin.List))
            return tmp$1;
          else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              throw new Kotlin.NoSuchElementException('Collection is empty');
            var single = iterator.next();
            if (iterator.hasNext())
              throw new Kotlin.IllegalArgumentException('Collection has more than one element');
            return single;
          }
        }
      },
      single_mtvwn1$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size_0($receiver), tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver.get_za3lpa$(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_pdnvbz$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size_0($receiver), tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver.get_za3lpa$(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        {
          if (Kotlin.isType($receiver, _.kotlin.List))
            return tmp$1;
          else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              throw new Kotlin.NoSuchElementException('Collection is empty');
            var single = iterator.next();
            if (iterator.hasNext())
              throw new Kotlin.IllegalArgumentException('Collection has more than one element');
            return single;
          }
        }
      },
      single_pdl1w0$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size($receiver), tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver.charAt(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      single_de9h66$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single;
      },
      single_50zxbw$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_x245au$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_h5ed0c$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_24jijj$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_im8pe8$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_1xntkt$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_3cuuyy$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_p67zio$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      single_vqr6wr$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single;
      },
      single_9fpnal$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single;
      },
      single_t73kuc$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          throw new Kotlin.NoSuchElementException("Collection doesn't contain any element matching predicate");
        return single != null ? single : Kotlin.throwNPE();
      },
      singleOrNull_2hx8bi$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_l1lu5s$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_964n92$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_355nu0$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_bvy38t$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_rjqrz0$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_tmsbgp$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_se6h4y$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_i2lc78$: function ($receiver) {
        var tmp$0 = $receiver.length, tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver[0];
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_h3panj$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size_0($receiver), tmp$1;
        if (tmp$0 === 0)
          tmp$1 = null;
        else if (tmp$0 === 1)
          tmp$1 = $receiver.get_za3lpa$(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        {
          if (Kotlin.isType($receiver, _.kotlin.List))
            return tmp$1;
          else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              return null;
            var single = iterator.next();
            if (iterator.hasNext())
              throw new Kotlin.IllegalArgumentException('Collection has more than one element');
            return single;
          }
        }
      },
      singleOrNull_mtvwn1$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size_0($receiver), tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver.get_za3lpa$(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_pdnvbz$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size_0($receiver), tmp$1;
        if (tmp$0 === 0)
          tmp$1 = null;
        else if (tmp$0 === 1)
          tmp$1 = $receiver.get_za3lpa$(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        {
          if (Kotlin.isType($receiver, _.kotlin.List))
            return tmp$1;
          else {
            var iterator = $receiver.iterator();
            if (!iterator.hasNext())
              return null;
            var single = iterator.next();
            if (iterator.hasNext())
              throw new Kotlin.IllegalArgumentException('Collection has more than one element');
            return single;
          }
        }
      },
      singleOrNull_pdl1w0$: function ($receiver) {
        var tmp$0 = _.kotlin.get_size($receiver), tmp$1;
        if (tmp$0 === 0)
          throw new Kotlin.NoSuchElementException('Collection is empty');
        else if (tmp$0 === 1)
          tmp$1 = $receiver.charAt(0);
        else
          throw new Kotlin.IllegalArgumentException('Collection has more than one element');
        return tmp$1;
      },
      singleOrNull_de9h66$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_50zxbw$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_x245au$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_h5ed0c$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_24jijj$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_im8pe8$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_1xntkt$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_3cuuyy$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_p67zio$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_vqr6wr$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_9fpnal$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      singleOrNull_t73kuc$: function ($receiver, predicate) {
        var single = null;
        var found = false;
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element)) {
              if (found)
                throw new Kotlin.IllegalArgumentException('Collection contains more than one matching element');
              single = element;
              found = true;
            }
          }
        }
        if (!found)
          return null;
        return single;
      },
      times_97ovpz$: function ($receiver, body) {
        var count = $receiver;
        while (count > 0) {
          body();
          count--;
        }
      },
      require_eltq40$: function (value, message) {
        if (message === void 0)
          message = 'Failed requirement';
        if (!value) {
          throw new Kotlin.IllegalArgumentException(message.toString());
        }
      },
      require_zgzqbg$: function (value, lazyMessage) {
        if (!value) {
          var message = lazyMessage();
          throw new Kotlin.IllegalArgumentException(message.toString());
        }
      },
      requireNotNull_wn2jw4$: function (value, message) {
        if (message === void 0)
          message = 'Required value was null';
        if (value == null) {
          throw new Kotlin.IllegalArgumentException(message.toString());
        }
         else {
          return value;
        }
      },
      check_eltq40$: function (value, message) {
        if (message === void 0)
          message = 'Check failed';
        if (!value) {
          throw new Kotlin.IllegalStateException(message.toString());
        }
      },
      check_zgzqbg$: function (value, lazyMessage) {
        if (!value) {
          var message = lazyMessage();
          throw new Kotlin.IllegalStateException(message.toString());
        }
      },
      checkNotNull_hwpqgh$: function (value, message) {
        if (message === void 0)
          message = 'Required value was null';
        if (value == null) {
          throw new Kotlin.IllegalStateException(message);
        }
         else {
          return value;
        }
      },
      error_61zpoe$: function (message) {
        throw new Kotlin.RuntimeException(message);
      },
      toArrayList_2hx8bi$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_l1lu5s$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_964n92$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_355nu0$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_bvy38t$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_rjqrz0$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_tmsbgp$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_se6h4y$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_i2lc78$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toArrayList_h3panj$: function ($receiver) {
        return _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.ArrayList());
      },
      toArrayList_pdnvbz$: function ($receiver) {
        return _.kotlin.toCollection_791eew$($receiver, new Kotlin.ArrayList());
      },
      toArrayList_pdl1w0$: function ($receiver) {
        return _.kotlin.toCollection_j1020p$($receiver, new Kotlin.ArrayList());
      },
      toCollection_xpmo5j$: function ($receiver, collection) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_aaeveh$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_d1lgh$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_ba3pld$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_enu0mi$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_gk003p$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_mglpxq$: function ($receiver, collection) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_vus1ud$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_5k8uqj$: function ($receiver, collection) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_4jj70a$: function ($receiver, collection) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_791eew$: function ($receiver, collection) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toCollection_j1020p$: function ($receiver, collection) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            collection.add_za3rmp$(item);
          }
        }
        return collection;
      },
      toHashSet_2hx8bi$: function ($receiver) {
        return _.kotlin.toCollection_xpmo5j$($receiver, new Kotlin.ComplexHashSet());
      },
      toHashSet_l1lu5s$: function ($receiver) {
        return _.kotlin.toCollection_aaeveh$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_964n92$: function ($receiver) {
        return _.kotlin.toCollection_d1lgh$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_355nu0$: function ($receiver) {
        return _.kotlin.toCollection_ba3pld$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_bvy38t$: function ($receiver) {
        return _.kotlin.toCollection_enu0mi$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_rjqrz0$: function ($receiver) {
        return _.kotlin.toCollection_gk003p$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_tmsbgp$: function ($receiver) {
        return _.kotlin.toCollection_mglpxq$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_se6h4y$: function ($receiver) {
        return _.kotlin.toCollection_vus1ud$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_i2lc78$: function ($receiver) {
        return _.kotlin.toCollection_5k8uqj$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toHashSet_h3panj$: function ($receiver) {
        return _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.ComplexHashSet());
      },
      toHashSet_pdnvbz$: function ($receiver) {
        return _.kotlin.toCollection_791eew$($receiver, new Kotlin.ComplexHashSet());
      },
      toHashSet_pdl1w0$: function ($receiver) {
        return _.kotlin.toCollection_j1020p$($receiver, new Kotlin.PrimitiveHashSet());
      },
      toLinkedList_2hx8bi$: function ($receiver) {
        return _.kotlin.toCollection_xpmo5j$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_l1lu5s$: function ($receiver) {
        return _.kotlin.toCollection_aaeveh$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_964n92$: function ($receiver) {
        return _.kotlin.toCollection_d1lgh$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_355nu0$: function ($receiver) {
        return _.kotlin.toCollection_ba3pld$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_bvy38t$: function ($receiver) {
        return _.kotlin.toCollection_enu0mi$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_rjqrz0$: function ($receiver) {
        return _.kotlin.toCollection_gk003p$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_tmsbgp$: function ($receiver) {
        return _.kotlin.toCollection_mglpxq$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_se6h4y$: function ($receiver) {
        return _.kotlin.toCollection_vus1ud$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_i2lc78$: function ($receiver) {
        return _.kotlin.toCollection_5k8uqj$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_h3panj$: function ($receiver) {
        return _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_pdnvbz$: function ($receiver) {
        return _.kotlin.toCollection_791eew$($receiver, new Kotlin.LinkedList());
      },
      toLinkedList_pdl1w0$: function ($receiver) {
        return _.kotlin.toCollection_j1020p$($receiver, new Kotlin.LinkedList());
      },
      toList_s8ckw1$: function ($receiver) {
        var result = new Kotlin.ArrayList(_.kotlin.get_size_1($receiver));
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            result.add_za3rmp$(item);
          }
        }
        return result;
      },
      toList_2hx8bi$: function ($receiver) {
        return _.kotlin.toCollection_xpmo5j$($receiver, new Kotlin.ArrayList());
      },
      toList_l1lu5s$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_964n92$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_355nu0$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_bvy38t$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_rjqrz0$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_tmsbgp$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_se6h4y$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_i2lc78$: function ($receiver) {
        var list = new Kotlin.ArrayList($receiver.length);
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var item = tmp$0.next();
            list.add_za3rmp$(item);
          }
        }
        return list;
      },
      toList_h3panj$: function ($receiver) {
        return _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.ArrayList());
      },
      toList_pdnvbz$: function ($receiver) {
        return _.kotlin.toCollection_791eew$($receiver, new Kotlin.ArrayList());
      },
      toList_pdl1w0$: function ($receiver) {
        return _.kotlin.toCollection_j1020p$($receiver, new Kotlin.ArrayList());
      },
      toSet_2hx8bi$: function ($receiver) {
        return _.kotlin.toCollection_xpmo5j$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_l1lu5s$: function ($receiver) {
        return _.kotlin.toCollection_aaeveh$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_964n92$: function ($receiver) {
        return _.kotlin.toCollection_d1lgh$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_355nu0$: function ($receiver) {
        return _.kotlin.toCollection_ba3pld$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_bvy38t$: function ($receiver) {
        return _.kotlin.toCollection_enu0mi$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_rjqrz0$: function ($receiver) {
        return _.kotlin.toCollection_gk003p$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_tmsbgp$: function ($receiver) {
        return _.kotlin.toCollection_mglpxq$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_se6h4y$: function ($receiver) {
        return _.kotlin.toCollection_vus1ud$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_i2lc78$: function ($receiver) {
        return _.kotlin.toCollection_5k8uqj$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_h3panj$: function ($receiver) {
        return _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_pdnvbz$: function ($receiver) {
        return _.kotlin.toCollection_791eew$($receiver, new Kotlin.LinkedHashSet());
      },
      toSet_pdl1w0$: function ($receiver) {
        return _.kotlin.toCollection_j1020p$($receiver, new Kotlin.LinkedHashSet());
      },
      toSortedSet_2hx8bi$: function ($receiver) {
        return _.kotlin.toCollection_xpmo5j$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_l1lu5s$: function ($receiver) {
        return _.kotlin.toCollection_aaeveh$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_964n92$: function ($receiver) {
        return _.kotlin.toCollection_d1lgh$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_355nu0$: function ($receiver) {
        return _.kotlin.toCollection_ba3pld$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_bvy38t$: function ($receiver) {
        return _.kotlin.toCollection_enu0mi$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_rjqrz0$: function ($receiver) {
        return _.kotlin.toCollection_gk003p$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_tmsbgp$: function ($receiver) {
        return _.kotlin.toCollection_mglpxq$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_se6h4y$: function ($receiver) {
        return _.kotlin.toCollection_vus1ud$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_i2lc78$: function ($receiver) {
        return _.kotlin.toCollection_5k8uqj$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_h3panj$: function ($receiver) {
        return _.kotlin.toCollection_4jj70a$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_pdnvbz$: function ($receiver) {
        return _.kotlin.toCollection_791eew$($receiver, new Kotlin.TreeSet());
      },
      toSortedSet_pdl1w0$: function ($receiver) {
        return _.kotlin.toCollection_j1020p$($receiver, new Kotlin.TreeSet());
      },
      appendString_vt6b28$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_vt6b28$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_v2fgr2$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_v2fgr2$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_ds6lso$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_ds6lso$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_2b34ga$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_2b34ga$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_kjxfqn$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_kjxfqn$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_bt92bi$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_bt92bi$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_xc3j4b$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_xc3j4b$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_2bqqsc$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_2bqqsc$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_ex638e$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_ex638e$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_4ybsr7$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_4ybsr7$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      appendString_tsa3bz$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        _.kotlin.joinTo_tsa3bz$($receiver, buffer, separator, prefix, postfix, limit, truncated);
      },
      joinTo_vt6b28$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element == null ? 'null' : element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_v2fgr2$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_ds6lso$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_2b34ga$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_kjxfqn$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_bt92bi$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_xc3j4b$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_2bqqsc$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_ex638e$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_4ybsr7$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element == null ? 'null' : element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinTo_tsa3bz$: function ($receiver, buffer, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        buffer.append(prefix);
        var count = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (++count > 1)
              buffer.append(separator);
            if (limit < 0 || count <= limit) {
              var text = element == null ? 'null' : element.toString();
              buffer.append(text);
            }
             else
              break;
          }
        }
        if (limit >= 0 && count > limit)
          buffer.append(truncated);
        buffer.append(postfix);
        return buffer;
      },
      joinToString_7s66u8$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_vt6b28$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_cmivou$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_v2fgr2$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_7gqm6g$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_ds6lso$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_5g9kba$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_2b34ga$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_fwx41b$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_kjxfqn$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_sfhf6m$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_bt92bi$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_6b4cej$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_xc3j4b$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_s6c98k$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_2bqqsc$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_pukide$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_ex638e$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_mc2pv1$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_4ybsr7$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      joinToString_tpghi9$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinTo_tsa3bz$($receiver, new Kotlin.StringBuilder(), separator, prefix, postfix, limit, truncated).toString();
      },
      makeString_7s66u8$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_7s66u8$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_cmivou$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_cmivou$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_7gqm6g$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_7gqm6g$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_5g9kba$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_5g9kba$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_fwx41b$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_fwx41b$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_sfhf6m$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_sfhf6m$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_6b4cej$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_6b4cej$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_s6c98k$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_s6c98k$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_pukide$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_pukide$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_mc2pv1$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_mc2pv1$($receiver, separator, prefix, postfix, limit, truncated);
      },
      makeString_tpghi9$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_tpghi9$($receiver, separator, prefix, postfix, limit, truncated);
      },
      trim_94jgcu$: function ($receiver, text) {
        return _.kotlin.trimTrailing_94jgcu$(_.kotlin.trimLeading_94jgcu$($receiver, text), text);
      },
      trim_ex0kps$: function ($receiver, prefix, postfix) {
        return _.kotlin.trimTrailing_94jgcu$(_.kotlin.trimLeading_94jgcu$($receiver, prefix), postfix);
      },
      trimLeading_94jgcu$: function ($receiver, prefix) {
        var answer = $receiver;
        if (answer.startsWith(prefix)) {
          answer = answer.substring(prefix.length);
        }
        return answer;
      },
      trimTrailing_94jgcu$: function ($receiver, postfix) {
        var answer = $receiver;
        if (answer.endsWith(postfix)) {
          answer = answer.substring(0, $receiver.length - postfix.length);
        }
        return answer;
      },
      isNotEmpty_pdl1w0$: function ($receiver) {
        return $receiver != null && $receiver.length > 0;
      },
      iterator_gw00vq$: function ($receiver) {
        return Kotlin.createObject(function () {
          return [_.kotlin.CharIterator];
        }, function $fun() {
          $fun.baseInitializer.call(this);
          this.index_xuly00$ = 0;
        }, {
          nextChar: function () {
            return $receiver.get_za3lpa$(this.index_xuly00$++);
          },
          hasNext: function () {
            return this.index_xuly00$ < $receiver.length;
          }
        });
      },
      orEmpty_pdl1w0$: function ($receiver) {
        return $receiver != null ? $receiver : '';
      },
      get_size_2: {value: function ($receiver) {
        return $receiver.length;
      }},
      get_size: {value: function ($receiver) {
        return $receiver.length;
      }},
      get_indices_1: {value: function ($receiver) {
        return new Kotlin.NumberRange(0, $receiver.length - 1);
      }},
      slice_bchp91$: function ($receiver, indices) {
        var sb = new Kotlin.StringBuilder();
        {
          var tmp$0 = indices.iterator();
          while (tmp$0.hasNext()) {
            var i = tmp$0.next();
            sb.append($receiver.get_za3lpa$(i));
          }
        }
        return sb.toString();
      },
      substring_cumll7$: function ($receiver, range) {
        return $receiver.substring(range.start, range.end + 1);
      },
      join_mc2pv1$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_mc2pv1$($receiver, separator, prefix, postfix, limit, truncated);
      },
      join_7s66u8$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_7s66u8$($receiver, separator, prefix, postfix, limit, truncated);
      },
      join_tpghi9$: function ($receiver, separator, prefix, postfix, limit, truncated) {
        if (separator === void 0)
          separator = ', ';
        if (prefix === void 0)
          prefix = '';
        if (postfix === void 0)
          postfix = '';
        if (limit === void 0)
          limit = -1;
        if (truncated === void 0)
          truncated = '...';
        return _.kotlin.joinToString_tpghi9$($receiver, separator, prefix, postfix, limit, truncated);
      },
      substringBefore_960177$: function ($receiver, delimiter) {
        var index = _.js.indexOf_960177$($receiver, delimiter);
        return index === -1 ? $receiver : $receiver.substring(0, index);
      },
      substringBefore_94jgcu$: function ($receiver, delimiter) {
        var index = $receiver.indexOf(delimiter);
        return index === -1 ? $receiver : $receiver.substring(0, index);
      },
      substringAfter_960177$: function ($receiver, delimiter) {
        var index = _.js.indexOf_960177$($receiver, delimiter);
        return index === -1 ? '' : $receiver.substring(index + 1, $receiver.length);
      },
      substringAfter_94jgcu$: function ($receiver, delimiter) {
        var index = $receiver.indexOf(delimiter);
        return index === -1 ? '' : $receiver.substring(index + delimiter.length, $receiver.length);
      },
      substringBeforeLast_960177$: function ($receiver, delimiter) {
        var index = _.js.lastIndexOf_960177$($receiver, delimiter);
        return index === -1 ? $receiver : $receiver.substring(0, index);
      },
      substringBeforeLast_94jgcu$: function ($receiver, delimiter) {
        var index = $receiver.lastIndexOf(delimiter);
        return index === -1 ? $receiver : $receiver.substring(0, index);
      },
      substringAfterLast_960177$: function ($receiver, delimiter) {
        var index = _.js.lastIndexOf_960177$($receiver, delimiter);
        return index === -1 ? '' : $receiver.substring(index + 1, $receiver.length);
      },
      substringAfterLast_94jgcu$: function ($receiver, delimiter) {
        var index = $receiver.lastIndexOf(delimiter);
        return index === -1 ? '' : $receiver.substring(index + delimiter.length, $receiver.length);
      },
      replaceRange_d9884y$: function ($receiver, firstIndex, lastIndex, replacement) {
        if (lastIndex < firstIndex)
          throw new RangeError('Last index (' + lastIndex + ') is less than first index (' + firstIndex + ')');
        var sb = new Kotlin.StringBuilder();
        sb.append($receiver, 0, firstIndex);
        sb.append(replacement);
        sb.append($receiver, lastIndex, $receiver.length);
        return sb.toString();
      },
      replaceRange_rxpzkz$: function ($receiver, range, replacement) {
        if (range.end < range.start)
          throw new RangeError('Last index (' + range.start + ') is less than first index (' + range.end + ')');
        var sb = new Kotlin.StringBuilder();
        sb.append($receiver, 0, range.start);
        sb.append(replacement);
        sb.append($receiver, range.end, $receiver.length);
        return sb.toString();
      },
      replaceBefore_7uhrl1$: function ($receiver, delimiter, replacement) {
        var index = _.js.indexOf_960177$($receiver, delimiter);
        return index === -1 ? replacement : _.kotlin.replaceRange_d9884y$($receiver, 0, index, replacement);
      },
      replaceBefore_ex0kps$: function ($receiver, delimiter, replacement) {
        var index = $receiver.indexOf(delimiter);
        return index === -1 ? replacement : _.kotlin.replaceRange_d9884y$($receiver, 0, index, replacement);
      },
      replaceAfter_7uhrl1$: function ($receiver, delimiter, replacement) {
        var index = _.js.indexOf_960177$($receiver, delimiter);
        return index === -1 ? $receiver : _.kotlin.replaceRange_d9884y$($receiver, index + 1, $receiver.length, replacement);
      },
      replaceAfter_ex0kps$: function ($receiver, delimiter, replacement) {
        var index = $receiver.indexOf(delimiter);
        return index === -1 ? $receiver : _.kotlin.replaceRange_d9884y$($receiver, index + delimiter.length, $receiver.length, replacement);
      },
      replaceAfterLast_ex0kps$: function ($receiver, delimiter, replacement) {
        var index = $receiver.lastIndexOf(delimiter);
        return index === -1 ? $receiver : _.kotlin.replaceRange_d9884y$($receiver, index + delimiter.length, $receiver.length, replacement);
      },
      replaceAfterLast_7uhrl1$: function ($receiver, delimiter, replacement) {
        var index = _.js.lastIndexOf_960177$($receiver, delimiter);
        return index === -1 ? $receiver : _.kotlin.replaceRange_d9884y$($receiver, index + 1, $receiver.length, replacement);
      },
      replaceBeforeLast_7uhrl1$: function ($receiver, delimiter, replacement) {
        var index = _.js.lastIndexOf_960177$($receiver, delimiter);
        return index === -1 ? replacement : _.kotlin.replaceRange_d9884y$($receiver, 0, index, replacement);
      },
      replaceBeforeLast_ex0kps$: function ($receiver, delimiter, replacement) {
        var index = $receiver.lastIndexOf(delimiter);
        return index === -1 ? replacement : _.kotlin.replaceRange_d9884y$($receiver, 0, index, replacement);
      },
      StringBuilder_lxq41y$: function (body) {
        var sb = new Kotlin.StringBuilder();
        body.call(sb);
        return sb;
      },
      append_d4iu1a$: function ($receiver, value) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = value, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            $receiver.append(item);
          }
        }
        return $receiver;
      },
      append_ya45mk$: function ($receiver, value) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = value, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            $receiver.append(item);
          }
        }
        return $receiver;
      },
      append_ya45mk$_0: function ($receiver, value) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = value, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var item = tmp$0[tmp$2];
            $receiver.append(item);
          }
        }
        return $receiver;
      },
      sum_h3panj$: function ($receiver) {
        var iterator = $receiver.iterator();
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_h3panj$_0: function ($receiver) {
        var iterator = $receiver.iterator();
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_h3panj$_1: function ($receiver) {
        var iterator = $receiver.iterator();
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_h3panj$_2: function ($receiver) {
        var iterator = $receiver.iterator();
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_2hx8bi$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_tmsbgp$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_2hx8bi$_0: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_se6h4y$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_2hx8bi$_1: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_964n92$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_2hx8bi$_2: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_i2lc78$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_2hx8bi$_3: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_bvy38t$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_2hx8bi$_4: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      sum_rjqrz0$: function ($receiver) {
        var iterator = Kotlin.arrayIterator($receiver);
        var sum = 0.0;
        while (iterator.hasNext()) {
          sum += iterator.next();
        }
        return sum;
      },
      reverse_2hx8bi$: function ($receiver) {
        var list = _.kotlin.toArrayList_2hx8bi$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_l1lu5s$: function ($receiver) {
        var list = _.kotlin.toArrayList_l1lu5s$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_964n92$: function ($receiver) {
        var list = _.kotlin.toArrayList_964n92$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_355nu0$: function ($receiver) {
        var list = _.kotlin.toArrayList_355nu0$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_bvy38t$: function ($receiver) {
        var list = _.kotlin.toArrayList_bvy38t$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_rjqrz0$: function ($receiver) {
        var list = _.kotlin.toArrayList_rjqrz0$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_tmsbgp$: function ($receiver) {
        var list = _.kotlin.toArrayList_tmsbgp$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_se6h4y$: function ($receiver) {
        var list = _.kotlin.toArrayList_se6h4y$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_i2lc78$: function ($receiver) {
        var list = _.kotlin.toArrayList_i2lc78$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_h3panj$: function ($receiver) {
        var list = _.kotlin.toArrayList_h3panj$($receiver);
        Kotlin.reverse(list);
        return list;
      },
      reverse_pdl1w0$: function ($receiver) {
        return (new Kotlin.StringBuilder()).append($receiver).reverse().toString();
      },
      sort_h3panj$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      sortBy_lykrt4$: function ($receiver, comparator) {
        var sortedList = _.kotlin.toArrayList_2hx8bi$($receiver);
        Kotlin.collectionsSort(sortedList, comparator);
        return sortedList;
      },
      sortBy_yknd17$: function ($receiver, comparator) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        Kotlin.collectionsSort(sortedList, comparator);
        return sortedList;
      },
      sortBy_de9h66$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      sortBy_de9h66$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_2hx8bi$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.sortBy_de9h66$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      sortBy_vqr6wr$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      sortBy_vqr6wr$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.sortBy_vqr6wr$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      sortDescending_h3panj$f: function (x, y) {
        return -x.compareTo_za3rmp$(y);
      },
      sortDescending_h3panj$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.sortDescending_h3panj$f);
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      sortDescendingBy_de9h66$f: function (order) {
        return function (x, y) {
          return -order(x).compareTo_za3rmp$(order(y));
        };
      },
      sortDescendingBy_de9h66$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_2hx8bi$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.sortDescendingBy_de9h66$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      sortDescendingBy_vqr6wr$f: function (order) {
        return function (x, y) {
          return -order(x).compareTo_za3rmp$(order(y));
        };
      },
      sortDescendingBy_vqr6wr$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.sortDescendingBy_vqr6wr$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedList_2hx8bi$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_2hx8bi$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_l1lu5s$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_l1lu5s$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_964n92$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_964n92$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_355nu0$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_355nu0$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_bvy38t$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_bvy38t$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_rjqrz0$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_rjqrz0$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_tmsbgp$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_tmsbgp$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_se6h4y$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_se6h4y$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_i2lc78$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_i2lc78$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_h3panj$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedList_pdnvbz$: function ($receiver) {
        var sortedList = _.kotlin.toArrayList_pdnvbz$($receiver);
        Kotlin.collectionsSort(sortedList);
        return sortedList;
      },
      toSortedListBy_de9h66$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_de9h66$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_2hx8bi$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_de9h66$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_50zxbw$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_50zxbw$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_l1lu5s$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_50zxbw$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_x245au$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_x245au$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_964n92$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_x245au$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_h5ed0c$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_h5ed0c$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_355nu0$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_h5ed0c$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_24jijj$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_24jijj$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_bvy38t$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_24jijj$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_im8pe8$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_im8pe8$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_rjqrz0$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_im8pe8$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_1xntkt$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_1xntkt$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_tmsbgp$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_1xntkt$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_3cuuyy$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_3cuuyy$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_se6h4y$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_3cuuyy$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_p67zio$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_p67zio$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_i2lc78$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_p67zio$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_vqr6wr$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_vqr6wr$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_h3panj$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_vqr6wr$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      toSortedListBy_9fpnal$f: function (order) {
        return function (x, y) {
          return order(x).compareTo_za3rmp$(order(y));
        };
      },
      toSortedListBy_9fpnal$: function ($receiver, order) {
        var sortedList = _.kotlin.toArrayList_pdnvbz$($receiver);
        var sortBy = Kotlin.comparator(_.kotlin.toSortedListBy_9fpnal$f(order));
        Kotlin.collectionsSort(sortedList, sortBy);
        return sortedList;
      },
      isEmpty_2hx8bi$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_l1lu5s$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_964n92$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_355nu0$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_bvy38t$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_rjqrz0$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_tmsbgp$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_se6h4y$: function ($receiver) {
        return $receiver.length === 0;
      },
      isEmpty_i2lc78$: function ($receiver) {
        return $receiver.length === 0;
      },
      isNotEmpty_2hx8bi$: function ($receiver) {
        return !_.kotlin.isEmpty_2hx8bi$($receiver);
      },
      isNotEmpty_l1lu5s$: function ($receiver) {
        return !_.kotlin.isEmpty_l1lu5s$($receiver);
      },
      isNotEmpty_964n92$: function ($receiver) {
        return !_.kotlin.isEmpty_964n92$($receiver);
      },
      isNotEmpty_355nu0$: function ($receiver) {
        return !_.kotlin.isEmpty_355nu0$($receiver);
      },
      isNotEmpty_bvy38t$: function ($receiver) {
        return !_.kotlin.isEmpty_bvy38t$($receiver);
      },
      isNotEmpty_rjqrz0$: function ($receiver) {
        return !_.kotlin.isEmpty_rjqrz0$($receiver);
      },
      isNotEmpty_tmsbgp$: function ($receiver) {
        return !_.kotlin.isEmpty_tmsbgp$($receiver);
      },
      isNotEmpty_se6h4y$: function ($receiver) {
        return !_.kotlin.isEmpty_se6h4y$($receiver);
      },
      isNotEmpty_i2lc78$: function ($receiver) {
        return !_.kotlin.isEmpty_i2lc78$($receiver);
      },
      all_de9h66$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_50zxbw$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_x245au$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_h5ed0c$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_24jijj$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_im8pe8$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_1xntkt$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_3cuuyy$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_p67zio$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_vqr6wr$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_gld13f$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_9fpnal$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      all_t73kuc$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (!predicate(element))
              return false;
          }
        }
        return true;
      },
      any_2hx8bi$: function ($receiver) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            return true;
          }
        }
        return false;
      },
      any_l1lu5s$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_964n92$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_355nu0$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_bvy38t$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_rjqrz0$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_tmsbgp$: function ($receiver) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            return true;
          }
        }
        return false;
      },
      any_se6h4y$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_i2lc78$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_h3panj$: function ($receiver) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_s8ckw1$: function ($receiver) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_pdnvbz$: function ($receiver) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_pdl1w0$: function ($receiver) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return true;
          }
        }
        return false;
      },
      any_de9h66$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_50zxbw$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_x245au$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_h5ed0c$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_24jijj$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_im8pe8$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_1xntkt$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_3cuuyy$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_p67zio$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_vqr6wr$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_gld13f$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_9fpnal$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      any_t73kuc$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return true;
          }
        }
        return false;
      },
      count_2hx8bi$: function ($receiver) {
        return $receiver.length;
      },
      count_l1lu5s$: function ($receiver) {
        return $receiver.length;
      },
      count_964n92$: function ($receiver) {
        return $receiver.length;
      },
      count_355nu0$: function ($receiver) {
        return $receiver.length;
      },
      count_bvy38t$: function ($receiver) {
        return $receiver.length;
      },
      count_rjqrz0$: function ($receiver) {
        return $receiver.length;
      },
      count_tmsbgp$: function ($receiver) {
        return $receiver.length;
      },
      count_se6h4y$: function ($receiver) {
        return $receiver.length;
      },
      count_i2lc78$: function ($receiver) {
        return $receiver.length;
      },
      count_tkvw3h$: function ($receiver) {
        return _.kotlin.get_size_0($receiver);
      },
      count_h3panj$: function ($receiver) {
        var count = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            count++;
          }
        }
        return count;
      },
      count_s8ckw1$: function ($receiver) {
        return _.kotlin.get_size_1($receiver);
      },
      count_pdnvbz$: function ($receiver) {
        var count = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            count++;
          }
        }
        return count;
      },
      count_pdl1w0$: function ($receiver) {
        return _.kotlin.get_size($receiver);
      },
      count_de9h66$: function ($receiver, predicate) {
        var count = 0;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_50zxbw$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_x245au$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_h5ed0c$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_24jijj$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_im8pe8$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_1xntkt$: function ($receiver, predicate) {
        var count = 0;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_3cuuyy$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_p67zio$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_vqr6wr$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_gld13f$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_9fpnal$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      count_t73kuc$: function ($receiver, predicate) {
        var count = 0;
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              count++;
          }
        }
        return count;
      },
      fold_8stajs$: function ($receiver, initial, operation) {
        var accumulator = initial;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_v8qmra$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_4lvz2o$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_gtjzry$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_pn2g5j$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_tj8q8m$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_s4q4mb$: function ($receiver, initial, operation) {
        var accumulator = initial;
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_g9t0ho$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_8hjqyy$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_gu2wyd$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_9hsf09$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      fold_xn4ira$: function ($receiver, initial, operation) {
        var accumulator = initial;
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            accumulator = operation(accumulator, element);
          }
        }
        return accumulator;
      },
      foldRight_8stajs$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_v8qmra$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_4lvz2o$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_gtjzry$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_pn2g5j$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_tj8q8m$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_s4q4mb$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_g9t0ho$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_8hjqyy$: function ($receiver, initial, operation) {
        var index = $receiver.length - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      foldRight_qwc90p$: function ($receiver, initial, operation) {
        var index = _.kotlin.get_size_0($receiver) - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver.get_za3lpa$(index--), accumulator);
        }
        return accumulator;
      },
      foldRight_xn4ira$: function ($receiver, initial, operation) {
        var index = _.kotlin.get_size($receiver) - 1;
        var accumulator = initial;
        while (index >= 0) {
          accumulator = operation($receiver.charAt(index--), accumulator);
        }
        return accumulator;
      },
      forEach_de9h66$: function ($receiver, operation) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            operation(element);
          }
        }
      },
      forEach_50zxbw$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_x245au$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_h5ed0c$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_24jijj$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_im8pe8$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_1xntkt$: function ($receiver, operation) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            operation(element);
          }
        }
      },
      forEach_3cuuyy$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_p67zio$: function ($receiver, operation) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_vqr6wr$: function ($receiver, operation) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_gld13f$: function ($receiver, operation) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_9fpnal$: function ($receiver, operation) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      forEach_t73kuc$: function ($receiver, operation) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            operation(element);
          }
        }
      },
      max_2hx8bi$: function ($receiver) {
        if (_.kotlin.isEmpty_2hx8bi$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_7($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_964n92$: function ($receiver) {
        if (_.kotlin.isEmpty_964n92$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_0($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_355nu0$: function ($receiver) {
        if (_.kotlin.isEmpty_355nu0$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_6($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_bvy38t$: function ($receiver) {
        if (_.kotlin.isEmpty_bvy38t$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_5($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_rjqrz0$: function ($receiver) {
        if (_.kotlin.isEmpty_rjqrz0$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_4($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_tmsbgp$: function ($receiver) {
        if (_.kotlin.isEmpty_tmsbgp$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_2($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_se6h4y$: function ($receiver) {
        if (_.kotlin.isEmpty_se6h4y$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_3($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_i2lc78$: function ($receiver) {
        if (_.kotlin.isEmpty_i2lc78$($receiver))
          return null;
        var max = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_1($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (max < e)
              max = e;
          }
        }
        return max;
      },
      max_h3panj$: function ($receiver) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var max = iterator.next();
        while (iterator.hasNext()) {
          var e = iterator.next();
          if (max < e)
            max = e;
        }
        return max;
      },
      max_pdnvbz$: function ($receiver) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var max = iterator.next();
        while (iterator.hasNext()) {
          var e = iterator.next();
          if (max < e)
            max = e;
        }
        return max;
      },
      max_pdl1w0$: function ($receiver) {
        var iterator = _.kotlin.iterator_gw00vq$($receiver);
        if (!iterator.hasNext())
          return null;
        var max = iterator.next();
        while (iterator.hasNext()) {
          var e = iterator.next();
          if (max < e)
            max = e;
        }
        return max;
      },
      maxBy_de9h66$: function ($receiver, f) {
        if (_.kotlin.isEmpty_2hx8bi$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_7($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_50zxbw$: function ($receiver, f) {
        if (_.kotlin.isEmpty_l1lu5s$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_x245au$: function ($receiver, f) {
        if (_.kotlin.isEmpty_964n92$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_0($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_h5ed0c$: function ($receiver, f) {
        if (_.kotlin.isEmpty_355nu0$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_6($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_24jijj$: function ($receiver, f) {
        if (_.kotlin.isEmpty_bvy38t$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_5($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_im8pe8$: function ($receiver, f) {
        if (_.kotlin.isEmpty_rjqrz0$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_4($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_1xntkt$: function ($receiver, f) {
        if (_.kotlin.isEmpty_tmsbgp$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_2($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_3cuuyy$: function ($receiver, f) {
        if (_.kotlin.isEmpty_se6h4y$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_3($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_p67zio$: function ($receiver, f) {
        if (_.kotlin.isEmpty_i2lc78$($receiver))
          return null;
        var maxElem = $receiver[0];
        var maxValue = f(maxElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_1($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (maxValue < v) {
              maxElem = e;
              maxValue = v;
            }
          }
        }
        return maxElem;
      },
      maxBy_vqr6wr$: function ($receiver, f) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var maxElem = iterator.next();
        var maxValue = f(maxElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (maxValue < v) {
            maxElem = e;
            maxValue = v;
          }
        }
        return maxElem;
      },
      maxBy_9fpnal$: function ($receiver, f) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var maxElem = iterator.next();
        var maxValue = f(maxElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (maxValue < v) {
            maxElem = e;
            maxValue = v;
          }
        }
        return maxElem;
      },
      maxBy_t73kuc$: function ($receiver, f) {
        var iterator = _.kotlin.iterator_gw00vq$($receiver);
        if (!iterator.hasNext())
          return null;
        var maxElem = iterator.next();
        var maxValue = f(maxElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (maxValue < v) {
            maxElem = e;
            maxValue = v;
          }
        }
        return maxElem;
      },
      maxBy_gld13f$: function ($receiver, f) {
        var iterator = _.kotlin.iterator_s8ckw1$($receiver);
        if (!iterator.hasNext())
          return null;
        var maxElem = iterator.next();
        var maxValue = f(maxElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (maxValue < v) {
            maxElem = e;
            maxValue = v;
          }
        }
        return maxElem;
      },
      min_2hx8bi$: function ($receiver) {
        if (_.kotlin.isEmpty_2hx8bi$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_7($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_964n92$: function ($receiver) {
        if (_.kotlin.isEmpty_964n92$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_0($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_355nu0$: function ($receiver) {
        if (_.kotlin.isEmpty_355nu0$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_6($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_bvy38t$: function ($receiver) {
        if (_.kotlin.isEmpty_bvy38t$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_5($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_rjqrz0$: function ($receiver) {
        if (_.kotlin.isEmpty_rjqrz0$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_4($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_tmsbgp$: function ($receiver) {
        if (_.kotlin.isEmpty_tmsbgp$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_2($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_se6h4y$: function ($receiver) {
        if (_.kotlin.isEmpty_se6h4y$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_3($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_i2lc78$: function ($receiver) {
        if (_.kotlin.isEmpty_i2lc78$($receiver))
          return null;
        var min = $receiver[0];
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_1($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            if (min > e)
              min = e;
          }
        }
        return min;
      },
      min_h3panj$: function ($receiver) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var min = iterator.next();
        while (iterator.hasNext()) {
          var e = iterator.next();
          if (min > e)
            min = e;
        }
        return min;
      },
      min_pdnvbz$: function ($receiver) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var min = iterator.next();
        while (iterator.hasNext()) {
          var e = iterator.next();
          if (min > e)
            min = e;
        }
        return min;
      },
      min_pdl1w0$: function ($receiver) {
        var iterator = _.kotlin.iterator_gw00vq$($receiver);
        if (!iterator.hasNext())
          return null;
        var min = iterator.next();
        while (iterator.hasNext()) {
          var e = iterator.next();
          if (min > e)
            min = e;
        }
        return min;
      },
      minBy_de9h66$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_7($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_50zxbw$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_x245au$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_0($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_h5ed0c$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_6($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_24jijj$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_5($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_im8pe8$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_4($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_1xntkt$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_2($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_3cuuyy$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_3($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_p67zio$: function ($receiver, f) {
        if ($receiver.length === 0)
          return null;
        var minElem = $receiver[0];
        var minValue = f(minElem);
        var tmp$0;
        {
          tmp$0 = _.kotlin.get_lastIndex_1($receiver) + 1;
          for (var i = 1; i !== tmp$0; i++) {
            var e = $receiver[i];
            var v = f(e);
            if (minValue > v) {
              minElem = e;
              minValue = v;
            }
          }
        }
        return minElem;
      },
      minBy_vqr6wr$: function ($receiver, f) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var minElem = iterator.next();
        var minValue = f(minElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (minValue > v) {
            minElem = e;
            minValue = v;
          }
        }
        return minElem;
      },
      minBy_9fpnal$: function ($receiver, f) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          return null;
        var minElem = iterator.next();
        var minValue = f(minElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (minValue > v) {
            minElem = e;
            minValue = v;
          }
        }
        return minElem;
      },
      minBy_t73kuc$: function ($receiver, f) {
        var iterator = _.kotlin.iterator_gw00vq$($receiver);
        if (!iterator.hasNext())
          return null;
        var minElem = iterator.next();
        var minValue = f(minElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (minValue > v) {
            minElem = e;
            minValue = v;
          }
        }
        return minElem;
      },
      minBy_gld13f$: function ($receiver, f) {
        var iterator = _.kotlin.iterator_s8ckw1$($receiver);
        if (!iterator.hasNext())
          return null;
        var minElem = iterator.next();
        var minValue = f(minElem);
        while (iterator.hasNext()) {
          var e = iterator.next();
          var v = f(e);
          if (minValue > v) {
            minElem = e;
            minValue = v;
          }
        }
        return minElem;
      },
      none_2hx8bi$: function ($receiver) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            return false;
          }
        }
        return true;
      },
      none_l1lu5s$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_964n92$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_355nu0$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_bvy38t$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_rjqrz0$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_tmsbgp$: function ($receiver) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            return false;
          }
        }
        return true;
      },
      none_se6h4y$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_i2lc78$: function ($receiver) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_h3panj$: function ($receiver) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_s8ckw1$: function ($receiver) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_pdnvbz$: function ($receiver) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_pdl1w0$: function ($receiver) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            return false;
          }
        }
        return true;
      },
      none_de9h66$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_50zxbw$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_x245au$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_h5ed0c$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_24jijj$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_im8pe8$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_1xntkt$: function ($receiver, predicate) {
        var tmp$0, tmp$1, tmp$2;
        {
          tmp$0 = $receiver, tmp$1 = tmp$0.length;
          for (var tmp$2 = 0; tmp$2 !== tmp$1; ++tmp$2) {
            var element = tmp$0[tmp$2];
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_3cuuyy$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_p67zio$: function ($receiver, predicate) {
        {
          var tmp$0 = Kotlin.arrayIterator($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_vqr6wr$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_gld13f$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_s8ckw1$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_9fpnal$: function ($receiver, predicate) {
        {
          var tmp$0 = $receiver.iterator();
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      none_t73kuc$: function ($receiver, predicate) {
        {
          var tmp$0 = _.kotlin.iterator_gw00vq$($receiver);
          while (tmp$0.hasNext()) {
            var element = tmp$0.next();
            if (predicate(element))
              return false;
          }
        }
        return true;
      },
      reduce_de9h67$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_50zxbx$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_x245av$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_h5ed0b$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_24jijk$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_im8pe7$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_1xntks$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_3cuuyz$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_p67zip$: function ($receiver, operation) {
        var iterator = Kotlin.arrayIterator($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_vqr6ws$: function ($receiver, operation) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_9fpnam$: function ($receiver, operation) {
        var iterator = $receiver.iterator();
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduce_t73kub$: function ($receiver, operation) {
        var iterator = _.kotlin.iterator_gw00vq$($receiver);
        if (!iterator.hasNext())
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = iterator.next();
        while (iterator.hasNext()) {
          accumulator = operation(accumulator, iterator.next());
        }
        return accumulator;
      },
      reduceRight_de9h67$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_50zxbx$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_x245av$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_h5ed0b$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_24jijk$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_im8pe7$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_1xntks$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_3cuuyz$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_p67zip$: function ($receiver, operation) {
        var index = $receiver.length - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver[index--];
        while (index >= 0) {
          accumulator = operation($receiver[index--], accumulator);
        }
        return accumulator;
      },
      reduceRight_7bxqi8$: function ($receiver, operation) {
        var index = _.kotlin.get_size_0($receiver) - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver.get_za3lpa$(index--);
        while (index >= 0) {
          accumulator = operation($receiver.get_za3lpa$(index--), accumulator);
        }
        return accumulator;
      },
      reduceRight_t73kub$: function ($receiver, operation) {
        var index = _.kotlin.get_size($receiver) - 1;
        if (index < 0)
          throw new Kotlin.UnsupportedOperationException("Empty iterable can't be reduced");
        var accumulator = $receiver.charAt(index--);
        while (index >= 0) {
          accumulator = operation($receiver.charAt(index--), accumulator);
        }
        return accumulator;
      },
      support: Kotlin.definePackage(function () {
        this.State = Kotlin.createObject(null, function () {
          this.Ready = 0;
          this.NotReady = 1;
          this.Done = 2;
          this.Failed = 3;
        });
      }, /** @lends _.kotlin.support */ {
        AbstractIterator: Kotlin.createClass(function () {
          return [Kotlin.Iterator];
        }, function () {
          this.state_xrvatb$ = _.kotlin.support.State.NotReady;
          this.nextValue_u0jzfw$ = null;
        }, /** @lends _.kotlin.support.AbstractIterator.prototype */ {
          hasNext: function () {
            _.kotlin.require_eltq40$(this.state_xrvatb$ !== _.kotlin.support.State.Failed);
            var tmp$0 = this.state_xrvatb$, tmp$1;
            if (tmp$0 === _.kotlin.support.State.Done)
              tmp$1 = false;
            else if (tmp$0 === _.kotlin.support.State.Ready)
              tmp$1 = true;
            else
              tmp$1 = this.tryToComputeNext();
            return tmp$1;
          },
          next: function () {
            if (!this.hasNext())
              throw new Kotlin.NoSuchElementException();
            this.state_xrvatb$ = _.kotlin.support.State.NotReady;
            return this.nextValue_u0jzfw$;
          },
          peek: function () {
            if (!this.hasNext())
              throw new Kotlin.NoSuchElementException();
            return this.nextValue_u0jzfw$;
          },
          tryToComputeNext: function () {
            this.state_xrvatb$ = _.kotlin.support.State.Failed;
            this.computeNext();
            return this.state_xrvatb$ === _.kotlin.support.State.Ready;
          },
          setNext_za3rmp$: function (value) {
            this.nextValue_u0jzfw$ = value;
            this.state_xrvatb$ = _.kotlin.support.State.Ready;
          },
          done: function () {
            this.state_xrvatb$ = _.kotlin.support.State.Done;
          }
        })
      })
    })
  });
  Kotlin.defineModule('occi', _);
}(Kotlin));

var OCCI = Kotlin.modules['occi'];